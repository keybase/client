@namespace("keybase.1")

protocol chatLocal {

  import idl "github.com/keybase/gregor/protocol/chat1" as chat1;

  record MessageText {
    string body;
  }

  record MessageConversationMetadata {
    string conversationTitle;
  }

  record MessageEdit {
    chat1.MessageID messageID;
    string body;
  }

  record MessageDelete {
    chat1.MessageID messageID;
  }

  record MessageAttachment {
    string path;
  }

  record MessageBody {
    chat1.MessageType type;
    union { null, MessageText } text;
    union { null, MessageAttachment } attachment;
    union { null, MessageEdit } edit;
    union { null, MessageDelete } delete;
    union { null, MessageConversationMetadata } conversationMetadata;
  }

  // This is what is encrypted and sent over as bodyCiphertext.
  record MessagePlaintext {
    chat1.MessageClientHeader clientHeader;
    array<MessageBody> messageBodies;
  }

  record Message {
    chat1.MessageServerHeader serverHeader;
    MessagePlaintext messagePlaintext;
  }

  record ThreadView {
    array<Message> messages;
    union { null, chat1.Pagination } pagination;
  }

  chat1.InboxView getInboxLocal(union { null, chat1.Pagination } pagination);
  ThreadView getThreadLocal(chat1.ConversationID conversationID, union { null, chat1.Pagination } pagination);
  void postLocal(chat1.ConversationID conversationID, MessagePlaintext messagePlaintext);
  void newConversationLocal(chat1.ConversationIDTriple conversationTriple);
}
