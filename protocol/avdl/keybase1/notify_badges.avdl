@namespace("keybase.1")
protocol NotifyBadges {
  import idl "common.avdl";
  import idl "../gregor1" as gregor1;

  @typedef("bytes")  record ChatConversationID {}

  record TeamMemberOutReset {
    TeamID teamID;
    string teamname;
    string username;
    UID uid;
    gregor1.MsgID id;
  }

  record DeletedTeamInfo {
    string teamName;
    string deletedBy;
    gregor1.MsgID id;
  }

  record WalletAccountInfo {
    string accountID;
    int numUnread;
  }

  record ResetState {
    @jsonkey("end_time")
    Time endTime;
    boolean active;
  }

  record BadgeState {
    @lint("ignore")
    int newTlfs;
    int rekeysNeeded;
    int newFollowers;
    int inboxVers;
    int homeTodoItems;
    int unverifiedEmails;
    int unverifiedPhones;
    int smallTeamBadgeCount;
    int bigTeamBadgeCount;

    array<DeviceID> newDevices;
    array<DeviceID> revokedDevices;
    array<BadgeConversationInfo> conversations;
    array<string> newGitRepoGlobalUniqueIDs;
    array<TeamID> newTeams;
    array<DeletedTeamInfo> deletedTeams;
    array<TeamID> newTeamAccessRequests;
    array<TeamMemberOutReset> teamsWithResetUsers;
    array<WalletAccountInfo> unreadWalletAccounts;
    ResetState resetState;
  }

  record BadgeConversationInfo {
    ChatConversationID convID;
    int badgeCount;
    int unreadMessages;
  }

  @notify("")
  void badgeState(BadgeState badgeState);
}
