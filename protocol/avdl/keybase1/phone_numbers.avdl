@namespace("keybase.1")
protocol phoneNumbers {
    import idl "common.avdl";

    // Phone number, possibly invalid
    @typedef("string")
    record RawPhoneNumber {}

    /**
     Phone number support for TOFU chats.
    */
    record UserPhoneNumber {
      @jsonkey("phone_number")
      PhoneNumber phoneNumber;
      @jsonkey("verified")
      boolean verified;
      @jsonkey("visibility")
      IdentityVisibility visibility;
      @jsonkey("ctime")
      UnixTime ctime;

    }
    record PhoneNumberLookupResult {
       @jsonkey("phone_number")
       RawPhoneNumber phoneNumber;
       @jsonkey("coerced_phone_number")
       PhoneNumber coercedPhoneNumber;
       @jsonkey("err")
       union { null, string } err;
       @jsonkey("uid")
       union { null, UID } uid;
    }

    void addPhoneNumber(int sessionID, PhoneNumber phoneNumber, IdentityVisibility visibility);
    void editPhoneNumber(int sessionID, PhoneNumber oldPhoneNumber, PhoneNumber phoneNumber, IdentityVisibility visibility);
    void verifyPhoneNumber(int sessionID, PhoneNumber phoneNumber, string code);
    array<UserPhoneNumber> getPhoneNumbers(int sessionID);
    void deletePhoneNumber(int sessionID, PhoneNumber phoneNumber);
    void setVisibilityPhoneNumber(int sessionID, PhoneNumber phoneNumber, IdentityVisibility visibility);
    void setVisibilityAllPhoneNumber(int sessionID, IdentityVisibility visibility);
    array<PhoneNumberLookupResult> bulkLookupPhoneNumbers(int sessionID, array<RawPhoneNumber> phoneNumberContacts, array<RegionCode> regionCodes, union { null, RegionCode } userRegionCode);

    record PhoneNumberAddedMsg {
        @jsonkey("phone")
        PhoneNumber phoneNumber;
    }

    record PhoneNumberVerifiedMsg {
        @jsonkey("phone")
        PhoneNumber phoneNumber;
    }

    record PhoneNumberSupersededMsg {
        @jsonkey("phone")
        PhoneNumber phoneNumber;
    }
}
