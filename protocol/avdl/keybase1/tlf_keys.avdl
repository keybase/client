@namespace("keybase.1")

// tlfKeys defines RPC protocol from service (keybase daemon) to kbfs for
// getting TLF keys
protocol tlfKeys {
  import idl "common.avdl";
  import idl "identify.avdl";

  enum TLFIdentifyBehavior {
    DEFAULT_KBFS_0,
    CHAT_CLI_1,
    CHAT_GUI_2
  }

  @typedef("string")
  @lint("ignore")
  record CanonicalTlfName {}

  record CryptKey {
    int keyGeneration;
    Bytes32 key;
  }

  record TLFBreak {
    array<TLFIdentifyFailure> breaks;
  }

  record TLFIdentifyFailure {
    User user;
    union { null, IdentifyTrackBreaks } breaks;
  }

  record GetTLFCryptKeysRes {
    CanonicalTLFNameAndIDWithBreaks nameIDBreaks;

    // crypt keys of all generations for this TLF, in order, starting from
    // FirstValidKeyGen
    array<CryptKey> cryptKeys;
  }

  record TLFQuery {
    string tlfName;
    TLFIdentifyBehavior identifyBehavior;
  }

  /**
   getTLFCryptKeys returns TLF crypt keys from all generations and the TLF ID.
   TLF ID should not be cached or stored persistently.
   */
  GetTLFCryptKeysRes getTLFCryptKeys(TLFQuery query);

  record CanonicalTLFNameAndIDWithBreaks {
    TLFID tlfID;
    CanonicalTlfName canonicalName;

    TLFBreak breaks;
  }

  /**
   getPublicCanonicalTLFNameAndID return the canonical name and TLFID for tlfName.
   TLF ID should not be cached or stored persistently.
   */
  CanonicalTLFNameAndIDWithBreaks getPublicCanonicalTLFNameAndID(TLFQuery query);
}
