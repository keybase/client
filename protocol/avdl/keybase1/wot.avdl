@namespace("keybase.1")

protocol wot {
  import idl "common.avdl";

  // none (""), audio, video, email, other_chat, in_person
  @typedef("string")
  record UsernameVerificationType {}

  record Confidence {
    @jsonkey("vouched_by,omitempty")
    array<UID> vouchedBy;
    array<SigID> proofs;
    @jsonkey("username_verified_via,omitempty")
    UsernameVerificationType usernameVerifiedVia;
    string other;
    @jsonkey("known_on_keybase_days,omitempty")
    int knownOnKeybaseDays;
  }

  record PendingVouch {
    UserVersion voucher;
    SigID proof;
    array<string> vouchTexts;
    union { null, Confidence } confidence;
  }

  array<PendingVouch> wotPending(int sessionID);

  void wotVouch(int sessionID, UserVersion uv, array<string> vouchTexts, Confidence confidence);

  void wotVouchCLI(int sessionID, string assertion, array<string> vouchTexts, Confidence confidence);
}
