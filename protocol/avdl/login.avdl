
@namespace("keybase.1")
protocol login {

  import idl "common.avdl";

  record ConfiguredAccount {
    string username;
    boolean hasStoredSecret;
  }

  /**
    Returns an array of information about accounts configured on the local
    machine. Currently configured accounts are defined as those that have stored
    secrets, but this definition may be expanded in the future.
    */
  array<ConfiguredAccount> getConfiguredAccounts(int sessionID);

  /**
    Performs login.  deviceType should be libkb.DeviceTypeDesktop
    or libkb.DeviceTypeMobile.  username is optional.
    If the current device isn't provisioned, this function will
    provision it.
    */
  void login(int sessionID, string deviceType, string username, ClientType clientType);

  /**
    Removes any existing stored secret for the given username.
    loginWithStoredSecret(_, username) will fail after this is called.
    */
  void clearStoredSecret(int sessionID, string username);

  void logout(int sessionID);
  void deprovision(int sessionID, string username, boolean doRevoke);

  void recoverAccountFromEmailAddress(string email);

  /**
    PaperKey generates paper backup keys for restoring an account.
    It calls login_ui.displayPaperKeyPhrase with the phrase.
    */
  void paperKey(int sessionID);

  /**
    Unlock restores access to local key store by priming passphrase stream cache.
    */
  void unlock(int sessionID);
  void unlockWithPassphrase(int sessionID, string passphrase);

}
