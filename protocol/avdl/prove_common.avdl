@namespace("keybase.1")
protocol prove_common {

  @defaults({
    "NONE":0,
    "OK":1,
    "TEMP_FAILURE":2,
    "PERM_FAILURE":3,
    "LOOKING":4,
    "SUPERSEDED":5,
    "POSTED":6,
    "REVOKED":7
  })
  enum ProofState {
    NONE, OK, TEMP_FAILURE, PERM_FAILURE, LOOKING, SUPERSEDED, POSTED, REVOKED
  }

  /**
    3: It's been found in the hunt, but not proven yet
    1xx: Retryable soft errors
    2xx: Will likely result in a hard error, if repeated enough
    3xx: Hard final errors
   */
  @defaults({
    "NONE":0,
    "OK":1,
    "LOCAL":2,
    "FOUND":3,

    "HOST_UNREACHABLE":101,
    "PERMISSION_DENIED":103,
    "FAILED_PARSE":106,
    "DNS_ERROR":107,
    "AUTH_FAILED":108,
    "HTTP_500":150,
    "TIMEOUT":160,
    "INTERNAL_ERROR":170,

    "NOT_FOUND":201,
    "CONTENT_FAILURE":202,
    "BAD_USERNAME":203,
    "BAD_REMOTE_ID":204,
    "TEXT_NOT_FOUND":205,
    "BAD_ARGS":206,
    "CONTENT_MISSING":207,
    "TITLE_NOT_FOUND":208,
    "SERVICE_ERROR":209,
    "TOR_SKIPPED":210,
    "TOR_INCOMPATIBLE":211,
    "HTTP_300":230,
    "HTTP_400":240,
    "HTTP_OTHER":260,
    "EMPTY_JSON": 270,

    "DELETED":301,
    "SERVICE_DEAD":302,
    "BAD_SIGNATURE":303,
    "BAD_API_URL":304,
    "UNKNOWN_TYPE":305,
    "NO_HINT":306,
    "BAD_HINT_TEXT":307
  })
  enum ProofCheckStatus {
    NONE, OK, LOCAL, FOUND, HOST_UNREACHABLE, PERMISSION_DENIED, FAILED_PARSE, DNS_ERROR, AUTH_FAILED, HTTP_500, TIMEOUT, INTERNAL_ERROR, NOT_FOUND, CONTENT_FAILURE, BAD_USERNAME, BAD_REMOTE_ID, TEXT_NOT_FOUND, BAD_ARGS, CONTENT_MISSING, TITLE_NOT_FOUND, SERVICE_ERROR, TOR_SKIPPED, TOR_INCOMPATIBLE, HTTP_300, HTTP_400, HTTP_OTHER, EMPTY_JSON, DELETED, SERVICE_DEAD, BAD_SIGNATURE, BAD_API_URL, UNKNOWN_TYPE, NO_HINT, BAD_HINT_TEXT
  }

  @defaults({
    "NONE":0,
    "KEYBASE":1,
    "TWITTER":2,
    "GITHUB":3,
    "REDDIT":4,
    "COINBASE":5,
    "HACKERNEWS":6,
    "GENERIC_WEB_SITE":1000,
    "DNS":1001
  })
  enum ProofType {
    NONE, KEYBASE, TWITTER, GITHUB, REDDIT, COINBASE, HACKERNEWS, GENERIC_WEB_SITE, DNS
  }
}
