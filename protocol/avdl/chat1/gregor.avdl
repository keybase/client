@namespace("chat.1")
protocol gregor {

    import idl "github.com/keybase/client/go/protocol/gregor1" as gregor1;
    import idl "github.com/keybase/client/go/protocol/keybase1" as keybase1;

    record GenericPayload {
        @lint("ignore")
        string Action;
        InboxVers inboxVers;
        ConversationID convID;
    }

    record NewConversationPayload {
        @lint("ignore")
        string Action;
        ConversationID convID;
        InboxVers inboxVers;
        union { null, UnreadUpdate } unreadUpdate;
    }

    record NewMessagePayload {
        @lint("ignore")
        string Action;
        ConversationID convID;
        MessageBoxed message;
        InboxVers inboxVers;
        union { null, UnreadUpdate } unreadUpdate;
    }

    record ReadMessagePayload {
        @lint("ignore")
        string Action;
        ConversationID convID;
        MessageID msgID;
        InboxVers inboxVers;
        union { null, UnreadUpdate } unreadUpdate;
    }

    record SetStatusPayload {
        @lint("ignore")
        string Action;
        ConversationID convID;
        ConversationStatus status;
        InboxVers inboxVers;
        union { null, UnreadUpdate } unreadUpdate;
    }

    record TeamTypePayload {
        @lint("ignore")
        string Action;
        ConversationID convID;
        TeamType teamType;
        InboxVers inboxVers;
        union { null, UnreadUpdate } unreadUpdate;
    }

    record SetAppNotificationSettingsPayload {
        @lint("ignore")
        string Action;
        ConversationID convID;
        InboxVers inboxVers;
        ConversationNotificationInfo settings;
    }

    record UnreadUpdate {
        ConversationID convID;
        // The count of unread messages to display
        // Counts only visible types of messages deserving of a badge, no EDITs
        int unreadMessages;
        map<keybase1.DeviceType, int> unreadNotifyingMessages;
    }

    record TLFFinalizeUpdate {
        ConversationFinalizeInfo finalizeInfo;
        array<ConversationID> convIDs;
        InboxVers inboxVers;
    }

    record TLFResolveUpdate {
        ConversationID convID;
        InboxVers inboxVers;
    }

    record RemoteUserTypingUpdate {
        gregor1.UID uid;
        gregor1.DeviceID deviceID;
        ConversationID convID;
        boolean typing;
    }

    record UpdateConversationMembership {
        InboxVers inboxVers;
        array<ConversationMember> joined;
        array<ConversationMember> removed;
        union { null, UnreadUpdate } unreadUpdate;
    }
}
