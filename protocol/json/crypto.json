{
  "protocol" : "crypto",
  "namespace" : "keybase.1",
  "types" : [ {
    "type" : "fixed",
    "name" : "ED25519PublicKey",
    "size" : 32
  }, {
    "type" : "fixed",
    "name" : "ED25519Signature",
    "size" : 64
  }, {
    "type" : "record",
    "name" : "ED25519SignatureInfo",
    "fields" : [ {
      "name" : "sig",
      "type" : "ED25519Signature"
    }, {
      "name" : "publicKey",
      "type" : "ED25519PublicKey"
    } ]
  }, {
    "type" : "fixed",
    "name" : "Bytes32",
    "size" : 32
  }, {
    "type" : "fixed",
    "name" : "EncryptedBytes32",
    "size" : 48
  }, {
    "type" : "fixed",
    "name" : "BoxNonce",
    "size" : 24
  }, {
    "type" : "fixed",
    "name" : "BoxPublicKey",
    "size" : 32
  } ],
  "messages" : {
    "signED25519" : {
      "doc" : "Sign the given message (which should be small) using the device's private\n    signing ED25519 key, and return the signature as well as the corresponding\n    public key that can be used to verify the signature. The 'reason' parameter\n    is used as part of the SecretEntryArg object passed into\n    secretUi.getSecret().",
      "request" : [ {
        "name" : "msg",
        "type" : "bytes"
      }, {
        "name" : "reason",
        "type" : "string"
      } ],
      "response" : "ED25519SignatureInfo"
    },
    "signToString" : {
      "doc" : "Same as the above except the full marsheled and encoded NaclSigInfo.",
      "request" : [ {
        "name" : "msg",
        "type" : "bytes"
      }, {
        "name" : "reason",
        "type" : "string"
      } ],
      "response" : "string"
    },
    "unboxBytes32" : {
      "doc" : "Decrypt exactly 32 bytes using nacl/box with the given nonce, the given\n    peer's public key, and the device's private encryption key, and return the\n    decrypted data. The 'reason' parameter is used as part of the\n    SecretEntryArg object passed into secretUi.getSecret().",
      "request" : [ {
        "name" : "encryptedBytes32",
        "type" : "EncryptedBytes32"
      }, {
        "name" : "nonce",
        "type" : "BoxNonce"
      }, {
        "name" : "peersPublicKey",
        "type" : "BoxPublicKey"
      }, {
        "name" : "reason",
        "type" : "string"
      } ],
      "response" : "Bytes32"
    }
  }
}