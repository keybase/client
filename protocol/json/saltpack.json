{
  "protocol": "saltpack",
  "types": [
    {
      "type": "record",
      "name": "Time",
      "fields": [],
      "typedef": "long"
    },
    {
      "type": "record",
      "name": "StringKVPair",
      "fields": [
        {
          "type": "string",
          "name": "key"
        },
        {
          "type": "string",
          "name": "value"
        }
      ]
    },
    {
      "type": "record",
      "name": "Status",
      "fields": [
        {
          "type": "int",
          "name": "code"
        },
        {
          "type": "string",
          "name": "name"
        },
        {
          "type": "string",
          "name": "desc"
        },
        {
          "type": {
            "type": "array",
            "items": "StringKVPair"
          },
          "name": "fields"
        }
      ]
    },
    {
      "type": "record",
      "name": "UID",
      "fields": [],
      "typedef": "string"
    },
    {
      "type": "record",
      "name": "DeviceID",
      "fields": [],
      "typedef": "string"
    },
    {
      "type": "record",
      "name": "SigID",
      "fields": [],
      "typedef": "string"
    },
    {
      "type": "record",
      "name": "KID",
      "fields": [],
      "typedef": "string"
    },
    {
      "type": "record",
      "name": "Text",
      "fields": [
        {
          "type": "string",
          "name": "data"
        },
        {
          "type": "boolean",
          "name": "markup"
        }
      ]
    },
    {
      "type": "record",
      "name": "PGPIdentity",
      "fields": [
        {
          "type": "string",
          "name": "username"
        },
        {
          "type": "string",
          "name": "comment"
        },
        {
          "type": "string",
          "name": "email"
        }
      ]
    },
    {
      "type": "record",
      "name": "PublicKey",
      "fields": [
        {
          "type": "KID",
          "name": "KID"
        },
        {
          "type": "string",
          "name": "PGPFingerprint"
        },
        {
          "type": {
            "type": "array",
            "items": "PGPIdentity"
          },
          "name": "PGPIdentities"
        },
        {
          "type": "boolean",
          "name": "isSibkey"
        },
        {
          "type": "boolean",
          "name": "isEldest"
        },
        {
          "type": "string",
          "name": "parentID"
        },
        {
          "type": "DeviceID",
          "name": "deviceID"
        },
        {
          "type": "string",
          "name": "deviceDescription"
        },
        {
          "type": "string",
          "name": "deviceType"
        },
        {
          "type": "Time",
          "name": "cTime"
        },
        {
          "type": "Time",
          "name": "eTime"
        }
      ]
    },
    {
      "type": "record",
      "name": "KeybaseTime",
      "fields": [
        {
          "type": "Time",
          "name": "unix"
        },
        {
          "type": "int",
          "name": "chain"
        }
      ]
    },
    {
      "type": "record",
      "name": "RevokedKey",
      "fields": [
        {
          "type": "PublicKey",
          "name": "key"
        },
        {
          "type": "KeybaseTime",
          "name": "time"
        }
      ]
    },
    {
      "type": "record",
      "name": "User",
      "fields": [
        {
          "type": "UID",
          "name": "uid"
        },
        {
          "type": "string",
          "name": "username"
        }
      ]
    },
    {
      "type": "record",
      "name": "Device",
      "fields": [
        {
          "type": "string",
          "name": "type"
        },
        {
          "type": "string",
          "name": "name"
        },
        {
          "type": "DeviceID",
          "name": "deviceID"
        },
        {
          "type": "Time",
          "name": "cTime"
        },
        {
          "type": "Time",
          "name": "mTime"
        },
        {
          "type": "KID",
          "name": "encryptKey"
        },
        {
          "type": "KID",
          "name": "verifyKey"
        },
        {
          "type": "int",
          "name": "status"
        }
      ]
    },
    {
      "type": "record",
      "name": "Stream",
      "fields": [
        {
          "type": "int",
          "name": "fd"
        }
      ]
    },
    {
      "type": "enum",
      "name": "LogLevel",
      "symbols": [
        "NONE_0",
        "DEBUG_1",
        "INFO_2",
        "NOTICE_3",
        "WARN_4",
        "ERROR_5",
        "CRITICAL_6",
        "FATAL_7"
      ]
    },
    {
      "type": "enum",
      "name": "ClientType",
      "symbols": [
        "NONE_0",
        "CLI_1",
        "GUI_2",
        "KBFS_3"
      ]
    },
    {
      "type": "record",
      "name": "UserVersionVector",
      "fields": [
        {
          "type": "long",
          "name": "id"
        },
        {
          "type": "int",
          "name": "sigHints"
        },
        {
          "type": "long",
          "name": "sigChain"
        },
        {
          "type": "Time",
          "name": "cachedAt"
        },
        {
          "type": "Time",
          "name": "lastIdentifiedAt"
        }
      ]
    },
    {
      "type": "record",
      "name": "UserPlusKeys",
      "fields": [
        {
          "type": "UID",
          "name": "uid"
        },
        {
          "type": "string",
          "name": "username"
        },
        {
          "type": {
            "type": "array",
            "items": "PublicKey"
          },
          "name": "deviceKeys"
        },
        {
          "type": {
            "type": "array",
            "items": "RevokedKey"
          },
          "name": "revokedDeviceKeys"
        },
        {
          "type": "int",
          "name": "pgpKeyCount"
        },
        {
          "type": "UserVersionVector",
          "name": "uvv"
        }
      ]
    },
    {
      "type": "enum",
      "name": "MerkleTreeID",
      "symbols": [
        "MASTER_0",
        "KBFS_PUBLIC_1",
        "KBFS_PRIVATE_2"
      ]
    },
    {
      "type": "record",
      "name": "SocialAssertionService",
      "fields": [],
      "doc": "SocialAssertionService is a service that can be used to assert proofs for a\n    user.",
      "typedef": "string"
    },
    {
      "type": "record",
      "name": "SocialAssertion",
      "fields": [
        {
          "type": "string",
          "name": "user"
        },
        {
          "type": "SocialAssertionService",
          "name": "service"
        }
      ],
      "doc": "SocialAssertion contains a service and username for that service, that\n    together form an assertion about a user. Resolving an assertion requires\n    that the user posts a Keybase proof on the asserted service as the asserted\n    user."
    },
    {
      "type": "record",
      "name": "UserResolution",
      "fields": [
        {
          "type": "SocialAssertion",
          "name": "assertion"
        },
        {
          "type": "UID",
          "name": "userID"
        }
      ],
      "doc": "UserResolution maps how an unresolved user assertion has been resolved."
    },
    {
      "type": "enum",
      "name": "ProofState",
      "symbols": [
        "NONE_0",
        "OK_1",
        "TEMP_FAILURE_2",
        "PERM_FAILURE_3",
        "LOOKING_4",
        "SUPERSEDED_5",
        "POSTED_6",
        "REVOKED_7"
      ]
    },
    {
      "type": "enum",
      "name": "ProofStatus",
      "symbols": [
        "NONE_0",
        "OK_1",
        "LOCAL_2",
        "FOUND_3",
        "BASE_ERROR_100",
        "HOST_UNREACHABLE_101",
        "PERMISSION_DENIED_103",
        "FAILED_PARSE_106",
        "DNS_ERROR_107",
        "AUTH_FAILED_108",
        "HTTP_429_129",
        "HTTP_500_150",
        "TIMEOUT_160",
        "INTERNAL_ERROR_170",
        "BASE_HARD_ERROR_200",
        "NOT_FOUND_201",
        "CONTENT_FAILURE_202",
        "BAD_USERNAME_203",
        "BAD_REMOTE_ID_204",
        "TEXT_NOT_FOUND_205",
        "BAD_ARGS_206",
        "CONTENT_MISSING_207",
        "TITLE_NOT_FOUND_208",
        "SERVICE_ERROR_209",
        "TOR_SKIPPED_210",
        "TOR_INCOMPATIBLE_211",
        "HTTP_300_230",
        "HTTP_400_240",
        "HTTP_OTHER_260",
        "EMPTY_JSON_270",
        "DELETED_301",
        "SERVICE_DEAD_302",
        "BAD_SIGNATURE_303",
        "BAD_API_URL_304",
        "UNKNOWN_TYPE_305",
        "NO_HINT_306",
        "BAD_HINT_TEXT_307"
      ],
      "doc": "3: It's been found in the hunt, but not proven yet\n    1xx: Retryable soft errors\n    2xx: Will likely result in a hard error, if repeated enough\n    3xx: Hard final errors"
    },
    {
      "type": "enum",
      "name": "ProofType",
      "symbols": [
        "NONE_0",
        "KEYBASE_1",
        "TWITTER_2",
        "GITHUB_3",
        "REDDIT_4",
        "COINBASE_5",
        "HACKERNEWS_6",
        "GENERIC_WEB_SITE_1000",
        "DNS_1001",
        "PGP_1002",
        "ROOTER_100001"
      ]
    },
    {
      "type": "record",
      "name": "TrackToken",
      "fields": [],
      "typedef": "string"
    },
    {
      "type": "enum",
      "name": "TrackDiffType",
      "symbols": [
        "NONE_0",
        "ERROR_1",
        "CLASH_2",
        "REVOKED_3",
        "UPGRADED_4",
        "NEW_5",
        "REMOTE_FAIL_6",
        "REMOTE_WORKING_7",
        "REMOTE_CHANGED_8",
        "NEW_ELDEST_9",
        "NONE_VIA_TEMPORARY_10"
      ]
    },
    {
      "type": "record",
      "name": "TrackDiff",
      "fields": [
        {
          "type": "TrackDiffType",
          "name": "type"
        },
        {
          "type": "string",
          "name": "displayMarkup"
        }
      ]
    },
    {
      "type": "record",
      "name": "TrackSummary",
      "fields": [
        {
          "type": "string",
          "name": "username"
        },
        {
          "type": "Time",
          "name": "time"
        },
        {
          "type": "boolean",
          "name": "isRemote"
        }
      ]
    },
    {
      "type": "enum",
      "name": "TrackStatus",
      "symbols": [
        "NEW_OK_1",
        "NEW_ZERO_PROOFS_2",
        "NEW_FAIL_PROOFS_3",
        "UPDATE_BROKEN_FAILED_PROOFS_4",
        "UPDATE_NEW_PROOFS_5",
        "UPDATE_OK_6",
        "UPDATE_BROKEN_REVOKED_7"
      ],
      "doc": "TrackStatus is a summary of this track before the track is approved by the\n    user.\n    NEW_*: New tracks\n    UPDATE_*: Update to an existing track\n    NEW_OK: Everything ok\n    NEW_ZERO_PROOFS: User being tracked has no proofs\n    NEW_FAIL_PROOFS: User being tracked has some failed proofs\n    UPDATE_BROKEN: Previous tracking statement broken, this one will fix it.\n    UPDATE_NEW_PROOFS: Previous tracking statement ok, but there are new proofs since previous tracking statement generated\n    UPDATE_OK: No changes to previous tracking statement"
    },
    {
      "type": "record",
      "name": "TrackOptions",
      "fields": [
        {
          "type": "boolean",
          "name": "localOnly"
        },
        {
          "type": "boolean",
          "name": "bypassConfirm"
        },
        {
          "type": "boolean",
          "name": "forceRetrack"
        },
        {
          "type": "boolean",
          "name": "expiringLocal"
        }
      ]
    },
    {
      "type": "enum",
      "name": "IdentifyReasonType",
      "symbols": [
        "NONE_0",
        "ID_1",
        "TRACK_2",
        "ENCRYPT_3",
        "DECRYPT_4",
        "VERIFY_5",
        "RESOURCE_6"
      ]
    },
    {
      "type": "record",
      "name": "IdentifyReason",
      "fields": [
        {
          "type": "IdentifyReasonType",
          "name": "type"
        },
        {
          "type": "string",
          "name": "reason"
        },
        {
          "type": "string",
          "name": "resource"
        }
      ]
    },
    {
      "type": "record",
      "name": "IdentifyOutcome",
      "fields": [
        {
          "type": "string",
          "name": "username"
        },
        {
          "type": [
            "null",
            "Status"
          ],
          "name": "status"
        },
        {
          "type": {
            "type": "array",
            "items": "string"
          },
          "name": "warnings"
        },
        {
          "type": [
            "null",
            "TrackSummary"
          ],
          "name": "trackUsed"
        },
        {
          "type": "TrackStatus",
          "name": "trackStatus"
        },
        {
          "type": "int",
          "name": "numTrackFailures"
        },
        {
          "type": "int",
          "name": "numTrackChanges"
        },
        {
          "type": "int",
          "name": "numProofFailures"
        },
        {
          "type": "int",
          "name": "numRevoked"
        },
        {
          "type": "int",
          "name": "numProofSuccesses"
        },
        {
          "type": {
            "type": "array",
            "items": "TrackDiff"
          },
          "name": "revoked"
        },
        {
          "type": "TrackOptions",
          "name": "trackOptions"
        },
        {
          "type": "boolean",
          "name": "forPGPPull"
        },
        {
          "type": "IdentifyReason",
          "name": "reason"
        }
      ]
    },
    {
      "type": "record",
      "name": "IdentifyRes",
      "fields": [
        {
          "type": [
            "null",
            "User"
          ],
          "name": "user"
        },
        {
          "type": {
            "type": "array",
            "items": "PublicKey"
          },
          "name": "publicKeys"
        },
        {
          "type": "IdentifyOutcome",
          "name": "outcome"
        },
        {
          "type": "TrackToken",
          "name": "trackToken"
        }
      ]
    },
    {
      "type": "record",
      "name": "RemoteProof",
      "fields": [
        {
          "type": "ProofType",
          "name": "proofType"
        },
        {
          "type": "string",
          "name": "key"
        },
        {
          "type": "string",
          "name": "value"
        },
        {
          "type": "string",
          "name": "displayMarkup"
        },
        {
          "type": "SigID",
          "name": "sigID"
        },
        {
          "type": "Time",
          "name": "mTime"
        }
      ]
    },
    {
      "type": "record",
      "name": "SaltpackEncryptOptions",
      "fields": [
        {
          "type": {
            "type": "array",
            "items": "string"
          },
          "name": "recipients"
        },
        {
          "type": "boolean",
          "name": "hideSelf"
        },
        {
          "type": "boolean",
          "name": "noSelfEncrypt"
        },
        {
          "type": "boolean",
          "name": "binary"
        },
        {
          "type": "boolean",
          "name": "hideRecipients"
        }
      ]
    },
    {
      "type": "record",
      "name": "SaltpackDecryptOptions",
      "fields": [
        {
          "type": "boolean",
          "name": "interactive"
        },
        {
          "type": "boolean",
          "name": "forceRemoteCheck"
        },
        {
          "type": "boolean",
          "name": "usePaperKey"
        }
      ]
    },
    {
      "type": "record",
      "name": "SaltpackSignOptions",
      "fields": [
        {
          "type": "boolean",
          "name": "detached"
        },
        {
          "type": "boolean",
          "name": "binary"
        }
      ]
    },
    {
      "type": "record",
      "name": "SaltpackVerifyOptions",
      "fields": [
        {
          "type": "string",
          "name": "signedBy"
        },
        {
          "type": "bytes",
          "name": "signature"
        }
      ]
    },
    {
      "type": "record",
      "name": "SaltpackEncryptedMessageInfo",
      "fields": [
        {
          "type": {
            "type": "array",
            "items": "Device"
          },
          "name": "devices"
        },
        {
          "type": "int",
          "name": "numAnonReceivers"
        },
        {
          "type": "boolean",
          "name": "receiverIsAnon"
        }
      ]
    }
  ],
  "messages": {
    "saltpackEncrypt": {
      "request": [
        {
          "name": "sessionID",
          "type": "int"
        },
        {
          "name": "source",
          "type": "Stream"
        },
        {
          "name": "sink",
          "type": "Stream"
        },
        {
          "name": "opts",
          "type": "SaltpackEncryptOptions"
        }
      ],
      "response": "null"
    },
    "saltpackDecrypt": {
      "request": [
        {
          "name": "sessionID",
          "type": "int"
        },
        {
          "name": "source",
          "type": "Stream"
        },
        {
          "name": "sink",
          "type": "Stream"
        },
        {
          "name": "opts",
          "type": "SaltpackDecryptOptions"
        }
      ],
      "response": "SaltpackEncryptedMessageInfo"
    },
    "saltpackSign": {
      "request": [
        {
          "name": "sessionID",
          "type": "int"
        },
        {
          "name": "source",
          "type": "Stream"
        },
        {
          "name": "sink",
          "type": "Stream"
        },
        {
          "name": "opts",
          "type": "SaltpackSignOptions"
        }
      ],
      "response": "null"
    },
    "saltpackVerify": {
      "request": [
        {
          "name": "sessionID",
          "type": "int"
        },
        {
          "name": "source",
          "type": "Stream"
        },
        {
          "name": "sink",
          "type": "Stream"
        },
        {
          "name": "opts",
          "type": "SaltpackVerifyOptions"
        }
      ],
      "response": "null"
    }
  },
  "namespace": "keybase.1"
}