{
  "protocol": "SimpleFS",
  "imports": [
    {
      "path": "common.avdl",
      "type": "idl"
    }
  ],
  "types": [
    {
      "type": "fixed",
      "name": "OpID",
      "size": "16"
    },
    {
      "type": "enum",
      "name": "PathType",
      "symbols": [
        "LOCAL_0",
        "KBFS_1"
      ]
    },
    {
      "type": "variant",
      "name": "Path",
      "switch": {
        "type": "PathType",
        "name": "PathType"
      },
      "cases": [
        {
          "label": {
            "name": "LOCAL",
            "def": false
          },
          "body": "string"
        },
        {
          "label": {
            "name": "KBFS",
            "def": false
          },
          "body": "string"
        }
      ]
    },
    {
      "type": "enum",
      "name": "DirentType",
      "symbols": [
        "FILE_0",
        "DIR_1",
        "SYM_2",
        "EXEC_3"
      ]
    },
    {
      "type": "record",
      "name": "Dirent",
      "fields": [
        {
          "type": "Time",
          "name": "time"
        },
        {
          "type": "int",
          "name": "size"
        },
        {
          "type": "DirentType",
          "name": "direntType"
        }
      ]
    },
    {
      "type": "record",
      "name": "ErrorNum",
      "fields": [],
      "typedef": "int"
    },
    {
      "type": "enum",
      "name": "OpenFlags",
      "symbols": [
        "READ_0",
        "REPLACE_1",
        "EXISTING_2",
        "WRITE_4",
        "EXECUTABLE_8",
        "DIRECTORY_16"
      ]
    },
    {
      "type": "record",
      "name": "Progress",
      "fields": [],
      "typedef": "int"
    },
    {
      "type": "record",
      "name": "SfListResult",
      "fields": [
        {
          "type": {
            "type": "array",
            "items": "Path"
          },
          "name": "paths"
        },
        {
          "type": "Progress",
          "name": "progress"
        }
      ]
    },
    {
      "type": "record",
      "name": "FileContent",
      "fields": [
        {
          "type": "bytes",
          "name": "data"
        },
        {
          "type": "Progress",
          "name": "progress"
        }
      ]
    },
    {
      "type": "enum",
      "name": "AsyncOps",
      "symbols": [
        "LIST_0",
        "LIST_RECURSIVE_1",
        "READ_2",
        "WRITE_3",
        "COPY_4",
        "MOVE_5",
        "REMOVE_6"
      ]
    },
    {
      "type": "record",
      "name": "ListRemoveArgs",
      "fields": [
        {
          "type": "OpID",
          "name": "opID"
        },
        {
          "type": "Path",
          "name": "path"
        }
      ]
    },
    {
      "type": "record",
      "name": "ReadWriteArgs",
      "fields": [
        {
          "type": "OpID",
          "name": "opID"
        },
        {
          "type": "Path",
          "name": "path"
        },
        {
          "type": "int",
          "name": "offset"
        }
      ]
    },
    {
      "type": "record",
      "name": "CopyMoveArgs",
      "fields": [
        {
          "type": "OpID",
          "name": "opID"
        },
        {
          "type": "Path",
          "name": "src"
        },
        {
          "type": "Path",
          "name": "dest"
        }
      ]
    },
    {
      "type": "variant",
      "name": "OpDescription",
      "switch": {
        "type": "AsyncOps",
        "name": "asyncOp"
      },
      "cases": [
        {
          "label": {
            "name": "LIST",
            "def": false
          },
          "body": "ListRemoveArgs"
        },
        {
          "label": {
            "name": "LIST_RECURSIVE",
            "def": false
          },
          "body": "ListRemoveArgs"
        },
        {
          "label": {
            "name": "READ",
            "def": false
          },
          "body": "ReadWriteArgs"
        },
        {
          "label": {
            "name": "WRITE",
            "def": false
          },
          "body": "ReadWriteArgs"
        },
        {
          "label": {
            "name": "COPY",
            "def": false
          },
          "body": "CopyMoveArgs"
        },
        {
          "label": {
            "name": "MOVE",
            "def": false
          },
          "body": "CopyMoveArgs"
        },
        {
          "label": {
            "name": "REMOVE",
            "def": false
          },
          "body": "ListRemoveArgs"
        }
      ]
    }
  ],
  "messages": {
    "sfList": {
      "request": [
        {
          "name": "opID",
          "type": "OpID"
        },
        {
          "name": "path",
          "type": "Path"
        }
      ],
      "response": null,
      "doc": "Begin list of items in directory at path\n   Retrieve results with readList()\n   Can be a single file to get flags/status"
    },
    "sfListRecursive": {
      "request": [
        {
          "name": "opID",
          "type": "OpID"
        },
        {
          "name": "path",
          "type": "Path"
        }
      ],
      "response": null,
      "doc": "Begin recursive list of items in directory at path"
    },
    "sfReadList": {
      "request": [
        {
          "name": "opID",
          "type": "OpID"
        }
      ],
      "response": "SfListResult",
      "doc": "Get list of Paths in progress. Can indicate status of pending\n   to get more entries."
    },
    "sfCopy": {
      "request": [
        {
          "name": "opID",
          "type": "OpID"
        },
        {
          "name": "src",
          "type": "Path"
        },
        {
          "name": "dest",
          "type": "Path"
        }
      ],
      "response": null,
      "doc": "Begin copy of file or directory"
    },
    "sfCopyRecursive": {
      "request": [
        {
          "name": "opID",
          "type": "OpID"
        },
        {
          "name": "src",
          "type": "Path"
        },
        {
          "name": "dest",
          "type": "Path"
        }
      ],
      "response": null,
      "doc": "Begin recursive copy of directory"
    },
    "sfMove": {
      "request": [
        {
          "name": "opID",
          "type": "OpID"
        },
        {
          "name": "src",
          "type": "Path"
        },
        {
          "name": "dest",
          "type": "Path"
        }
      ],
      "response": null,
      "doc": "Begin move of file or directory, from/to KBFS only"
    },
    "sfRename": {
      "request": [
        {
          "name": "src",
          "type": "Path"
        },
        {
          "name": "dest",
          "type": "Path"
        }
      ],
      "response": null,
      "doc": "Rename file or directory, KBFS side only"
    },
    "sfOpen": {
      "request": [
        {
          "name": "opID",
          "type": "OpID"
        },
        {
          "name": "dest",
          "type": "Path"
        },
        {
          "name": "flags",
          "type": "OpenFlags"
        }
      ],
      "response": null,
      "doc": "Create/open a file and leave it open\n   or create a directory\n   or set the executable bit on an existing file.\n   Files must be closed afterwards."
    },
    "sfRead": {
      "request": [
        {
          "name": "opID",
          "type": "OpID"
        },
        {
          "name": "offset",
          "type": "int"
        },
        {
          "name": "size",
          "type": "int"
        }
      ],
      "response": "FileContent",
      "doc": "Read (possibly partial) contents of open file,\n   up to the amount specified by size.\n   Repeat until zero bytes are returned or error.\n   If size is zero, read an arbitrary amount."
    },
    "sfWrite": {
      "request": [
        {
          "name": "opID",
          "type": "OpID"
        },
        {
          "name": "offset",
          "type": "int"
        },
        {
          "name": "content",
          "type": "bytes"
        }
      ],
      "response": null,
      "doc": "Append content to opened file.\n   May be repeated until OpID is closed."
    },
    "sfRemove": {
      "request": [
        {
          "name": "opID",
          "type": "OpID"
        },
        {
          "name": "path",
          "type": "Path"
        }
      ],
      "response": null,
      "doc": "Remove file or directory from filesystem"
    },
    "sfStat": {
      "request": [
        {
          "name": "path",
          "type": "Path"
        }
      ],
      "response": "Dirent",
      "doc": "Get info about file"
    },
    "sfMakeOpid": {
      "request": [],
      "response": "OpID",
      "doc": "Convenience helper for generating new random value"
    },
    "sfClose": {
      "request": [
        {
          "name": "opID",
          "type": "OpID"
        }
      ],
      "response": null,
      "doc": "Close OpID, cancels any pending operation.\n   Must be called after list/copy/remove"
    },
    "sfCheck": {
      "request": [
        {
          "name": "opID",
          "type": "OpID"
        }
      ],
      "response": "Progress",
      "doc": "Check progress of pending operation"
    },
    "sfGetOps": {
      "request": [],
      "response": {
        "type": "array",
        "items": "OpDescription"
      },
      "doc": "Get all the outstanding operations"
    },
    "sfWait": {
      "request": [
        {
          "name": "opID",
          "type": "OpID"
        }
      ],
      "response": null,
      "doc": "Blocking wait for the pending operation to finish"
    }
  },
  "namespace": "keybase.1"
}