{
  "protocol": "kbfs",
  "imports": [
    {
      "path": "kbfs_common.avdl",
      "type": "idl"
    }
  ],
  "types": [],
  "messages": {
    "FSEvent": {
      "request": [
        {
          "name": "event",
          "type": "FSNotification"
        }
      ],
      "response": null,
      "doc": "Idea is that kbfs would call the function below whenever these actions are\n    performed on a file.\n\n    Note that this list/interface is very temporary and highly likely to change\n    significantly.\n\n    It is just a starting point to get kbfs notifications through the daemon to\n    the clients.",
      "lint": "ignore"
    },
    "FSEditList": {
      "request": [
        {
          "name": "edits",
          "type": {
            "type": "array",
            "items": "FSNotification"
          }
        },
        {
          "name": "requestID",
          "type": "int"
        }
      ],
      "response": null,
      "doc": "kbfs calls this as a response to receiving an FSEditListRequest with a\n    given requestID.",
      "lint": "ignore"
    },
    "FSSyncStatus": {
      "request": [
        {
          "name": "status",
          "type": "FSSyncStatus"
        },
        {
          "name": "requestID",
          "type": "int"
        }
      ],
      "response": null,
      "doc": "FSSyncStatus is called by KBFS as a response to receiving an\n    FSSyncStatusRequest with a given requestID.",
      "lint": "ignore"
    },
    "FSSyncEvent": {
      "request": [
        {
          "name": "event",
          "type": "FSPathSyncStatus"
        }
      ],
      "response": null,
      "doc": "FSSyncEvent is called by KBFS when the sync status of an individual path\n    changes.",
      "lint": "ignore"
    },
    "createTLF": {
      "request": [
        {
          "name": "teamID",
          "type": "TeamID"
        },
        {
          "name": "tlfID",
          "type": "TLFID"
        }
      ],
      "response": null
    }
  },
  "namespace": "keybase.1"
}