{
  "protocol": "kbfs",
  "imports": [
    {
      "path": "kbfs_common.avdl",
      "type": "idl"
    }
  ],
  "types": [
    {
      "type": "record",
      "name": "KBFSTeamSettings",
      "fields": [
        {
          "type": "TLFID",
          "name": "tlfID"
        }
      ]
    }
  ],
  "messages": {
    "FSEvent": {
      "request": [
        {
          "name": "event",
          "type": "FSNotification"
        }
      ],
      "response": null,
      "doc": "Idea is that kbfs would call the function below whenever these actions are\n    performed on a file.\n\n    Note that this list/interface is very temporary and highly likely to change\n    significantly.\n\n    It is just a starting point to get kbfs notifications through the daemon to\n    the clients.",
      "lint": "ignore"
    },
    "FSPathUpdate": {
      "request": [
        {
          "name": "path",
          "type": "string"
        }
      ],
      "response": null,
      "oneway": true,
      "doc": "kbfs calls this whenever the currently subscribed-to folder (via the\n    SimpleFSList[Recursive call) has been updated.",
      "lint": "ignore"
    },
    "FSEditList": {
      "request": [
        {
          "name": "edits",
          "type": "FSFolderEditHistory"
        },
        {
          "name": "requestID",
          "type": "int"
        }
      ],
      "response": null,
      "doc": "kbfs calls this as a response to receiving an FSEditListRequest with a\n    given requestID.",
      "lint": "ignore"
    },
    "FSSyncStatus": {
      "request": [
        {
          "name": "status",
          "type": "FSSyncStatus"
        },
        {
          "name": "requestID",
          "type": "int"
        }
      ],
      "response": null,
      "doc": "FSSyncStatus is called by KBFS as a response to receiving an\n    FSSyncStatusRequest with a given requestID.",
      "lint": "ignore"
    },
    "FSSyncEvent": {
      "request": [
        {
          "name": "event",
          "type": "FSPathSyncStatus"
        }
      ],
      "response": null,
      "doc": "FSSyncEvent is called by KBFS when the sync status of an individual path\n    changes.",
      "lint": "ignore"
    },
    "FSOverallSyncEvent": {
      "request": [
        {
          "name": "status",
          "type": "FolderSyncStatus"
        }
      ],
      "response": null,
      "doc": "FSOverallSyncEvent is called by KBFS when the overall sync status\n    changes.",
      "lint": "ignore"
    },
    "FSOnlineStatusChangedEvent": {
      "request": [
        {
          "name": "online",
          "type": "boolean"
        }
      ],
      "response": null,
      "doc": "FSOnlineStatusChangedEvent is called by KBFS when the online status changes.",
      "lint": "ignore"
    },
    "FSFavoritesChangedEvent": {
      "request": [],
      "response": null,
      "doc": "FSFavoritesChangedEvent is called by KBFS when the favorites list changes.",
      "lint": "ignore"
    },
    "FSSubscriptionNotifyPathEvent": {
      "request": [
        {
          "name": "subscriptionID",
          "type": "string"
        },
        {
          "name": "path",
          "type": "string"
        },
        {
          "name": "topic",
          "type": "PathSubscriptionTopic"
        }
      ],
      "response": null,
      "lint": "ignore"
    },
    "FSSubscriptionNotifyEvent": {
      "request": [
        {
          "name": "subscriptionID",
          "type": "string"
        },
        {
          "name": "topic",
          "type": "SubscriptionTopic"
        }
      ],
      "response": null,
      "lint": "ignore"
    },
    "createTLF": {
      "request": [
        {
          "name": "teamID",
          "type": "TeamID"
        },
        {
          "name": "tlfID",
          "type": "TLFID"
        }
      ],
      "response": null,
      "doc": "createTLF is called by KBFS to associate the tlfID with the given teamID,\n    using the v2 Team-based system."
    },
    "getKBFSTeamSettings": {
      "request": [
        {
          "name": "teamID",
          "type": "TeamID"
        },
        {
          "name": "oa",
          "type": "OfflineAvailability"
        }
      ],
      "response": "KBFSTeamSettings",
      "doc": "getKBFSTeamSettings gets the settings written for the team in the team's sigchain."
    },
    "upgradeTLF": {
      "request": [
        {
          "name": "tlfName",
          "type": "string"
        },
        {
          "name": "public",
          "type": "boolean"
        }
      ],
      "response": null,
      "doc": "upgradeTLF upgrades a TLF to use implicit team keys"
    },
    "encryptFavorites": {
      "request": [
        {
          "name": "dataToEncrypt",
          "type": "bytes"
        }
      ],
      "response": "bytes",
      "doc": "Encrypt cached favorites to store on disk."
    },
    "decryptFavorites": {
      "request": [
        {
          "name": "dataToEncrypt",
          "type": "bytes"
        }
      ],
      "response": "bytes",
      "doc": "Decrypt cached favorites stored on disk."
    }
  },
  "namespace": "keybase.1"
}