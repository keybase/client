{
  "protocol": "account",
  "imports": [
    {
      "path": "passphrase_common.avdl",
      "type": "idl"
    },
    {
      "path": "../gregor1",
      "type": "idl",
      "import_as": "gregor1"
    }
  ],
  "types": [
    {
      "type": "record",
      "name": "HasServerKeysRes",
      "fields": [
        {
          "type": "boolean",
          "name": "hasServerKeys"
        }
      ]
    },
    {
      "type": "record",
      "name": "LockdownHistory",
      "fields": [
        {
          "type": "boolean",
          "name": "status",
          "jsonkey": "status"
        },
        {
          "type": "Time",
          "name": "creationTime",
          "jsonkey": "ctime"
        },
        {
          "type": "DeviceID",
          "name": "deviceID",
          "jsonkey": "device_id"
        },
        {
          "type": "string",
          "name": "deviceName"
        }
      ]
    },
    {
      "type": "record",
      "name": "GetLockdownResponse",
      "fields": [
        {
          "type": {
            "type": "array",
            "items": "LockdownHistory"
          },
          "name": "history"
        },
        {
          "type": "boolean",
          "name": "status"
        }
      ]
    }
  ],
  "messages": {
    "passphraseChange": {
      "request": [
        {
          "name": "sessionID",
          "type": "int"
        },
        {
          "name": "oldPassphrase",
          "type": "string"
        },
        {
          "name": "passphrase",
          "type": "string"
        },
        {
          "name": "force",
          "type": "boolean"
        }
      ],
      "response": null,
      "doc": "Change the passphrase from old to new. If old isn't set, and force is false,\n    then prompt at the UI for it. If old isn't set and force is true, then\n    we'll try to force a passphrase change."
    },
    "passphrasePrompt": {
      "request": [
        {
          "name": "sessionID",
          "type": "int"
        },
        {
          "name": "guiArg",
          "type": "GUIEntryArg"
        }
      ],
      "response": "GetPassphraseRes"
    },
    "passphraseCheck": {
      "request": [
        {
          "name": "sessionID",
          "type": "int"
        },
        {
          "name": "passphrase",
          "type": "string"
        }
      ],
      "response": "boolean",
      "doc": "* Check if user passphrase matches argument. Launches SecretUI prompt if\n   * passphrase argument is empty. Returns `true` if passphrase is correct,\n   * false if not, or an error if something else went wrong."
    },
    "emailChange": {
      "request": [
        {
          "name": "sessionID",
          "type": "int"
        },
        {
          "name": "newEmail",
          "type": "string"
        }
      ],
      "response": null,
      "doc": "* change email to the new given email by signing a statement."
    },
    "hasServerKeys": {
      "request": [
        {
          "name": "sessionID",
          "type": "int"
        }
      ],
      "response": "HasServerKeysRes",
      "doc": "* Whether the logged-in user has uploaded private keys\n   * Will error if not logged in."
    },
    "resetAccount": {
      "request": [
        {
          "name": "sessionID",
          "type": "int"
        },
        {
          "name": "passphrase",
          "type": "string"
        }
      ],
      "response": null,
      "doc": "resetAccount resets the user's account. It is used in the CLI.\n   passphrase is optional and will be prompted for if not supplied."
    },
    "getLockdownMode": {
      "request": [
        {
          "name": "sessionID",
          "type": "int"
        }
      ],
      "response": "GetLockdownResponse"
    },
    "setLockdownMode": {
      "request": [
        {
          "name": "sessionID",
          "type": "int"
        },
        {
          "name": "enabled",
          "type": "boolean"
        }
      ],
      "response": null
    },
    "recoverUsernameWithEmail": {
      "request": [
        {
          "name": "sessionID",
          "type": "int"
        },
        {
          "name": "email",
          "type": "string"
        }
      ],
      "response": null
    },
    "recoverUsernameWithPhone": {
      "request": [
        {
          "name": "sessionID",
          "type": "int"
        },
        {
          "name": "phone",
          "type": "PhoneNumber"
        }
      ],
      "response": null
    },
    "enterResetPipeline": {
      "request": [
        {
          "name": "sessionID",
          "type": "int"
        },
        {
          "name": "usernameOrEmail",
          "type": "string"
        },
        {
          "name": "passphrase",
          "type": "string"
        },
        {
          "name": "interactive",
          "type": "boolean"
        }
      ],
      "response": null,
      "doc": "Start reset process for the user based on their username or email.  If\n    neither are known the user will be prompted for their passphrase to start\n    the process.\n    TODO: change this to just username"
    },
    "cancelReset": {
      "request": [
        {
          "name": "sessionID",
          "type": "int"
        }
      ],
      "response": null,
      "doc": "Aborts the reset process"
    },
    "timeTravelReset": {
      "request": [
        {
          "name": "sessionID",
          "type": "int"
        },
        {
          "name": "username",
          "type": "string"
        },
        {
          "name": "duration",
          "type": "gregor1.DurationSec"
        }
      ],
      "response": null
    }
  },
  "namespace": "keybase.1"
}