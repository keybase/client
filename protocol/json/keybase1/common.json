{
  "protocol": "Common",
  "imports": [],
  "types": [
    {
      "type": "record",
      "name": "Time",
      "fields": [],
      "typedef": "long"
    },
    {
      "type": "record",
      "name": "UnixTime",
      "fields": [],
      "typedef": "long"
    },
    {
      "type": "record",
      "name": "DurationSec",
      "fields": [],
      "typedef": "double"
    },
    {
      "type": "record",
      "name": "StringKVPair",
      "fields": [
        {
          "type": "string",
          "name": "key"
        },
        {
          "type": "string",
          "name": "value"
        }
      ]
    },
    {
      "type": "record",
      "name": "Status",
      "fields": [
        {
          "type": "int",
          "name": "code"
        },
        {
          "type": "string",
          "name": "name"
        },
        {
          "type": "string",
          "name": "desc"
        },
        {
          "type": {
            "type": "array",
            "items": "StringKVPair"
          },
          "name": "fields"
        }
      ]
    },
    {
      "type": "record",
      "name": "UID",
      "fields": [],
      "typedef": "string"
    },
    {
      "type": "record",
      "name": "DeviceID",
      "fields": [],
      "typedef": "string"
    },
    {
      "type": "record",
      "name": "SigID",
      "fields": [],
      "typedef": "string"
    },
    {
      "type": "record",
      "name": "LeaseID",
      "fields": [],
      "typedef": "string"
    },
    {
      "type": "record",
      "name": "KID",
      "fields": [],
      "typedef": "string"
    },
    {
      "type": "record",
      "name": "LinkID",
      "fields": [],
      "typedef": "string"
    },
    {
      "type": "record",
      "name": "BinaryKID",
      "fields": [],
      "typedef": "bytes"
    },
    {
      "type": "record",
      "name": "TLFID",
      "fields": [],
      "typedef": "string"
    },
    {
      "type": "record",
      "name": "TeamID",
      "fields": [],
      "typedef": "string"
    },
    {
      "type": "record",
      "name": "UserOrTeamID",
      "fields": [],
      "typedef": "string"
    },
    {
      "type": "record",
      "name": "GitRepoName",
      "fields": [],
      "typedef": "string"
    },
    {
      "type": "enum",
      "name": "TeamType",
      "symbols": [
        "NONE_0",
        "LEGACY_1",
        "MODERN_2"
      ]
    },
    {
      "type": "variant",
      "name": "CompatibilityTeamID",
      "switch": {
        "type": "TeamType",
        "name": "typ"
      },
      "cases": [
        {
          "label": {
            "name": "LEGACY",
            "def": false
          },
          "body": "TLFID"
        },
        {
          "label": {
            "name": "MODERN",
            "def": false
          },
          "body": "TeamID"
        }
      ]
    },
    {
      "type": "enum",
      "name": "TLFVisibility",
      "symbols": [
        "ANY_0",
        "PUBLIC_1",
        "PRIVATE_2"
      ]
    },
    {
      "type": "record",
      "name": "TeamIDWithVisibility",
      "fields": [
        {
          "type": "TeamID",
          "name": "teamID"
        },
        {
          "type": "TLFVisibility",
          "name": "visibility"
        }
      ]
    },
    {
      "type": "record",
      "name": "TeamIDAndName",
      "fields": [
        {
          "type": "TeamID",
          "name": "id"
        },
        {
          "type": "TeamName",
          "name": "name"
        }
      ]
    },
    {
      "type": "record",
      "name": "Seqno",
      "fields": [],
      "typedef": "int64",
      "lint": "ignore"
    },
    {
      "type": "enum",
      "name": "SeqType",
      "symbols": [
        "PUBLIC_1",
        "PRIVATE_2",
        "SEMIPRIVATE_3"
      ]
    },
    {
      "type": "fixed",
      "name": "Bytes32",
      "size": "32"
    },
    {
      "type": "record",
      "name": "Text",
      "fields": [
        {
          "type": "string",
          "name": "data"
        },
        {
          "type": "boolean",
          "name": "markup"
        }
      ]
    },
    {
      "type": "record",
      "name": "PGPIdentity",
      "fields": [
        {
          "type": "string",
          "name": "username"
        },
        {
          "type": "string",
          "name": "comment"
        },
        {
          "type": "string",
          "name": "email"
        }
      ]
    },
    {
      "type": "record",
      "name": "PublicKey",
      "fields": [
        {
          "type": "KID",
          "name": "KID",
          "lint": "ignore"
        },
        {
          "type": "string",
          "name": "PGPFingerprint",
          "lint": "ignore"
        },
        {
          "type": {
            "type": "array",
            "items": "PGPIdentity"
          },
          "name": "PGPIdentities",
          "lint": "ignore"
        },
        {
          "type": "boolean",
          "name": "isSibkey"
        },
        {
          "type": "boolean",
          "name": "isEldest"
        },
        {
          "type": "string",
          "name": "parentID"
        },
        {
          "type": "DeviceID",
          "name": "deviceID"
        },
        {
          "type": "string",
          "name": "deviceDescription"
        },
        {
          "type": "string",
          "name": "deviceType"
        },
        {
          "type": "Time",
          "name": "cTime"
        },
        {
          "type": "Time",
          "name": "eTime"
        },
        {
          "type": "boolean",
          "name": "isRevoked"
        }
      ]
    },
    {
      "type": "record",
      "name": "KeybaseTime",
      "fields": [
        {
          "type": "Time",
          "name": "unix"
        },
        {
          "type": "Seqno",
          "name": "chain"
        }
      ]
    },
    {
      "type": "record",
      "name": "RevokedKey",
      "fields": [
        {
          "type": "PublicKey",
          "name": "key"
        },
        {
          "type": "KeybaseTime",
          "name": "time"
        },
        {
          "type": "KID",
          "name": "by"
        }
      ]
    },
    {
      "type": "record",
      "name": "User",
      "fields": [
        {
          "type": "UID",
          "name": "uid"
        },
        {
          "type": "string",
          "name": "username"
        }
      ]
    },
    {
      "type": "record",
      "name": "Device",
      "fields": [
        {
          "type": "string",
          "name": "type"
        },
        {
          "type": "string",
          "name": "name"
        },
        {
          "type": "DeviceID",
          "name": "deviceID"
        },
        {
          "type": "Time",
          "name": "cTime"
        },
        {
          "type": "Time",
          "name": "mTime"
        },
        {
          "type": "Time",
          "name": "lastUsedTime"
        },
        {
          "type": "KID",
          "name": "encryptKey"
        },
        {
          "type": "KID",
          "name": "verifyKey"
        },
        {
          "type": "int",
          "name": "status"
        }
      ]
    },
    {
      "type": "enum",
      "name": "DeviceType",
      "symbols": [
        "DESKTOP_0",
        "MOBILE_1"
      ]
    },
    {
      "type": "record",
      "name": "Stream",
      "fields": [
        {
          "type": "int",
          "name": "fd"
        }
      ]
    },
    {
      "type": "enum",
      "name": "LogLevel",
      "symbols": [
        "NONE_0",
        "DEBUG_1",
        "INFO_2",
        "NOTICE_3",
        "WARN_4",
        "ERROR_5",
        "CRITICAL_6",
        "FATAL_7"
      ]
    },
    {
      "type": "enum",
      "name": "ClientType",
      "symbols": [
        "NONE_0",
        "CLI_1",
        "GUI_MAIN_2",
        "KBFS_3",
        "GUI_HELPER_4"
      ],
      "go": "nostring"
    },
    {
      "type": "record",
      "name": "UserVersionVector",
      "fields": [
        {
          "type": "long",
          "name": "id"
        },
        {
          "type": "int",
          "name": "sigHints"
        },
        {
          "type": "long",
          "name": "sigChain"
        },
        {
          "type": "Time",
          "name": "cachedAt"
        }
      ]
    },
    {
      "type": "record",
      "name": "PerUserKeyGeneration",
      "fields": [],
      "typedef": "int",
      "lint": "ignore"
    },
    {
      "type": "record",
      "name": "PerUserKey",
      "fields": [
        {
          "type": "int",
          "name": "gen"
        },
        {
          "type": "Seqno",
          "name": "seqno"
        },
        {
          "type": "KID",
          "name": "sigKID"
        },
        {
          "type": "KID",
          "name": "encKID"
        },
        {
          "type": "KID",
          "name": "signedByKID"
        }
      ],
      "lint": "ignore"
    },
    {
      "type": "record",
      "name": "UserPlusKeys",
      "fields": [
        {
          "type": "UID",
          "name": "uid"
        },
        {
          "type": "string",
          "name": "username"
        },
        {
          "type": "Seqno",
          "name": "eldestSeqno"
        },
        {
          "type": "StatusCode",
          "name": "status"
        },
        {
          "type": {
            "type": "array",
            "items": "PublicKey"
          },
          "name": "deviceKeys"
        },
        {
          "type": {
            "type": "array",
            "items": "RevokedKey"
          },
          "name": "revokedDeviceKeys"
        },
        {
          "type": "int",
          "name": "pgpKeyCount"
        },
        {
          "type": "UserVersionVector",
          "name": "uvv"
        },
        {
          "type": {
            "type": "array",
            "items": "PublicKey"
          },
          "name": "deletedDeviceKeys"
        },
        {
          "type": {
            "type": "array",
            "items": "PerUserKey"
          },
          "name": "perUserKeys",
          "lint": "ignore"
        }
      ]
    },
    {
      "type": "record",
      "name": "UserOrTeamLite",
      "fields": [
        {
          "type": "UserOrTeamID",
          "name": "id"
        },
        {
          "type": "string",
          "name": "name"
        }
      ]
    },
    {
      "type": "enum",
      "name": "UserOrTeamResult",
      "symbols": [
        "USER_1",
        "TEAM_2"
      ]
    },
    {
      "type": "record",
      "name": "RemoteTrack",
      "fields": [
        {
          "type": "string",
          "name": "username"
        },
        {
          "type": "UID",
          "name": "uid"
        },
        {
          "type": "LinkID",
          "name": "linkID"
        }
      ]
    },
    {
      "type": "record",
      "name": "UserPlusAllKeys",
      "fields": [
        {
          "type": "UserPlusKeys",
          "name": "base"
        },
        {
          "type": {
            "type": "array",
            "items": "PublicKey"
          },
          "name": "pgpKeys"
        },
        {
          "type": {
            "type": "array",
            "items": "RemoteTrack"
          },
          "name": "remoteTracks"
        }
      ]
    },
    {
      "type": "enum",
      "name": "MerkleTreeID",
      "symbols": [
        "MASTER_0",
        "KBFS_PUBLIC_1",
        "KBFS_PRIVATE_2",
        "KBFS_PRIVATETEAM_3"
      ],
      "go": "nostring"
    },
    {
      "type": "record",
      "name": "SocialAssertionService",
      "fields": [],
      "doc": "SocialAssertionService is a service that can be used to assert proofs for a\n    user.",
      "typedef": "string"
    },
    {
      "type": "record",
      "name": "SocialAssertion",
      "fields": [
        {
          "type": "string",
          "name": "user"
        },
        {
          "type": "SocialAssertionService",
          "name": "service"
        }
      ],
      "doc": "SocialAssertion contains a service and username for that service, that\n    together form an assertion about a user. Resolving an assertion requires\n    that the user posts a Keybase proof on the asserted service as the asserted\n    user."
    },
    {
      "type": "record",
      "name": "UserResolution",
      "fields": [
        {
          "type": "SocialAssertion",
          "name": "assertion"
        },
        {
          "type": "UID",
          "name": "userID"
        }
      ],
      "doc": "UserResolution maps how an unresolved user assertion has been resolved."
    },
    {
      "type": "record",
      "name": "FullName",
      "fields": [],
      "typedef": "string"
    },
    {
      "type": "enum",
      "name": "FullNamePackageVersion",
      "symbols": [
        "V0_0",
        "V1_1"
      ]
    },
    {
      "type": "record",
      "name": "FullNamePackage",
      "fields": [
        {
          "type": "FullNamePackageVersion",
          "name": "version"
        },
        {
          "type": "FullName",
          "name": "fullName"
        },
        {
          "type": "Seqno",
          "name": "eldestSeqno"
        },
        {
          "type": "Time",
          "name": "cachedAt"
        }
      ]
    }
  ],
  "messages": {},
  "namespace": "keybase.1"
}