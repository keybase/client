{
  "protocol": "user",
  "imports": [
    {
      "path": "common.avdl",
      "type": "idl"
    }
  ],
  "types": [
    {
      "type": "record",
      "name": "TrackProof",
      "fields": [
        {
          "type": "string",
          "name": "proofType"
        },
        {
          "type": "string",
          "name": "proofName"
        },
        {
          "type": "string",
          "name": "idString"
        }
      ]
    },
    {
      "type": "record",
      "name": "WebProof",
      "fields": [
        {
          "type": "string",
          "name": "hostname"
        },
        {
          "type": {
            "type": "array",
            "items": "string"
          },
          "name": "protocols"
        }
      ]
    },
    {
      "type": "record",
      "name": "Proofs",
      "fields": [
        {
          "type": {
            "type": "array",
            "items": "TrackProof"
          },
          "name": "social"
        },
        {
          "type": {
            "type": "array",
            "items": "WebProof"
          },
          "name": "web"
        },
        {
          "type": {
            "type": "array",
            "items": "PublicKey"
          },
          "name": "publicKeys"
        }
      ]
    },
    {
      "type": "record",
      "name": "UserSummary",
      "fields": [
        {
          "type": "UID",
          "name": "uid"
        },
        {
          "type": "string",
          "name": "username"
        },
        {
          "type": "string",
          "name": "thumbnail"
        },
        {
          "type": "int",
          "name": "idVersion"
        },
        {
          "type": "string",
          "name": "fullName"
        },
        {
          "type": "string",
          "name": "bio"
        },
        {
          "type": "Proofs",
          "name": "proofs"
        },
        {
          "type": "string",
          "name": "sigIDDisplay"
        },
        {
          "type": "Time",
          "name": "trackTime"
        }
      ]
    },
    {
      "type": "record",
      "name": "EmailAddress",
      "fields": [],
      "typedef": "string"
    },
    {
      "type": "record",
      "name": "Email",
      "fields": [
        {
          "type": "EmailAddress",
          "name": "email"
        },
        {
          "type": "boolean",
          "name": "isVerified"
        },
        {
          "type": "boolean",
          "name": "isPrimary"
        },
        {
          "type": "IdentityVisibility",
          "name": "visibility"
        },
        {
          "type": "UnixTime",
          "name": "lastVerifyEmailDate"
        }
      ]
    },
    {
      "type": "record",
      "name": "UserSettings",
      "fields": [
        {
          "type": {
            "type": "array",
            "items": "Email"
          },
          "name": "emails"
        },
        {
          "type": {
            "type": "array",
            "items": "UserPhoneNumber"
          },
          "name": "phoneNumbers"
        }
      ]
    },
    {
      "type": "record",
      "name": "UserSummary2",
      "fields": [
        {
          "type": "UID",
          "name": "uid"
        },
        {
          "type": "string",
          "name": "username"
        },
        {
          "type": "string",
          "name": "thumbnail"
        },
        {
          "type": "string",
          "name": "fullName"
        },
        {
          "type": "boolean",
          "name": "isFollower"
        },
        {
          "type": "boolean",
          "name": "isFollowee"
        }
      ]
    },
    {
      "type": "record",
      "name": "UserSummary2Set",
      "fields": [
        {
          "type": {
            "type": "array",
            "items": "UserSummary2"
          },
          "name": "users"
        },
        {
          "type": "Time",
          "name": "time"
        },
        {
          "type": "int",
          "name": "version"
        }
      ]
    },
    {
      "type": "record",
      "name": "InterestingPerson",
      "fields": [
        {
          "type": "UID",
          "name": "uid"
        },
        {
          "type": "string",
          "name": "username"
        },
        {
          "type": "string",
          "name": "fullname"
        },
        {
          "type": {
            "type": "map",
            "values": "string",
            "keys": "string"
          },
          "name": "serviceMap"
        }
      ]
    },
    {
      "type": "record",
      "name": "ProofSuggestionsRes",
      "fields": [
        {
          "type": {
            "type": "array",
            "items": "ProofSuggestion"
          },
          "name": "suggestions"
        },
        {
          "type": "boolean",
          "name": "showMore"
        }
      ]
    },
    {
      "type": "record",
      "name": "ProofSuggestion",
      "fields": [
        {
          "type": "string",
          "name": "key"
        },
        {
          "type": "boolean",
          "name": "belowFold"
        },
        {
          "type": "string",
          "name": "profileText"
        },
        {
          "type": {
            "type": "array",
            "items": "SizedImage"
          },
          "name": "profileIcon"
        },
        {
          "type": {
            "type": "array",
            "items": "SizedImage"
          },
          "name": "profileIconWhite"
        },
        {
          "type": "string",
          "name": "pickerText"
        },
        {
          "type": "string",
          "name": "pickerSubtext"
        },
        {
          "type": {
            "type": "array",
            "items": "SizedImage"
          },
          "name": "pickerIcon"
        },
        {
          "type": {
            "type": "array",
            "items": "Identify3RowMeta"
          },
          "name": "metas"
        }
      ]
    },
    {
      "type": "record",
      "name": "NextMerkleRootRes",
      "fields": [
        {
          "type": [
            null,
            "MerkleRootV2"
          ],
          "name": "res"
        }
      ]
    },
    {
      "type": "enum",
      "name": "PassphraseState",
      "symbols": [
        "KNOWN_0",
        "RANDOM_1"
      ],
      "doc": "PassphraseState values are used in .config.json, so should not be changed without a migration strategy"
    },
    {
      "type": "record",
      "name": "CanLogoutRes",
      "fields": [
        {
          "type": "boolean",
          "name": "canLogout"
        },
        {
          "type": "string",
          "name": "reason"
        },
        {
          "type": "PassphraseState",
          "name": "passphraseState"
        }
      ]
    },
    {
      "type": "record",
      "name": "UserPassphraseStateMsg",
      "fields": [
        {
          "type": "PassphraseState",
          "name": "passphraseState",
          "jsonkey": "state"
        }
      ],
      "lint": "ignore"
    },
    {
      "type": "record",
      "name": "UserBlockedRow",
      "fields": [
        {
          "type": "UID",
          "name": "uid",
          "jsonkey": "block_uid"
        },
        {
          "type": "string",
          "name": "username",
          "jsonkey": "block_username"
        },
        {
          "type": [
            null,
            "boolean"
          ],
          "name": "chat",
          "jsonkey": "chat"
        },
        {
          "type": [
            null,
            "boolean"
          ],
          "name": "follow",
          "jsonkey": "follow"
        }
      ]
    },
    {
      "type": "record",
      "name": "UserBlockedBody",
      "fields": [
        {
          "type": {
            "type": "array",
            "items": "UserBlockedRow"
          },
          "name": "blocks",
          "jsonkey": "blocks"
        },
        {
          "type": "UID",
          "name": "uid",
          "jsonkey": "blocker_uid"
        },
        {
          "type": "string",
          "name": "username",
          "jsonkey": "blocker_username"
        }
      ]
    },
    {
      "type": "record",
      "name": "UserBlockedSummary",
      "fields": [
        {
          "type": "string",
          "name": "blocker"
        },
        {
          "type": {
            "type": "array",
            "items": "string"
          },
          "name": "blocked"
        }
      ]
    },
    {
      "type": "record",
      "name": "UserBlock",
      "fields": [
        {
          "type": "string",
          "name": "username"
        },
        {
          "type": "boolean",
          "name": "chatBlocked"
        },
        {
          "type": "boolean",
          "name": "followBlocked"
        },
        {
          "type": [
            null,
            "Time"
          ],
          "name": "createTime"
        },
        {
          "type": [
            null,
            "Time"
          ],
          "name": "modifyTime"
        }
      ]
    },
    {
      "type": "record",
      "name": "UserBlockArg",
      "fields": [
        {
          "type": "string",
          "name": "username"
        },
        {
          "type": [
            null,
            "boolean"
          ],
          "name": "setChatBlock"
        },
        {
          "type": [
            null,
            "boolean"
          ],
          "name": "setFollowBlock"
        }
      ]
    }
  ],
  "messages": {
    "loadUncheckedUserSummaries": {
      "request": [
        {
          "name": "sessionID",
          "type": "int"
        },
        {
          "name": "uids",
          "type": {
            "type": "array",
            "items": "UID"
          }
        }
      ],
      "response": {
        "type": "array",
        "items": "UserSummary"
      },
      "doc": "Load user summaries for the supplied uids.\n    They are \"unchecked\" in that the client is not verifying the info from the server.\n    If len(uids) > 500, the first 500 will be returned."
    },
    "loadUser": {
      "request": [
        {
          "name": "sessionID",
          "type": "int"
        },
        {
          "name": "uid",
          "type": "UID"
        }
      ],
      "response": "User",
      "doc": "Load a user from the server."
    },
    "loadUserByName": {
      "request": [
        {
          "name": "sessionID",
          "type": "int"
        },
        {
          "name": "username",
          "type": "string"
        }
      ],
      "response": "User"
    },
    "loadUserPlusKeys": {
      "request": [
        {
          "name": "sessionID",
          "type": "int"
        },
        {
          "name": "uid",
          "type": "UID"
        },
        {
          "name": "pollForKID",
          "type": "KID"
        }
      ],
      "response": "UserPlusKeys",
      "doc": "Load a user + device keys from the server."
    },
    "loadUserPlusKeysV2": {
      "request": [
        {
          "name": "sessionID",
          "type": "int"
        },
        {
          "name": "uid",
          "type": "UID"
        },
        {
          "name": "pollForKID",
          "type": "KID"
        },
        {
          "name": "oa",
          "type": "OfflineAvailability"
        }
      ],
      "response": "UserPlusKeysV2AllIncarnations"
    },
    "loadPublicKeys": {
      "request": [
        {
          "name": "sessionID",
          "type": "int"
        },
        {
          "name": "uid",
          "type": "UID"
        }
      ],
      "response": {
        "type": "array",
        "items": "PublicKey"
      },
      "doc": "Load public keys for a user."
    },
    "loadMyPublicKeys": {
      "request": [
        {
          "name": "sessionID",
          "type": "int"
        }
      ],
      "response": {
        "type": "array",
        "items": "PublicKey"
      },
      "doc": "Load my public keys (for logged in user)."
    },
    "loadMySettings": {
      "request": [
        {
          "name": "sessionID",
          "type": "int"
        }
      ],
      "response": "UserSettings",
      "doc": "Load user settings (for logged in user)."
    },
    "listTracking": {
      "request": [
        {
          "name": "sessionID",
          "type": "int"
        },
        {
          "name": "filter",
          "type": "string"
        },
        {
          "name": "assertion",
          "type": "string"
        }
      ],
      "response": {
        "type": "array",
        "items": "UserSummary"
      },
      "doc": "The list-tracking functions get verified data from the tracking statements\n    in the user's sigchain.\n\n    If assertion is empty, it will use the current logged in user."
    },
    "listTrackingJSON": {
      "request": [
        {
          "name": "sessionID",
          "type": "int"
        },
        {
          "name": "filter",
          "type": "string"
        },
        {
          "name": "verbose",
          "type": "boolean"
        },
        {
          "name": "assertion",
          "type": "string"
        }
      ],
      "response": "string"
    },
    "loadAllPublicKeysUnverified": {
      "request": [
        {
          "name": "sessionID",
          "type": "int"
        },
        {
          "name": "uid",
          "type": "UID"
        }
      ],
      "response": {
        "type": "array",
        "items": "PublicKey"
      },
      "doc": "Load all the user's public keys (even those in reset key families)\n    from the server with no verification"
    },
    "listTrackers2": {
      "request": [
        {
          "name": "sessionID",
          "type": "int"
        },
        {
          "name": "assertion",
          "type": "string"
        },
        {
          "name": "reverse",
          "type": "boolean"
        }
      ],
      "response": "UserSummary2Set"
    },
    "profileEdit": {
      "request": [
        {
          "name": "sessionID",
          "type": "int"
        },
        {
          "name": "fullName",
          "type": "string"
        },
        {
          "name": "location",
          "type": "string"
        },
        {
          "name": "bio",
          "type": "string"
        }
      ],
      "response": null
    },
    "interestingPeople": {
      "request": [
        {
          "name": "maxUsers",
          "type": "int"
        }
      ],
      "response": {
        "type": "array",
        "items": "InterestingPerson"
      }
    },
    "meUserVersion": {
      "request": [
        {
          "name": "sessionID",
          "type": "int"
        },
        {
          "name": "forcePoll",
          "type": "boolean"
        }
      ],
      "response": "UserVersion"
    },
    "getUPAK": {
      "request": [
        {
          "name": "uid",
          "type": "UID"
        }
      ],
      "response": "UPAKVersioned",
      "doc": "getUPAK returns a UPAK. Used mainly for debugging.",
      "lint": "ignore"
    },
    "getUPAKLite": {
      "request": [
        {
          "name": "uid",
          "type": "UID"
        }
      ],
      "response": "UPKLiteV1AllIncarnations",
      "doc": "getUPAKLite returns a UPKLiteV1AllIncarnations. Used mainly for debugging.",
      "lint": "ignore"
    },
    "uploadUserAvatar": {
      "request": [
        {
          "name": "filename",
          "type": "string"
        },
        {
          "name": "crop",
          "type": [
            null,
            "ImageCropRect"
          ]
        }
      ],
      "response": null
    },
    "proofSuggestions": {
      "request": [
        {
          "name": "sessionID",
          "type": "int"
        }
      ],
      "response": "ProofSuggestionsRes"
    },
    "findNextMerkleRootAfterRevoke": {
      "request": [
        {
          "name": "uid",
          "type": "UID"
        },
        {
          "name": "kid",
          "type": "KID"
        },
        {
          "name": "loc",
          "type": "SigChainLocation"
        },
        {
          "name": "prev",
          "type": "MerkleRootV2"
        }
      ],
      "response": "NextMerkleRootRes",
      "doc": "FindNextMerkleRootAfterRevoke finds the first Merkle Root that contains the UID/KID\n   revocation at the given SigChainLocataion. The MerkleRootV2 prev is a hint as to where\n   we'll start our search. Usually it's the next one, but not always"
    },
    "findNextMerkleRootAfterReset": {
      "request": [
        {
          "name": "uid",
          "type": "UID"
        },
        {
          "name": "resetSeqno",
          "type": "Seqno"
        },
        {
          "name": "prev",
          "type": "ResetMerkleRoot"
        }
      ],
      "response": "NextMerkleRootRes",
      "doc": "FindNextMerkleRootAfterReset finds the first Merkle root that contains the UID reset\n   at resetSeqno. You should pass it prev, which was the last known Merkle root at the time of\n   the reset. Usually, we'll just turn up the next Merkle root, but not always."
    },
    "canLogout": {
      "request": [
        {
          "name": "sessionID",
          "type": "int"
        }
      ],
      "response": "CanLogoutRes"
    },
    "loadPassphraseState": {
      "request": [
        {
          "name": "sessionID",
          "type": "int"
        }
      ],
      "response": "PassphraseState"
    },
    "userCard": {
      "request": [
        {
          "name": "sessionID",
          "type": "int"
        },
        {
          "name": "username",
          "type": "string"
        },
        {
          "name": "useSession",
          "type": "boolean"
        }
      ],
      "response": [
        null,
        "UserCard"
      ]
    },
    "setUserBlocks": {
      "request": [
        {
          "name": "sessionID",
          "type": "int"
        },
        {
          "name": "blocks",
          "type": {
            "type": "array",
            "items": "UserBlockArg"
          }
        }
      ],
      "response": null
    },
    "getUserBlocks": {
      "request": [
        {
          "name": "sessionID",
          "type": "int"
        },
        {
          "name": "usernames",
          "type": {
            "type": "array",
            "items": "string"
          }
        }
      ],
      "response": {
        "type": "array",
        "items": "UserBlock"
      }
    },
    "reportUser": {
      "request": [
        {
          "name": "sessionID",
          "type": "int"
        },
        {
          "name": "username",
          "type": "string"
        },
        {
          "name": "reason",
          "type": "string"
        },
        {
          "name": "comment",
          "type": "string"
        },
        {
          "name": "includeTranscript",
          "type": "boolean"
        },
        {
          "name": "convID",
          "type": [
            null,
            "string"
          ]
        }
      ],
      "response": null
    },
    "dismissBlockButtons": {
      "request": [
        {
          "name": "tlfID",
          "type": "TLFID"
        }
      ],
      "response": null
    },
    "blockUser": {
      "request": [
        {
          "name": "username",
          "type": "string"
        }
      ],
      "response": null
    },
    "unblockUser": {
      "request": [
        {
          "name": "username",
          "type": "string"
        }
      ],
      "response": null
    }
  },
  "namespace": "keybase.1"
}