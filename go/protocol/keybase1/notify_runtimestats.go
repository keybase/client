// Auto-generated by avdl-compiler v1.3.29 (https://github.com/keybase/node-avdl-compiler)
//   Input file: avdl/keybase1/notify_runtimestats.avdl

package keybase1

import (
	"github.com/keybase/go-framed-msgpack-rpc/rpc"
	context "golang.org/x/net/context"
)

type RuntimeStats struct {
	Cpu      string `codec:"cpu" json:"cpu"`
	Resident string `codec:"resident" json:"resident"`
}

func (o RuntimeStats) DeepCopy() RuntimeStats {
	return RuntimeStats{
		Cpu:      o.Cpu,
		Resident: o.Resident,
	}
}

type RuntimeStatsUpdateArg struct {
	Stats RuntimeStats `codec:"stats" json:"stats"`
}

type NotifyRuntimeStatsInterface interface {
	RuntimeStatsUpdate(context.Context, RuntimeStats) error
}

func NotifyRuntimeStatsProtocol(i NotifyRuntimeStatsInterface) rpc.Protocol {
	return rpc.Protocol{
		Name: "keybase.1.NotifyRuntimeStats",
		Methods: map[string]rpc.ServeHandlerDescription{
			"runtimeStatsUpdate": {
				MakeArg: func() interface{} {
					var ret [1]RuntimeStatsUpdateArg
					return &ret
				},
				Handler: func(ctx context.Context, args interface{}) (ret interface{}, err error) {
					typedArgs, ok := args.(*[1]RuntimeStatsUpdateArg)
					if !ok {
						err = rpc.NewTypeError((*[1]RuntimeStatsUpdateArg)(nil), args)
						return
					}
					err = i.RuntimeStatsUpdate(ctx, typedArgs[0].Stats)
					return
				},
			},
		},
	}
}

type NotifyRuntimeStatsClient struct {
	Cli rpc.GenericClient
}

func (c NotifyRuntimeStatsClient) RuntimeStatsUpdate(ctx context.Context, stats RuntimeStats) (err error) {
	__arg := RuntimeStatsUpdateArg{Stats: stats}
	err = c.Cli.Notify(ctx, "keybase.1.NotifyRuntimeStats.runtimeStatsUpdate", []interface{}{__arg})
	return
}
