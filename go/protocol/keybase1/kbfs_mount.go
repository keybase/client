// Auto-generated by avdl-compiler v1.3.9 (https://github.com/keybase/node-avdl-compiler)
//   Input file: avdl/keybase1/kbfs_mount.avdl

package keybase1

import (
	"github.com/keybase/go-framed-msgpack-rpc/rpc"
	context "golang.org/x/net/context"
)

type GetCurrentDriveLetterArg struct {
}

type GetAllAvailableDriveLettersArg struct {
}

type SetCurrentDriveLetterArg struct {
	Drive string `codec:"drive" json:"drive"`
}

type Kbfs_mountInterface interface {
	GetCurrentDriveLetter(context.Context) (string, error)
	GetAllAvailableDriveLetters(context.Context) ([]string, error)
	SetCurrentDriveLetter(context.Context, string) error
}

func Kbfs_mountProtocol(i Kbfs_mountInterface) rpc.Protocol {
	return rpc.Protocol{
		Name: "keybase.1.kbfs_mount",
		Methods: map[string]rpc.ServeHandlerDescription{
			"GetCurrentDriveLetter": {
				MakeArg: func() interface{} {
					ret := make([]GetCurrentDriveLetterArg, 1)
					return &ret
				},
				Handler: func(ctx context.Context, args interface{}) (ret interface{}, err error) {
					ret, err = i.GetCurrentDriveLetter(ctx)
					return
				},
				MethodType: rpc.MethodCall,
			},
			"GetAllAvailableDriveLetters": {
				MakeArg: func() interface{} {
					ret := make([]GetAllAvailableDriveLettersArg, 1)
					return &ret
				},
				Handler: func(ctx context.Context, args interface{}) (ret interface{}, err error) {
					ret, err = i.GetAllAvailableDriveLetters(ctx)
					return
				},
				MethodType: rpc.MethodCall,
			},
			"SetCurrentDriveLetter": {
				MakeArg: func() interface{} {
					ret := make([]SetCurrentDriveLetterArg, 1)
					return &ret
				},
				Handler: func(ctx context.Context, args interface{}) (ret interface{}, err error) {
					typedArgs, ok := args.(*[]SetCurrentDriveLetterArg)
					if !ok {
						err = rpc.NewTypeError((*[]SetCurrentDriveLetterArg)(nil), args)
						return
					}
					err = i.SetCurrentDriveLetter(ctx, (*typedArgs)[0].Drive)
					return
				},
				MethodType: rpc.MethodCall,
			},
		},
	}
}

type Kbfs_mountClient struct {
	Cli rpc.GenericClient
}

func (c Kbfs_mountClient) GetCurrentDriveLetter(ctx context.Context) (res string, err error) {
	err = c.Cli.Call(ctx, "keybase.1.kbfs_mount.GetCurrentDriveLetter", []interface{}{GetCurrentDriveLetterArg{}}, &res)
	return
}

func (c Kbfs_mountClient) GetAllAvailableDriveLetters(ctx context.Context) (res []string, err error) {
	err = c.Cli.Call(ctx, "keybase.1.kbfs_mount.GetAllAvailableDriveLetters", []interface{}{GetAllAvailableDriveLettersArg{}}, &res)
	return
}

func (c Kbfs_mountClient) SetCurrentDriveLetter(ctx context.Context, drive string) (err error) {
	__arg := SetCurrentDriveLetterArg{Drive: drive}
	err = c.Cli.Call(ctx, "keybase.1.kbfs_mount.SetCurrentDriveLetter", []interface{}{__arg}, nil)
	return
}
