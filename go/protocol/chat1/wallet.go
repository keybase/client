// Auto-generated by avdl-compiler v1.3.25 (https://github.com/keybase/node-avdl-compiler)
//   Input file: avdl/chat1/wallet.avdl

package chat1

import (
	"github.com/keybase/go-framed-msgpack-rpc/rpc"
)

type ChatTxCandidate struct {
	CurrencyCode string  `codec:"currencyCode" json:"currencyCode"`
	Amount       string  `codec:"amount" json:"amount"`
	Username     *string `codec:"username,omitempty" json:"username,omitempty"`
}

func (o ChatTxCandidate) DeepCopy() ChatTxCandidate {
	return ChatTxCandidate{
		CurrencyCode: o.CurrencyCode,
		Amount:       o.Amount,
		Username: (func(x *string) *string {
			if x == nil {
				return nil
			}
			tmp := (*x)
			return &tmp
		})(o.Username),
	}
}

type WalletInterface interface {
}

func WalletProtocol(i WalletInterface) rpc.Protocol {
	return rpc.Protocol{
		Name:    "chat.1.wallet",
		Methods: map[string]rpc.ServeHandlerDescription{},
	}
}

type WalletClient struct {
	Cli rpc.GenericClient
}
