{
  "prelude": [
    "import * as RPCChatTypes from '../constants/types/rpc-chat-gen'",
    "import * as Types from '../constants/types/settings'",
    "import HiddenString from '../util/hidden-string'"
  ],
  "actions": {
    "addPhoneNumber": {
      "_description": "Add a phone number and kick off a text message with a verification code.",
      "allowSearch": "boolean",
      "phoneNumber": "string"
    },
    "addedPhoneNumber": {
      "_description": "We just attempted to add a phone number and either got an error or the number is pending verification.",
      "allowSearch": "boolean",
      "error?": "string",
      "phoneNumber": "string"
    },
    "resendVerificationForPhoneNumber": {
      "_description": "Resend verification code for a phone number that's already added.",
      "phoneNumber": "string"
    },
    "verifyPhoneNumber": {
      "_description": "Submit a verification code for a phone number",
      "phoneNumber": "string",
      "code": "string"
    },
    "verifiedPhoneNumber": {
      "_description": "We verified a phone number or hit an error.",
      "error?": "string",
      "phoneNumber": "string"
    },
    "clearPhoneNumberAdd": {
      "_description": "Cancel adding a phone number."
    },
    "clearPhoneNumberErrors": {
      "_description": "Clear only error from phone number add flow."
    },
    "dbNuke": {},
    "deleteAccountForever": {},
    "editEmail": {
      "email": "string",
      "delete?": "boolean",
      "makePrimary?": "boolean",
      "makeSearchable?": "boolean | null",
      "verify?": "boolean"
    },
    "editPhone": {
      "phone": "string",
      "delete?": "boolean",
      "setSearchable?": "boolean",
    },
    "sentVerificationEmail": {
      "email": "string"
    },
    "loadContactImportEnabled": {
      "_description": "Load whether config says we've enabled contact importing and check OS contacts permission status."
    },
    "loadedContactImportEnabled": {
      "enabled": "boolean"
    },
    "loadedContactPermissions": {
      "status": ["'granted'", "'never_ask_again'", "'undetermined'"]
    },
    "requestContactPermissions": {
      "thenToggleImportOn?": "boolean"
    },
    "editContactImportEnabled": {
      "enable": "boolean"
    },
    "importContactsLater": {},
    "setContactImportedCount": {
      "count": "number | null"
    },
    "loadedUserCountryCode": {
      "code": "string | null"
    },
    "addEmail": {
      "email": "string",
      "searchable": "boolean"
    },
    "addedEmail": {
      "email": "string",
      "error?": "Error"
    },
    "clearAddingEmail": {"_description": "Reset state used for adding an email."},
    "clearAddedEmail": {"_description": "Reset state used for showing we just added an email."},
    "invitesClearError": {},
    "invitesReclaim": {
      "inviteId": "string"
    },
    "invitesReclaimed": {
      "canError": {
        "errorText": "string"
      }
    },
    "invitesRefresh": {},
    "invitesRefreshed": {
      "invites": "Types._InvitesState"
    },
    "invitesSend": {
      "email": "string",
      "message": "string | null"
    },
    "invitesSent": {
      "canError": {
        "error": "Error"
      }
    },
    "loadRememberPassword": {},
    "loadedRememberPassword": {
      "remember": "boolean"
    },
    "loadSettings": {},
    "loadedSettings": {
      "emails": "I.Map<string, Types.EmailRow> | null",
      "phones": "I.Map<string, Types.PhoneRow> | null"
    },
    "loadLockdownMode": {},
    "loadedLockdownMode": {
      "status": "boolean | null"
    },
    "onChangeLockdownMode": {
      "enabled": "boolean"
    },
    "onChangeUseNativeFrame": {
      "enabled": "boolean"
    },
    "notificationsRefresh": {},
    "notificationsRefreshed": {
      "notifications": "I.Map<string, Types.NotificationsGroupState>"
    },
    "notificationsSaved": {},
    "notificationsToggle": {
      "group": "string",
      "name?": "string | null"
    },
    "onChangeNewEmail": {
      "email": "string"
    },
    "onChangeNewPassword": {
      "password": "HiddenString"
    },
    "onChangeNewPasswordConfirm": {
      "password": "HiddenString"
    },
    "onChangeRememberPassword": {
      "remember": "boolean"
    },
    "onChangeShowPassword": {},
    "onSubmitNewEmail": {},
    "onSubmitNewPassword": {
      "thenSignOut": "boolean"
    },
    "onUpdateEmailError": {
      "error": "Error"
    },
    "onUpdatePGPSettings": {},
    "onUpdatePasswordError": {
      "error": "Error"
    },
    "onUpdatedPGPSettings": {
      "hasKeys": "boolean"
    },
    "setAllowDeleteAccount": {
      "allow": "boolean"
    },
    "stop": {
      "exitCode": "RPCTypes.ExitCode"
    },
    "trace": {
      "durationSeconds": "number"
    },
    "processorProfile": {
      "durationSeconds": "number"
    },
    "unfurlSettingsSaved": {
      "_description": "Update unfurl settings from settings screen",
      "mode": "RPCChatTypes.UnfurlMode",
      "whitelist": "I.List<string>"
    },
    "unfurlSettingsRefresh": {
      "_description": "Refresh unfurl settings"
    },
    "unfurlSettingsRefreshed": {
      "_description": "Refreshed unfurl settings available",
      "mode": "RPCChatTypes.UnfurlMode",
      "whitelist": "I.List<string>"
    },
    "unfurlSettingsError": {
      "_description": "An error occurred on the unfurl settings screen",
      "error": "string"
    },
    "loadHasRandomPw": {},
    "loadedHasRandomPw": {
      "randomPW": "boolean"
    },
    "checkPassword": {
      "password": "HiddenString"
    },
    "loadedCheckPassword": {
      "checkPasswordIsCorrect": "boolean | null"
    },
    "sendFeedback": {
      "feedback": "string",
      "sendLogs": "boolean",
      "sendMaxBytes": "boolean"
    },
    "feedbackSent": {
      "_description": "An error occurred while trying to send feedback to Keybase",
      "error": "Error | null"
    },
    "loadProxyData": {},
    "loadedProxyData": {
      "proxyData": "RPCTypes.ProxyData"
    },
    "saveProxyData": {
      "proxyData": "RPCTypes.ProxyData"
    },
    "certificatePinningToggled": {
      "toggled": "boolean | null"
    },
    "toggleRuntimeStats": {}
  }
}
