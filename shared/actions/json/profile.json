{
  "prelude": [
    "import * as Types from '../constants/types/profile'",
    "import * as More from '../constants/types/more'"
  ],
  "actions": {
    "addProof": {
      "platform": "string",
      "reason": [
        "'appLink'", // keybase:// URL
        "'profile'" // from profile tab
      ]
    },
    "proofParamsReceived": {"params": "Types.ProveGenericParams"},
    "updatePlatformGenericURL": {"url": "string"},
    "updatePlatformGenericChecking": {"checking": "boolean"},
    "clearPlatformGeneric": {},
    "backToProfile": {},
    "cancelAddProof": {},
    "cancelPgpGen": {},
    "checkProof": {},
    "recheckProof": {"sigID": "string"},
    "cleanupUsername": {},
    "uploadAvatar": {
      "filename": "string",
      "crop?": "RPCTypes.ImageCropRect"
    },
    "editAvatar": {},
    "editProfile": {
      "bio": "string",
      "fullname": "string",
      "location": "string"
    },
    "revokeFinish": {
      "error?": "string"
    },
    "finishRevoking": {},
    "finishedWithKeyGen": {
      "shouldStoreKeyOnServer": "boolean"
    },
    "generatePgp": {},
    "onClickAvatar": {
      "username": "string",
      "openWebsite?": "boolean"
    },
    "showUserProfile": {"username": "string"},
    "submitZcashAddress": {},
    "submitBTCAddress": {},
    "submitRevokeProof": {"proofId": "string"},
    "submitUsername": {},
    "submitBlockUser": {"username": "string"},
    "submitUnblockUser": {
      "username": "string",
      "guiID": "string"
    },
    "finishBlockUser": {
      "error?": "string"
    },
    "updateErrorText": {
      "errorText": "string",
      "errorCode?": "number"
    },
    "updatePgpInfo": {
      "_description": "Update any fields",
      "pgpEmail1?": "string",
      "pgpEmail2?": "string",
      "pgpEmail3?": "string",
      "pgpErrorText?": "string",
      "pgpFullName?": "string"
    },
    "updatePgpPublicKey": {"publicKey": "string"},
    "updatePlatform": {"platform": "More.PlatformsExpandedType"},
    "updatePromptShouldStoreKeyOnServer": {"promptShouldStoreKeyOnServer": "boolean"},
    "updateProofStatus": {
      "found": "boolean",
      "status": "RPCTypes.ProofStatus"
    },
    "updateProofText": {"proof": "string"},
    "updateSigID": {"sigID?": "RPCTypes.SigID"},
    "updateUsername": {"username": "string"}
  }
}
