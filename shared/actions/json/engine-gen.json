{
    "prelude": [
        "import type * as chat1Types from '@/constants/types/rpc-chat-gen'",
        "import type * as keybase1Types from '@/constants/types/rpc-gen'",
        "import type * as stellar1Types from '@/constants/types/rpc-stellar-gen'"
    ],
    "actions": {
        "chat1ChatUiChatInboxLayout": {
            "params": "chat1Types.MessageTypes['chat.1.chatUi.chatInboxLayout']['inParam'] , response: {error: chat1Types.IncomingErrorCallback, result: (param: chat1Types.MessageTypes['chat.1.chatUi.chatInboxLayout']['outParam']) => void}"
        },
        "chat1ChatUiChatInboxUnverified": {
            "params": "chat1Types.MessageTypes['chat.1.chatUi.chatInboxUnverified']['inParam'] , response: {error: chat1Types.IncomingErrorCallback, result: (param: chat1Types.MessageTypes['chat.1.chatUi.chatInboxUnverified']['outParam']) => void}"
        },
        "chat1ChatUiChatInboxConversation": {
            "params": "chat1Types.MessageTypes['chat.1.chatUi.chatInboxConversation']['inParam'] , response: {error: chat1Types.IncomingErrorCallback, result: (param: chat1Types.MessageTypes['chat.1.chatUi.chatInboxConversation']['outParam']) => void}"
        },
        "chat1ChatUiChatInboxFailed": {
            "params": "chat1Types.MessageTypes['chat.1.chatUi.chatInboxFailed']['inParam'] , response: {error: chat1Types.IncomingErrorCallback, result: (param: chat1Types.MessageTypes['chat.1.chatUi.chatInboxFailed']['outParam']) => void}"
        },
        "chat1ChatUiChatThreadCached": {
            "params": "chat1Types.MessageTypes['chat.1.chatUi.chatThreadCached']['inParam'] , response: {error: chat1Types.IncomingErrorCallback, result: (param: chat1Types.MessageTypes['chat.1.chatUi.chatThreadCached']['outParam']) => void}"
        },
        "chat1ChatUiChatThreadFull": {
            "params": "chat1Types.MessageTypes['chat.1.chatUi.chatThreadFull']['inParam'] , response: {error: chat1Types.IncomingErrorCallback, result: (param: chat1Types.MessageTypes['chat.1.chatUi.chatThreadFull']['outParam']) => void}"
        },
        "chat1ChatUiChatThreadStatus": {
            "params": "chat1Types.MessageTypes['chat.1.chatUi.chatThreadStatus']['inParam'] , response: {error: chat1Types.IncomingErrorCallback, result: (param: chat1Types.MessageTypes['chat.1.chatUi.chatThreadStatus']['outParam']) => void}"
        },
        "chat1ChatUiChatSearchHit": {
            "params": "chat1Types.MessageTypes['chat.1.chatUi.chatSearchHit']['inParam'] , response: {error: chat1Types.IncomingErrorCallback, result: (param: chat1Types.MessageTypes['chat.1.chatUi.chatSearchHit']['outParam']) => void}"
        },
        "chat1ChatUiChatSearchDone": {
            "params": "chat1Types.MessageTypes['chat.1.chatUi.chatSearchDone']['inParam'] , response: {error: chat1Types.IncomingErrorCallback, result: (param: chat1Types.MessageTypes['chat.1.chatUi.chatSearchDone']['outParam']) => void}"
        },
        "chat1ChatUiChatSearchInboxStart": {
            "params": "chat1Types.MessageTypes['chat.1.chatUi.chatSearchInboxStart']['inParam'] , response: {error: chat1Types.IncomingErrorCallback, result: (param: chat1Types.MessageTypes['chat.1.chatUi.chatSearchInboxStart']['outParam']) => void}"
        },
        "chat1ChatUiChatSearchInboxHit": {
            "params": "chat1Types.MessageTypes['chat.1.chatUi.chatSearchInboxHit']['inParam'] , response: {error: chat1Types.IncomingErrorCallback, result: (param: chat1Types.MessageTypes['chat.1.chatUi.chatSearchInboxHit']['outParam']) => void}"
        },
        "chat1ChatUiChatSearchInboxDone": {
            "params": "chat1Types.MessageTypes['chat.1.chatUi.chatSearchInboxDone']['inParam'] , response: {error: chat1Types.IncomingErrorCallback, result: (param: chat1Types.MessageTypes['chat.1.chatUi.chatSearchInboxDone']['outParam']) => void}"
        },
        "chat1ChatUiChatSearchIndexStatus": {
            "params": "chat1Types.MessageTypes['chat.1.chatUi.chatSearchIndexStatus']['inParam'] , response: {error: chat1Types.IncomingErrorCallback, result: (param: chat1Types.MessageTypes['chat.1.chatUi.chatSearchIndexStatus']['outParam']) => void}"
        },
        "chat1ChatUiChatSearchConvHits": {
            "params": "chat1Types.MessageTypes['chat.1.chatUi.chatSearchConvHits']['inParam'] , response: {error: chat1Types.IncomingErrorCallback, result: (param: chat1Types.MessageTypes['chat.1.chatUi.chatSearchConvHits']['outParam']) => void}"
        },
        "chat1ChatUiChatSearchTeamHits": {
            "params": "chat1Types.MessageTypes['chat.1.chatUi.chatSearchTeamHits']['inParam'] , response: {error: chat1Types.IncomingErrorCallback, result: (param: chat1Types.MessageTypes['chat.1.chatUi.chatSearchTeamHits']['outParam']) => void}"
        },
        "chat1ChatUiChatSearchBotHits": {
            "params": "chat1Types.MessageTypes['chat.1.chatUi.chatSearchBotHits']['inParam'] , response: {error: chat1Types.IncomingErrorCallback, result: (param: chat1Types.MessageTypes['chat.1.chatUi.chatSearchBotHits']['outParam']) => void}"
        },
        "chat1ChatUiChatConfirmChannelDelete": {
            "params": "chat1Types.MessageTypes['chat.1.chatUi.chatConfirmChannelDelete']['inParam'] , response: {error: chat1Types.IncomingErrorCallback, result: (param: chat1Types.MessageTypes['chat.1.chatUi.chatConfirmChannelDelete']['outParam']) => void}"
        },
        "chat1ChatUiChatStellarShowConfirm": {
            "params": "chat1Types.MessageTypes['chat.1.chatUi.chatStellarShowConfirm']['inParam'] , response: {error: chat1Types.IncomingErrorCallback, result: (param: chat1Types.MessageTypes['chat.1.chatUi.chatStellarShowConfirm']['outParam']) => void}"
        },
        "chat1ChatUiChatStellarDataConfirm": {
            "params": "chat1Types.MessageTypes['chat.1.chatUi.chatStellarDataConfirm']['inParam'] , response: {error: chat1Types.IncomingErrorCallback, result: (param: chat1Types.MessageTypes['chat.1.chatUi.chatStellarDataConfirm']['outParam']) => void}"
        },
        "chat1ChatUiChatStellarDataError": {
            "params": "chat1Types.MessageTypes['chat.1.chatUi.chatStellarDataError']['inParam'] , response: {error: chat1Types.IncomingErrorCallback, result: (param: chat1Types.MessageTypes['chat.1.chatUi.chatStellarDataError']['outParam']) => void}"
        },
        "chat1ChatUiChatStellarDone": {
            "params": "chat1Types.MessageTypes['chat.1.chatUi.chatStellarDone']['inParam'] , response: {error: chat1Types.IncomingErrorCallback, result: (param: chat1Types.MessageTypes['chat.1.chatUi.chatStellarDone']['outParam']) => void}"
        },
        "chat1ChatUiChatGiphySearchResults": {
            "params": "chat1Types.MessageTypes['chat.1.chatUi.chatGiphySearchResults']['inParam'] , response: {error: chat1Types.IncomingErrorCallback, result: (param: chat1Types.MessageTypes['chat.1.chatUi.chatGiphySearchResults']['outParam']) => void}"
        },
        "chat1ChatUiChatGiphyToggleResultWindow": {
            "params": "chat1Types.MessageTypes['chat.1.chatUi.chatGiphyToggleResultWindow']['inParam'] , response: {error: chat1Types.IncomingErrorCallback, result: (param: chat1Types.MessageTypes['chat.1.chatUi.chatGiphyToggleResultWindow']['outParam']) => void}"
        },
        "chat1ChatUiChatShowManageChannels": {
            "params": "chat1Types.MessageTypes['chat.1.chatUi.chatShowManageChannels']['inParam'] , response: {error: chat1Types.IncomingErrorCallback, result: (param: chat1Types.MessageTypes['chat.1.chatUi.chatShowManageChannels']['outParam']) => void}"
        },
        "chat1ChatUiChatCoinFlipStatus": {
            "params": "chat1Types.MessageTypes['chat.1.chatUi.chatCoinFlipStatus']['inParam'] , response: {error: chat1Types.IncomingErrorCallback, result: (param: chat1Types.MessageTypes['chat.1.chatUi.chatCoinFlipStatus']['outParam']) => void}"
        },
        "chat1ChatUiChatCommandMarkdown": {
            "params": "chat1Types.MessageTypes['chat.1.chatUi.chatCommandMarkdown']['inParam'] , response: {error: chat1Types.IncomingErrorCallback, result: (param: chat1Types.MessageTypes['chat.1.chatUi.chatCommandMarkdown']['outParam']) => void}"
        },
        "chat1ChatUiChatMaybeMentionUpdate": {
            "params": "chat1Types.MessageTypes['chat.1.chatUi.chatMaybeMentionUpdate']['inParam'] , response: {error: chat1Types.IncomingErrorCallback, result: (param: chat1Types.MessageTypes['chat.1.chatUi.chatMaybeMentionUpdate']['outParam']) => void}"
        },
        "chat1ChatUiChatLoadGalleryHit": {
            "params": "chat1Types.MessageTypes['chat.1.chatUi.chatLoadGalleryHit']['inParam'] , response: {error: chat1Types.IncomingErrorCallback, result: (param: chat1Types.MessageTypes['chat.1.chatUi.chatLoadGalleryHit']['outParam']) => void}"
        },
        "chat1ChatUiChatWatchPosition": {
            "params": "chat1Types.MessageTypes['chat.1.chatUi.chatWatchPosition']['inParam'] , response: {error: chat1Types.IncomingErrorCallback, result: (param: chat1Types.MessageTypes['chat.1.chatUi.chatWatchPosition']['outParam']) => void}"
        },
        "chat1ChatUiChatClearWatch": {
            "params": "chat1Types.MessageTypes['chat.1.chatUi.chatClearWatch']['inParam'] , response: {error: chat1Types.IncomingErrorCallback, result: (param: chat1Types.MessageTypes['chat.1.chatUi.chatClearWatch']['outParam']) => void}"
        },
        "chat1ChatUiChatCommandStatus": {
            "params": "chat1Types.MessageTypes['chat.1.chatUi.chatCommandStatus']['inParam'] , response: {error: chat1Types.IncomingErrorCallback, result: (param: chat1Types.MessageTypes['chat.1.chatUi.chatCommandStatus']['outParam']) => void}"
        },
        "chat1ChatUiChatBotCommandsUpdateStatus": {
            "params": "chat1Types.MessageTypes['chat.1.chatUi.chatBotCommandsUpdateStatus']['inParam'] , response: {error: chat1Types.IncomingErrorCallback, result: (param: chat1Types.MessageTypes['chat.1.chatUi.chatBotCommandsUpdateStatus']['outParam']) => void}"
        },
        "chat1ChatUiTriggerContactSync": {
            "params": "chat1Types.MessageTypes['chat.1.chatUi.triggerContactSync']['inParam'] , response: {error: chat1Types.IncomingErrorCallback, result: (param: chat1Types.MessageTypes['chat.1.chatUi.triggerContactSync']['outParam']) => void}"
        },
        "chat1NotifyChatNewChatActivity": {
            "params": "chat1Types.MessageTypes['chat.1.NotifyChat.NewChatActivity']['inParam'] "
        },
        "chat1NotifyChatChatIdentifyUpdate": {
            "params": "chat1Types.MessageTypes['chat.1.NotifyChat.ChatIdentifyUpdate']['inParam'] "
        },
        "chat1NotifyChatChatTLFFinalize": {
            "params": "chat1Types.MessageTypes['chat.1.NotifyChat.ChatTLFFinalize']['inParam'] "
        },
        "chat1NotifyChatChatTLFResolve": {
            "params": "chat1Types.MessageTypes['chat.1.NotifyChat.ChatTLFResolve']['inParam'] "
        },
        "chat1NotifyChatChatInboxStale": {
            "params": "chat1Types.MessageTypes['chat.1.NotifyChat.ChatInboxStale']['inParam'] "
        },
        "chat1NotifyChatChatThreadsStale": {
            "params": "chat1Types.MessageTypes['chat.1.NotifyChat.ChatThreadsStale']['inParam'] "
        },
        "chat1NotifyChatChatTypingUpdate": {
            "params": "chat1Types.MessageTypes['chat.1.NotifyChat.ChatTypingUpdate']['inParam'] "
        },
        "chat1NotifyChatChatJoinedConversation": {
            "params": "chat1Types.MessageTypes['chat.1.NotifyChat.ChatJoinedConversation']['inParam'] "
        },
        "chat1NotifyChatChatLeftConversation": {
            "params": "chat1Types.MessageTypes['chat.1.NotifyChat.ChatLeftConversation']['inParam'] "
        },
        "chat1NotifyChatChatResetConversation": {
            "params": "chat1Types.MessageTypes['chat.1.NotifyChat.ChatResetConversation']['inParam'] "
        },
        "chat1NotifyChatChatInboxSyncStarted": {
            "params": "chat1Types.MessageTypes['chat.1.NotifyChat.ChatInboxSyncStarted']['inParam'] "
        },
        "chat1NotifyChatChatInboxSynced": {
            "params": "chat1Types.MessageTypes['chat.1.NotifyChat.ChatInboxSynced']['inParam'] "
        },
        "chat1NotifyChatChatSetConvRetention": {
            "params": "chat1Types.MessageTypes['chat.1.NotifyChat.ChatSetConvRetention']['inParam'] "
        },
        "chat1NotifyChatChatSetTeamRetention": {
            "params": "chat1Types.MessageTypes['chat.1.NotifyChat.ChatSetTeamRetention']['inParam'] "
        },
        "chat1NotifyChatChatSetConvSettings": {
            "params": "chat1Types.MessageTypes['chat.1.NotifyChat.ChatSetConvSettings']['inParam'] "
        },
        "chat1NotifyChatChatSubteamRename": {
            "params": "chat1Types.MessageTypes['chat.1.NotifyChat.ChatSubteamRename']['inParam'] "
        },
        "chat1NotifyChatChatKBFSToImpteamUpgrade": {
            "params": "chat1Types.MessageTypes['chat.1.NotifyChat.ChatKBFSToImpteamUpgrade']['inParam'] "
        },
        "chat1NotifyChatChatAttachmentUploadStart": {
            "params": "chat1Types.MessageTypes['chat.1.NotifyChat.ChatAttachmentUploadStart']['inParam'] "
        },
        "chat1NotifyChatChatAttachmentUploadProgress": {
            "params": "chat1Types.MessageTypes['chat.1.NotifyChat.ChatAttachmentUploadProgress']['inParam'] "
        },
        "chat1NotifyChatChatAttachmentDownloadProgress": {
            "params": "chat1Types.MessageTypes['chat.1.NotifyChat.ChatAttachmentDownloadProgress']['inParam'] "
        },
        "chat1NotifyChatChatAttachmentDownloadComplete": {
            "params": "chat1Types.MessageTypes['chat.1.NotifyChat.ChatAttachmentDownloadComplete']['inParam'] "
        },
        "chat1NotifyChatChatArchiveProgress": {
            "params": "chat1Types.MessageTypes['chat.1.NotifyChat.ChatArchiveProgress']['inParam'] "
        },
        "chat1NotifyChatChatArchiveComplete": {
            "params": "chat1Types.MessageTypes['chat.1.NotifyChat.ChatArchiveComplete']['inParam'] "
        },
        "chat1NotifyChatChatPaymentInfo": {
            "params": "chat1Types.MessageTypes['chat.1.NotifyChat.ChatPaymentInfo']['inParam'] "
        },
        "chat1NotifyChatChatRequestInfo": {
            "params": "chat1Types.MessageTypes['chat.1.NotifyChat.ChatRequestInfo']['inParam'] "
        },
        "chat1NotifyChatChatPromptUnfurl": {
            "params": "chat1Types.MessageTypes['chat.1.NotifyChat.ChatPromptUnfurl']['inParam'] "
        },
        "chat1NotifyChatChatConvUpdate": {
            "params": "chat1Types.MessageTypes['chat.1.NotifyChat.ChatConvUpdate']['inParam'] "
        },
        "chat1NotifyChatChatWelcomeMessageLoaded": {
            "params": "chat1Types.MessageTypes['chat.1.NotifyChat.ChatWelcomeMessageLoaded']['inParam'] "
        },
        "chat1NotifyChatChatParticipantsInfo": {
            "params": "chat1Types.MessageTypes['chat.1.NotifyChat.ChatParticipantsInfo']['inParam'] "
        },
        "keybase1GpgUiWantToAddGPGKey": {
            "params": "keybase1Types.MessageTypes['keybase.1.gpgUi.wantToAddGPGKey']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.gpgUi.wantToAddGPGKey']['outParam']) => void}"
        },
        "keybase1GpgUiConfirmDuplicateKeyChosen": {
            "params": "keybase1Types.MessageTypes['keybase.1.gpgUi.confirmDuplicateKeyChosen']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.gpgUi.confirmDuplicateKeyChosen']['outParam']) => void}"
        },
        "keybase1GpgUiConfirmImportSecretToExistingKey": {
            "params": "keybase1Types.MessageTypes['keybase.1.gpgUi.confirmImportSecretToExistingKey']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.gpgUi.confirmImportSecretToExistingKey']['outParam']) => void}"
        },
        "keybase1GpgUiSelectKeyAndPushOption": {
            "params": "keybase1Types.MessageTypes['keybase.1.gpgUi.selectKeyAndPushOption']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.gpgUi.selectKeyAndPushOption']['outParam']) => void}"
        },
        "keybase1GpgUiSelectKey": {
            "params": "keybase1Types.MessageTypes['keybase.1.gpgUi.selectKey']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.gpgUi.selectKey']['outParam']) => void}"
        },
        "keybase1GpgUiSign": {
            "params": "keybase1Types.MessageTypes['keybase.1.gpgUi.sign']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.gpgUi.sign']['outParam']) => void}"
        },
        "keybase1GpgUiGetTTY": {
            "params": "keybase1Types.MessageTypes['keybase.1.gpgUi.getTTY']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.gpgUi.getTTY']['outParam']) => void}"
        },
        "keybase1GregorUIPushState": {
            "params": "keybase1Types.MessageTypes['keybase.1.gregorUI.pushState']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.gregorUI.pushState']['outParam']) => void}"
        },
        "keybase1GregorUIPushOutOfBandMessages": {
            "params": "keybase1Types.MessageTypes['keybase.1.gregorUI.pushOutOfBandMessages']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.gregorUI.pushOutOfBandMessages']['outParam']) => void}"
        },
        "keybase1HomeUIHomeUIRefresh": {
            "params": "keybase1Types.MessageTypes['keybase.1.homeUI.homeUIRefresh']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.homeUI.homeUIRefresh']['outParam']) => void}"
        },
        "keybase1Identify3UiIdentify3ShowTracker": {
            "params": "keybase1Types.MessageTypes['keybase.1.identify3Ui.identify3ShowTracker']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.identify3Ui.identify3ShowTracker']['outParam']) => void}"
        },
        "keybase1Identify3UiIdentify3Summary": {
            "params": "keybase1Types.MessageTypes['keybase.1.identify3Ui.identify3Summary']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.identify3Ui.identify3Summary']['outParam']) => void}"
        },
        "keybase1Identify3UiIdentify3UpdateRow": {
            "params": "keybase1Types.MessageTypes['keybase.1.identify3Ui.identify3UpdateRow']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.identify3Ui.identify3UpdateRow']['outParam']) => void}"
        },
        "keybase1Identify3UiIdentify3UserReset": {
            "params": "keybase1Types.MessageTypes['keybase.1.identify3Ui.identify3UserReset']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.identify3Ui.identify3UserReset']['outParam']) => void}"
        },
        "keybase1Identify3UiIdentify3UpdateUserCard": {
            "params": "keybase1Types.MessageTypes['keybase.1.identify3Ui.identify3UpdateUserCard']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.identify3Ui.identify3UpdateUserCard']['outParam']) => void}"
        },
        "keybase1Identify3UiIdentify3TrackerTimedOut": {
            "params": "keybase1Types.MessageTypes['keybase.1.identify3Ui.identify3TrackerTimedOut']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.identify3Ui.identify3TrackerTimedOut']['outParam']) => void}"
        },
        "keybase1Identify3UiIdentify3Result": {
            "params": "keybase1Types.MessageTypes['keybase.1.identify3Ui.identify3Result']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.identify3Ui.identify3Result']['outParam']) => void}"
        },
        "keybase1IdentifyUiDisplayTLFCreateWithInvite": {
            "params": "keybase1Types.MessageTypes['keybase.1.identifyUi.displayTLFCreateWithInvite']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.identifyUi.displayTLFCreateWithInvite']['outParam']) => void}"
        },
        "keybase1IdentifyUiDelegateIdentifyUI": {
            "params": "keybase1Types.MessageTypes['keybase.1.identifyUi.delegateIdentifyUI']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.identifyUi.delegateIdentifyUI']['outParam']) => void}"
        },
        "keybase1IdentifyUiStart": {
            "params": "keybase1Types.MessageTypes['keybase.1.identifyUi.start']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.identifyUi.start']['outParam']) => void}"
        },
        "keybase1IdentifyUiDisplayKey": {
            "params": "keybase1Types.MessageTypes['keybase.1.identifyUi.displayKey']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.identifyUi.displayKey']['outParam']) => void}"
        },
        "keybase1IdentifyUiReportLastTrack": {
            "params": "keybase1Types.MessageTypes['keybase.1.identifyUi.reportLastTrack']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.identifyUi.reportLastTrack']['outParam']) => void}"
        },
        "keybase1IdentifyUiLaunchNetworkChecks": {
            "params": "keybase1Types.MessageTypes['keybase.1.identifyUi.launchNetworkChecks']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.identifyUi.launchNetworkChecks']['outParam']) => void}"
        },
        "keybase1IdentifyUiDisplayTrackStatement": {
            "params": "keybase1Types.MessageTypes['keybase.1.identifyUi.displayTrackStatement']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.identifyUi.displayTrackStatement']['outParam']) => void}"
        },
        "keybase1IdentifyUiFinishWebProofCheck": {
            "params": "keybase1Types.MessageTypes['keybase.1.identifyUi.finishWebProofCheck']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.identifyUi.finishWebProofCheck']['outParam']) => void}"
        },
        "keybase1IdentifyUiFinishSocialProofCheck": {
            "params": "keybase1Types.MessageTypes['keybase.1.identifyUi.finishSocialProofCheck']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.identifyUi.finishSocialProofCheck']['outParam']) => void}"
        },
        "keybase1IdentifyUiDisplayCryptocurrency": {
            "params": "keybase1Types.MessageTypes['keybase.1.identifyUi.displayCryptocurrency']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.identifyUi.displayCryptocurrency']['outParam']) => void}"
        },
        "keybase1IdentifyUiDisplayStellarAccount": {
            "params": "keybase1Types.MessageTypes['keybase.1.identifyUi.displayStellarAccount']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.identifyUi.displayStellarAccount']['outParam']) => void}"
        },
        "keybase1IdentifyUiReportTrackToken": {
            "params": "keybase1Types.MessageTypes['keybase.1.identifyUi.reportTrackToken']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.identifyUi.reportTrackToken']['outParam']) => void}"
        },
        "keybase1IdentifyUiDisplayUserCard": {
            "params": "keybase1Types.MessageTypes['keybase.1.identifyUi.displayUserCard']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.identifyUi.displayUserCard']['outParam']) => void}"
        },
        "keybase1IdentifyUiConfirm": {
            "params": "keybase1Types.MessageTypes['keybase.1.identifyUi.confirm']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.identifyUi.confirm']['outParam']) => void}"
        },
        "keybase1IdentifyUiCancel": {
            "params": "keybase1Types.MessageTypes['keybase.1.identifyUi.cancel']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.identifyUi.cancel']['outParam']) => void}"
        },
        "keybase1IdentifyUiFinish": {
            "params": "keybase1Types.MessageTypes['keybase.1.identifyUi.finish']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.identifyUi.finish']['outParam']) => void}"
        },
        "keybase1IdentifyUiDismiss": {
            "params": "keybase1Types.MessageTypes['keybase.1.identifyUi.dismiss']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.identifyUi.dismiss']['outParam']) => void}"
        },
        "keybase1LogUiLog": {
            "params": "keybase1Types.MessageTypes['keybase.1.logUi.log']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.logUi.log']['outParam']) => void}"
        },
        "keybase1LoginUiGetEmailOrUsername": {
            "params": "keybase1Types.MessageTypes['keybase.1.loginUi.getEmailOrUsername']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.loginUi.getEmailOrUsername']['outParam']) => void}"
        },
        "keybase1LoginUiPromptRevokePaperKeys": {
            "params": "keybase1Types.MessageTypes['keybase.1.loginUi.promptRevokePaperKeys']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.loginUi.promptRevokePaperKeys']['outParam']) => void}"
        },
        "keybase1LoginUiDisplayPaperKeyPhrase": {
            "params": "keybase1Types.MessageTypes['keybase.1.loginUi.displayPaperKeyPhrase']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.loginUi.displayPaperKeyPhrase']['outParam']) => void}"
        },
        "keybase1LoginUiDisplayPrimaryPaperKey": {
            "params": "keybase1Types.MessageTypes['keybase.1.loginUi.displayPrimaryPaperKey']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.loginUi.displayPrimaryPaperKey']['outParam']) => void}"
        },
        "keybase1LoginUiPromptResetAccount": {
            "params": "keybase1Types.MessageTypes['keybase.1.loginUi.promptResetAccount']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.loginUi.promptResetAccount']['outParam']) => void}"
        },
        "keybase1LoginUiDisplayResetProgress": {
            "params": "keybase1Types.MessageTypes['keybase.1.loginUi.displayResetProgress']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.loginUi.displayResetProgress']['outParam']) => void}"
        },
        "keybase1LoginUiExplainDeviceRecovery": {
            "params": "keybase1Types.MessageTypes['keybase.1.loginUi.explainDeviceRecovery']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.loginUi.explainDeviceRecovery']['outParam']) => void}"
        },
        "keybase1LoginUiPromptPassphraseRecovery": {
            "params": "keybase1Types.MessageTypes['keybase.1.loginUi.promptPassphraseRecovery']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.loginUi.promptPassphraseRecovery']['outParam']) => void}"
        },
        "keybase1LoginUiChooseDeviceToRecoverWith": {
            "params": "keybase1Types.MessageTypes['keybase.1.loginUi.chooseDeviceToRecoverWith']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.loginUi.chooseDeviceToRecoverWith']['outParam']) => void}"
        },
        "keybase1LoginUiDisplayResetMessage": {
            "params": "keybase1Types.MessageTypes['keybase.1.loginUi.displayResetMessage']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.loginUi.displayResetMessage']['outParam']) => void}"
        },
        "keybase1LogsendPrepareLogsend": {
            "params": "keybase1Types.MessageTypes['keybase.1.logsend.prepareLogsend']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.logsend.prepareLogsend']['outParam']) => void}"
        },
        "keybase1NotifyAppExit": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyApp.exit']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.NotifyApp.exit']['outParam']) => void}"
        },
        "keybase1NotifyAuditRootAuditError": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyAudit.rootAuditError']['inParam'] "
        },
        "keybase1NotifyAuditBoxAuditError": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyAudit.boxAuditError']['inParam'] "
        },
        "keybase1NotifyBadgesBadgeState": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyBadges.badgeState']['inParam'] "
        },
        "keybase1NotifyCanUserPerformCanUserPerformChanged": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyCanUserPerform.canUserPerformChanged']['inParam'] "
        },
        "keybase1NotifyDeviceCloneDeviceCloneCountChanged": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyDeviceClone.deviceCloneCountChanged']['inParam'] "
        },
        "keybase1NotifyEmailAddressEmailAddressVerified": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyEmailAddress.emailAddressVerified']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.NotifyEmailAddress.emailAddressVerified']['outParam']) => void}"
        },
        "keybase1NotifyEmailAddressEmailsChanged": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyEmailAddress.emailsChanged']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.NotifyEmailAddress.emailsChanged']['outParam']) => void}"
        },
        "keybase1NotifyEphemeralNewTeamEk": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyEphemeral.newTeamEk']['inParam'] "
        },
        "keybase1NotifyEphemeralNewTeambotEk": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyEphemeral.newTeambotEk']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.NotifyEphemeral.newTeambotEk']['outParam']) => void}"
        },
        "keybase1NotifyEphemeralTeambotEkNeeded": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyEphemeral.teambotEkNeeded']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.NotifyEphemeral.teambotEkNeeded']['outParam']) => void}"
        },
        "keybase1NotifyFavoritesFavoritesChanged": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyFavorites.favoritesChanged']['inParam'] "
        },
        "keybase1NotifyFeaturedBotsFeaturedBotsUpdate": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyFeaturedBots.featuredBotsUpdate']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.NotifyFeaturedBots.featuredBotsUpdate']['outParam']) => void}"
        },
        "keybase1NotifyFSFSActivity": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyFS.FSActivity']['inParam'] "
        },
        "keybase1NotifyFSFSPathUpdated": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyFS.FSPathUpdated']['inParam'] "
        },
        "keybase1NotifyFSFSSyncActivity": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyFS.FSSyncActivity']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.NotifyFS.FSSyncActivity']['outParam']) => void}"
        },
        "keybase1NotifyFSFSEditListResponse": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyFS.FSEditListResponse']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.NotifyFS.FSEditListResponse']['outParam']) => void}"
        },
        "keybase1NotifyFSFSSyncStatusResponse": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyFS.FSSyncStatusResponse']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.NotifyFS.FSSyncStatusResponse']['outParam']) => void}"
        },
        "keybase1NotifyFSFSOverallSyncStatusChanged": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyFS.FSOverallSyncStatusChanged']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.NotifyFS.FSOverallSyncStatusChanged']['outParam']) => void}"
        },
        "keybase1NotifyFSFSFavoritesChanged": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyFS.FSFavoritesChanged']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.NotifyFS.FSFavoritesChanged']['outParam']) => void}"
        },
        "keybase1NotifyFSFSOnlineStatusChanged": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyFS.FSOnlineStatusChanged']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.NotifyFS.FSOnlineStatusChanged']['outParam']) => void}"
        },
        "keybase1NotifyFSFSSubscriptionNotifyPath": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyFS.FSSubscriptionNotifyPath']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.NotifyFS.FSSubscriptionNotifyPath']['outParam']) => void}"
        },
        "keybase1NotifyFSFSSubscriptionNotify": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyFS.FSSubscriptionNotify']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.NotifyFS.FSSubscriptionNotify']['outParam']) => void}"
        },
        "keybase1NotifyInviteFriendsUpdateInviteCounts": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyInviteFriends.updateInviteCounts']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.NotifyInviteFriends.updateInviteCounts']['outParam']) => void}"
        },
        "keybase1NotifyKeyfamilyKeyfamilyChanged": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyKeyfamily.keyfamilyChanged']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.NotifyKeyfamily.keyfamilyChanged']['outParam']) => void}"
        },
        "keybase1NotifyPaperKeyPaperKeyCached": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyPaperKey.paperKeyCached']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.NotifyPaperKey.paperKeyCached']['outParam']) => void}"
        },
        "keybase1NotifyPGPPgpKeyInSecretStoreFile": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyPGP.pgpKeyInSecretStoreFile']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.NotifyPGP.pgpKeyInSecretStoreFile']['outParam']) => void}"
        },
        "keybase1NotifyPhoneNumberPhoneNumbersChanged": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyPhoneNumber.phoneNumbersChanged']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.NotifyPhoneNumber.phoneNumbersChanged']['outParam']) => void}"
        },
        "keybase1NotifyRuntimeStatsRuntimeStatsUpdate": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyRuntimeStats.runtimeStatsUpdate']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.NotifyRuntimeStats.runtimeStatsUpdate']['outParam']) => void}"
        },
        "keybase1NotifySaltpackSaltpackOperationStart": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifySaltpack.saltpackOperationStart']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.NotifySaltpack.saltpackOperationStart']['outParam']) => void}"
        },
        "keybase1NotifySaltpackSaltpackOperationProgress": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifySaltpack.saltpackOperationProgress']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.NotifySaltpack.saltpackOperationProgress']['outParam']) => void}"
        },
        "keybase1NotifySaltpackSaltpackOperationDone": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifySaltpack.saltpackOperationDone']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.NotifySaltpack.saltpackOperationDone']['outParam']) => void}"
        },
        "keybase1NotifyServiceHTTPSrvInfoUpdate": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyService.HTTPSrvInfoUpdate']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.NotifyService.HTTPSrvInfoUpdate']['outParam']) => void}"
        },
        "keybase1NotifyServiceHandleKeybaseLink": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyService.handleKeybaseLink']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.NotifyService.handleKeybaseLink']['outParam']) => void}"
        },
        "keybase1NotifyServiceShutdown": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyService.shutdown']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.NotifyService.shutdown']['outParam']) => void}"
        },
        "keybase1NotifySessionLoggedOut": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifySession.loggedOut']['inParam'] "
        },
        "keybase1NotifySessionLoggedIn": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifySession.loggedIn']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.NotifySession.loggedIn']['outParam']) => void}"
        },
        "keybase1NotifySessionClientOutOfDate": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifySession.clientOutOfDate']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.NotifySession.clientOutOfDate']['outParam']) => void}"
        },
        "keybase1NotifySimpleFSSimpleFSArchiveStatusChanged": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifySimpleFS.simpleFSArchiveStatusChanged']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.NotifySimpleFS.simpleFSArchiveStatusChanged']['outParam']) => void}"
        },
        "keybase1NotifyTeamTeamChangedByID": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyTeam.teamChangedByID']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.NotifyTeam.teamChangedByID']['outParam']) => void}"
        },
        "keybase1NotifyTeamTeamChangedByName": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyTeam.teamChangedByName']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.NotifyTeam.teamChangedByName']['outParam']) => void}"
        },
        "keybase1NotifyTeamTeamDeleted": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyTeam.teamDeleted']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.NotifyTeam.teamDeleted']['outParam']) => void}"
        },
        "keybase1NotifyTeamTeamAbandoned": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyTeam.teamAbandoned']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.NotifyTeam.teamAbandoned']['outParam']) => void}"
        },
        "keybase1NotifyTeamTeamExit": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyTeam.teamExit']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.NotifyTeam.teamExit']['outParam']) => void}"
        },
        "keybase1NotifyTeamNewlyAddedToTeam": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyTeam.newlyAddedToTeam']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.NotifyTeam.newlyAddedToTeam']['outParam']) => void}"
        },
        "keybase1NotifyTeamTeamRoleMapChanged": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyTeam.teamRoleMapChanged']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.NotifyTeam.teamRoleMapChanged']['outParam']) => void}"
        },
        "keybase1NotifyTeamAvatarUpdated": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyTeam.avatarUpdated']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.NotifyTeam.avatarUpdated']['outParam']) => void}"
        },
        "keybase1NotifyTeamTeamMetadataUpdate": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyTeam.teamMetadataUpdate']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.NotifyTeam.teamMetadataUpdate']['outParam']) => void}"
        },
        "keybase1NotifyTeamTeamTreeMembershipsPartial": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyTeam.teamTreeMembershipsPartial']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.NotifyTeam.teamTreeMembershipsPartial']['outParam']) => void}"
        },
        "keybase1NotifyTeamTeamTreeMembershipsDone": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyTeam.teamTreeMembershipsDone']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.NotifyTeam.teamTreeMembershipsDone']['outParam']) => void}"
        },
        "keybase1NotifyTeambotNewTeambotKey": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyTeambot.newTeambotKey']['inParam'] "
        },
        "keybase1NotifyTeambotTeambotKeyNeeded": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyTeambot.teambotKeyNeeded']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.NotifyTeambot.teambotKeyNeeded']['outParam']) => void}"
        },
        "keybase1NotifyTrackingTrackingChanged": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyTracking.trackingChanged']['inParam'] "
        },
        "keybase1NotifyTrackingTrackingInfo": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyTracking.trackingInfo']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.NotifyTracking.trackingInfo']['outParam']) => void}"
        },
        "keybase1NotifyTrackingNotifyUserBlocked": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyTracking.notifyUserBlocked']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.NotifyTracking.notifyUserBlocked']['outParam']) => void}"
        },
        "keybase1NotifyUsersUserChanged": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyUsers.userChanged']['inParam'] "
        },
        "keybase1NotifyUsersWebOfTrustChanged": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyUsers.webOfTrustChanged']['inParam'] "
        },
        "keybase1NotifyUsersPasswordChanged": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyUsers.passwordChanged']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.NotifyUsers.passwordChanged']['outParam']) => void}"
        },
        "keybase1NotifyUsersIdentifyUpdate": {
            "params": "keybase1Types.MessageTypes['keybase.1.NotifyUsers.identifyUpdate']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.NotifyUsers.identifyUpdate']['outParam']) => void}"
        },
        "keybase1PgpUiOutputPGPWarning": {
            "params": "keybase1Types.MessageTypes['keybase.1.pgpUi.outputPGPWarning']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.pgpUi.outputPGPWarning']['outParam']) => void}"
        },
        "keybase1PgpUiOutputSignatureSuccess": {
            "params": "keybase1Types.MessageTypes['keybase.1.pgpUi.outputSignatureSuccess']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.pgpUi.outputSignatureSuccess']['outParam']) => void}"
        },
        "keybase1PgpUiOutputSignatureNonKeybase": {
            "params": "keybase1Types.MessageTypes['keybase.1.pgpUi.outputSignatureNonKeybase']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.pgpUi.outputSignatureNonKeybase']['outParam']) => void}"
        },
        "keybase1PgpUiKeyGenerated": {
            "params": "keybase1Types.MessageTypes['keybase.1.pgpUi.keyGenerated']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.pgpUi.keyGenerated']['outParam']) => void}"
        },
        "keybase1PgpUiShouldPushPrivate": {
            "params": "keybase1Types.MessageTypes['keybase.1.pgpUi.shouldPushPrivate']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.pgpUi.shouldPushPrivate']['outParam']) => void}"
        },
        "keybase1PgpUiFinished": {
            "params": "keybase1Types.MessageTypes['keybase.1.pgpUi.finished']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.pgpUi.finished']['outParam']) => void}"
        },
        "keybase1ProveUiPromptOverwrite": {
            "params": "keybase1Types.MessageTypes['keybase.1.proveUi.promptOverwrite']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.proveUi.promptOverwrite']['outParam']) => void}"
        },
        "keybase1ProveUiPromptUsername": {
            "params": "keybase1Types.MessageTypes['keybase.1.proveUi.promptUsername']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.proveUi.promptUsername']['outParam']) => void}"
        },
        "keybase1ProveUiOutputPrechecks": {
            "params": "keybase1Types.MessageTypes['keybase.1.proveUi.outputPrechecks']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.proveUi.outputPrechecks']['outParam']) => void}"
        },
        "keybase1ProveUiPreProofWarning": {
            "params": "keybase1Types.MessageTypes['keybase.1.proveUi.preProofWarning']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.proveUi.preProofWarning']['outParam']) => void}"
        },
        "keybase1ProveUiOutputInstructions": {
            "params": "keybase1Types.MessageTypes['keybase.1.proveUi.outputInstructions']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.proveUi.outputInstructions']['outParam']) => void}"
        },
        "keybase1ProveUiOkToCheck": {
            "params": "keybase1Types.MessageTypes['keybase.1.proveUi.okToCheck']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.proveUi.okToCheck']['outParam']) => void}"
        },
        "keybase1ProveUiChecking": {
            "params": "keybase1Types.MessageTypes['keybase.1.proveUi.checking']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.proveUi.checking']['outParam']) => void}"
        },
        "keybase1ProveUiContinueChecking": {
            "params": "keybase1Types.MessageTypes['keybase.1.proveUi.continueChecking']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.proveUi.continueChecking']['outParam']) => void}"
        },
        "keybase1ProveUiDisplayRecheckWarning": {
            "params": "keybase1Types.MessageTypes['keybase.1.proveUi.displayRecheckWarning']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.proveUi.displayRecheckWarning']['outParam']) => void}"
        },
        "keybase1ProvisionUiChooseProvisioningMethod": {
            "params": "keybase1Types.MessageTypes['keybase.1.provisionUi.chooseProvisioningMethod']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.provisionUi.chooseProvisioningMethod']['outParam']) => void}"
        },
        "keybase1ProvisionUiChooseGPGMethod": {
            "params": "keybase1Types.MessageTypes['keybase.1.provisionUi.chooseGPGMethod']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.provisionUi.chooseGPGMethod']['outParam']) => void}"
        },
        "keybase1ProvisionUiSwitchToGPGSignOK": {
            "params": "keybase1Types.MessageTypes['keybase.1.provisionUi.switchToGPGSignOK']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.provisionUi.switchToGPGSignOK']['outParam']) => void}"
        },
        "keybase1ProvisionUiChooseDevice": {
            "params": "keybase1Types.MessageTypes['keybase.1.provisionUi.chooseDevice']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.provisionUi.chooseDevice']['outParam']) => void}"
        },
        "keybase1ProvisionUiChooseDeviceType": {
            "params": "keybase1Types.MessageTypes['keybase.1.provisionUi.chooseDeviceType']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.provisionUi.chooseDeviceType']['outParam']) => void}"
        },
        "keybase1ProvisionUiDisplayAndPromptSecret": {
            "params": "keybase1Types.MessageTypes['keybase.1.provisionUi.DisplayAndPromptSecret']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.provisionUi.DisplayAndPromptSecret']['outParam']) => void}"
        },
        "keybase1ProvisionUiDisplaySecretExchanged": {
            "params": "keybase1Types.MessageTypes['keybase.1.provisionUi.DisplaySecretExchanged']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.provisionUi.DisplaySecretExchanged']['outParam']) => void}"
        },
        "keybase1ProvisionUiPromptNewDeviceName": {
            "params": "keybase1Types.MessageTypes['keybase.1.provisionUi.PromptNewDeviceName']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.provisionUi.PromptNewDeviceName']['outParam']) => void}"
        },
        "keybase1ProvisionUiProvisioneeSuccess": {
            "params": "keybase1Types.MessageTypes['keybase.1.provisionUi.ProvisioneeSuccess']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.provisionUi.ProvisioneeSuccess']['outParam']) => void}"
        },
        "keybase1ProvisionUiProvisionerSuccess": {
            "params": "keybase1Types.MessageTypes['keybase.1.provisionUi.ProvisionerSuccess']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.provisionUi.ProvisionerSuccess']['outParam']) => void}"
        },
        "keybase1ReachabilityReachabilityChanged": {
            "params": "keybase1Types.MessageTypes['keybase.1.reachability.reachabilityChanged']['inParam'] "
        },
        "keybase1RekeyUIDelegateRekeyUI": {
            "params": "keybase1Types.MessageTypes['keybase.1.rekeyUI.delegateRekeyUI']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.rekeyUI.delegateRekeyUI']['outParam']) => void}"
        },
        "keybase1RekeyUIRefresh": {
            "params": "keybase1Types.MessageTypes['keybase.1.rekeyUI.refresh']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.rekeyUI.refresh']['outParam']) => void}"
        },
        "keybase1RekeyUIRekeySendEvent": {
            "params": "keybase1Types.MessageTypes['keybase.1.rekeyUI.rekeySendEvent']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.rekeyUI.rekeySendEvent']['outParam']) => void}"
        },
        "keybase1SaltpackUiSaltpackPromptForDecrypt": {
            "params": "keybase1Types.MessageTypes['keybase.1.saltpackUi.saltpackPromptForDecrypt']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.saltpackUi.saltpackPromptForDecrypt']['outParam']) => void}"
        },
        "keybase1SaltpackUiSaltpackVerifySuccess": {
            "params": "keybase1Types.MessageTypes['keybase.1.saltpackUi.saltpackVerifySuccess']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.saltpackUi.saltpackVerifySuccess']['outParam']) => void}"
        },
        "keybase1SaltpackUiSaltpackVerifyBadSender": {
            "params": "keybase1Types.MessageTypes['keybase.1.saltpackUi.saltpackVerifyBadSender']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.saltpackUi.saltpackVerifyBadSender']['outParam']) => void}"
        },
        "keybase1SecretUiGetPassphrase": {
            "params": "keybase1Types.MessageTypes['keybase.1.secretUi.getPassphrase']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.secretUi.getPassphrase']['outParam']) => void}"
        },
        "keybase1StreamUiClose": {
            "params": "keybase1Types.MessageTypes['keybase.1.streamUi.close']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.streamUi.close']['outParam']) => void}"
        },
        "keybase1StreamUiRead": {
            "params": "keybase1Types.MessageTypes['keybase.1.streamUi.read']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.streamUi.read']['outParam']) => void}"
        },
        "keybase1StreamUiReset": {
            "params": "keybase1Types.MessageTypes['keybase.1.streamUi.reset']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.streamUi.reset']['outParam']) => void}"
        },
        "keybase1StreamUiWrite": {
            "params": "keybase1Types.MessageTypes['keybase.1.streamUi.write']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.streamUi.write']['outParam']) => void}"
        },
        "keybase1TeamsUiConfirmRootTeamDelete": {
            "params": "keybase1Types.MessageTypes['keybase.1.teamsUi.confirmRootTeamDelete']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.teamsUi.confirmRootTeamDelete']['outParam']) => void}"
        },
        "keybase1TeamsUiConfirmSubteamDelete": {
            "params": "keybase1Types.MessageTypes['keybase.1.teamsUi.confirmSubteamDelete']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.teamsUi.confirmSubteamDelete']['outParam']) => void}"
        },
        "keybase1TeamsUiConfirmInviteLinkAccept": {
            "params": "keybase1Types.MessageTypes['keybase.1.teamsUi.confirmInviteLinkAccept']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.teamsUi.confirmInviteLinkAccept']['outParam']) => void}"
        },
        "keybase1UiPromptYesNo": {
            "params": "keybase1Types.MessageTypes['keybase.1.ui.promptYesNo']['inParam'] , response: {error: keybase1Types.IncomingErrorCallback, result: (param: keybase1Types.MessageTypes['keybase.1.ui.promptYesNo']['outParam']) => void}"
        },
        "stellar1NotifyPaymentNotification": {
            "params": "stellar1Types.MessageTypes['stellar.1.notify.paymentNotification']['inParam'] "
        },
        "stellar1NotifyPaymentStatusNotification": {
            "params": "stellar1Types.MessageTypes['stellar.1.notify.paymentStatusNotification']['inParam'] "
        },
        "stellar1NotifyRequestStatusNotification": {
            "params": "stellar1Types.MessageTypes['stellar.1.notify.requestStatusNotification']['inParam'] "
        },
        "stellar1NotifyAccountDetailsUpdate": {
            "params": "stellar1Types.MessageTypes['stellar.1.notify.accountDetailsUpdate']['inParam'] "
        },
        "stellar1NotifyAccountsUpdate": {
            "params": "stellar1Types.MessageTypes['stellar.1.notify.accountsUpdate']['inParam'] "
        },
        "stellar1NotifyPendingPaymentsUpdate": {
            "params": "stellar1Types.MessageTypes['stellar.1.notify.pendingPaymentsUpdate']['inParam'] "
        },
        "stellar1NotifyRecentPaymentsUpdate": {
            "params": "stellar1Types.MessageTypes['stellar.1.notify.recentPaymentsUpdate']['inParam'] "
        },
        "stellar1UiPaymentReviewed": {
            "params": "stellar1Types.MessageTypes['stellar.1.ui.paymentReviewed']['inParam'] , response: {error: stellar1Types.IncomingErrorCallback, result: (param: stellar1Types.MessageTypes['stellar.1.ui.paymentReviewed']['outParam']) => void}"
        }
    }
}