{
  "prelude": [
    "import type * as Types from '../constants/types/config'",
    "import type * as Tabs from '../constants/tabs'",
    "import type * as ChatTypes from '../constants/types/chat2'",
    "import type HiddenString from '../util/hidden-string'"
  ],
  "actions": {
    "restartHandshake": {
      "_description": "internal to config. should restart the handshake process"
    },
    "daemonHandshake": {
      "_description": "starting the connect process. Things that need to happen before we see the app should call daemonHandshakeWait",
      "firstTimeConnecting": "boolean",
      "version": "number"
    },
    "daemonHandshakeDone": {
      "_description": "ready to show the app"
    },
    "filePickerError": {
      "_description": "Sent whenever the mobile file picker encounters an error.",
      "error": "Error"
    },
    "logoutAndTryToLogInAs": {
      "_description": [
        "Log out the current user, keeping secrets stored.",
        "Then prefill the username for provisioned another user to log in."
      ],
      "username": "string"
    },
    "logoutHandshake": {
      "_description": "starting the logout process. Things that need to happen before we see the app should call logoutHandshakeWait",
      "version": "number"
    },
    "installerRan": {
      "_description": "desktop only: the installer ran and we can start up"
    },
    "dumpLogs": {"reason": ["'quitting through menu'"]},
    "openAppSettings": {
      "_description": "mobile only: open the settings page"
    },
    "changedFocus": {"appFocused": "boolean"},
    "changedActive": {"userActive": "boolean"},
    "mobileAppState": {"nextAppState": ["'active'", "'background'", "'inactive'"]},
    "showMain": {},
    "bootstrapStatusLoaded": {
      "loggedIn": "boolean"
    },
    "pushLoaded": {"pushLoaded": "boolean"},
    "setStartupDetails": {
      "startupWasFromPush": "boolean",
      "startupConversation?": "ChatTypes.ConversationIDKey",
      "startupLink": "string",
      "startupTab?": "Tabs.Tab",
      "startupFollowUser": "string",
      "startupPushPayload?": "string"
    },
    "setStartupFile": {
      "_description": "Stores the startup file path when launching Keybase from a cold start beofre log in",
      "startupFile": "HiddenString"
    },
    "openAtLoginChanged": {},
    "persistRoute": {"path?": "Array<any>"},
    "setNavigator": {"navigator": "any"},
    "loggedOut": {},
    "loggedIn": {
      "_description": [
        "Used internally to know we were logged in.",
        "If you want to react to being logged in likely you want bootstrapStatusLoaded"
      ],
      "causedBySignup": "boolean",
      "causedByStartup": "boolean"
    },
    "setUserSwitching": {
      "userSwitching": "boolean"
    },
    "updateMenubarWindowID": {"id": "number"},
    "copyToClipboard": {"text": "string"},
    "checkForUpdate": {},
    "updateInfo": {"isOutOfDate": "boolean", "critical": "boolean", "message?": "string"},
    "updateNow": {},
    "openAppStore": {
      "_description": "Open a link to the app store"
    },
    "updateCriticalCheckStatus": {
      "_description": "Save critical check status",
      "status": "'critical' | 'suggested' | 'ok'",
      "message": "string"
    },
    "osNetworkStatusChanged": {
      "online": "boolean",
      "type": "Types.ConnectionType",
      "isInit?": "boolean"
    },
    "darkModePreferenceChanged": {},
    "setSystemDarkMode": {"dark": "boolean"},
    "remoteWindowWantsProps": {
      "_description": "remote electron window wants props sent",
      "component": "string",
      "param": "string"
    },
    "updateWindowShown": {
      "_description": "a window was shown",
      "component": "string"
    },
    "updateWindowMaxState": {
      "_description": "main electron window changed max/min",
      "max": "boolean"
    },
    "updateWindowState": {
      "_description": "main electron window wants to store its state",
      "windowState": "{ dockHidden: boolean; height: number; isFullScreen: boolean; width: number; windowHidden: boolean; x: number; y: number; }"
    },
    "setWhatsNewLastSeenVersion": {
      "_description": [
        "Set the latest version number that a user has seen from Gregor.",
        "This is used to set the badged state of the 'What's New' radio icon"
      ],
      "lastSeenVersion": "string"
    },
    "toggleRuntimeStats": {},
    "loadOnStart": {
      "_description": [
        "This action is dispatched multiple times with various flags.",
        "If you want to do something as a result of startup or login listen to this."
      ],
      "phase": "'initialStartupAsEarlyAsPossible' | 'connectedToDaemonForFirstTime' | 'reloggedIn' | 'startupOrReloginButNotInARush'"
    },
    "showShareActionSheet": {
      "filePath?": "string",
      "message?": "string",
      "mimeType": "string"
    },
    "androidShare": {
      "_description": "Intent fired with a share url",
      "url?": "string",
      "text?": "string"
    },
    "initListenerLoops": {
      "_description": "Internal action just to start saga-like spawn processes"
    },
    "powerMonitorEvent": {
      "_description": "Plumb power monitor events from node",
      "event": "string"
    },
    "revoked": {}
  }
}
