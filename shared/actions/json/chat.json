{
  "prelude": [
    "import * as Constants from '../constants/chat'",
    "import * as RPCTypes from '../constants/types/flow-types'",
    "import * as I from 'immutable'",
    "import HiddenString from '../util/hidden-string'"
  ],
  "actions": {
    "updateBadging": {
      "conversationIDKey": "Constants.ConversationIDKey"
    },
    "deleteEntity": {
      "keyPath": "Array<string>",
      "ids": "I.List<string>"
    },
    "mergeEntity": {
      "keyPath": "Array<string>",
      "entities": "I.Map<any, any> | I.List<any>"
    },
    "replaceEntity": {
      "keyPath": "Array<string>",
      "entities": "I.Map<any, any> | I.List<any>"
    },
    "subtractEntity": {
      "keyPath": "Array<string>",
      "entities": "I.List<any>"
    },
    "unboxMore": {},
    "exitSearch": {
      "skipSelectPreviousConversation": "boolean"
    },
    "pendingToRealConversation": {
      "oldKey": "Constants.ConversationIDKey",
      "newKey": "Constants.ConversationIDKey"
    },
    "updateLatestMessage": {
      "conversationIDKey": "Constants.ConversationIDKey"
    },
    "openFolder": {},
    "openTlfInChat": {
      "tlf": "string"
    },
    "newChat": {},
    "setupChatHandlers": {},
    "loadInbox": {},
    "loadMoreMessages": {
      "conversationIDKey": "Constants.ConversationIDKey",
      "onlyIfUnloaded": "boolean",
      "fromUser?": "boolean",
      "wantNewer?": "boolean",
      "numberOverride?": "?number"
    },
    "showEditor": {
      "message": "?Constants.Message"
    },
    "muteConversation": {
      "conversationIDKey": "Constants.ConversationIDKey",
      "muted": "boolean"
    },
    "blockConversation": {
      "blocked": "boolean",
      "conversationIDKey": "Constants.ConversationIDKey",
      "reportUser": "boolean"
    },
    "editMessage": {
      "message": "Constants.Message",
      "text": "HiddenString"
    },
    "leaveConversation": {
      "conversationIDKey": "Constants.ConversationIDKey"
    },
    "deleteMessage": {
      "message": "Constants.Message"
    },
    "addPending": {
      "participants": "Array<string>",
      "temporary": "boolean"
    },
    "removeTempPendingConversations": {},
    "updateFinalizedState": {
      "finalizedState": "Constants.FinalizedState"
    },
    "updateSupersedesState": {
      "supersedesState": "Constants.SupersedesState"
    }
  }
}
