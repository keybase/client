{
  "prelude": [
    "import * as ChatTypes from '../constants/types/chat2'",
    "import * as Types from '../constants/types/teams'"
  ],
  "actions": {
    "createNewTeam": {
      "joinSubteam": "boolean",
      "teamname": "string",
      "rootPath": "I.List<string>",
      "sourceSubPath": "I.List<string>",
      "destSubPath": "I.List<string>"
    },
    "createNewTeamFromConversation": {
      "conversationIDKey": "ChatTypes.ConversationIDKey",
      "teamname": "string"
    },
    "createChannel": {
      "teamname": "string",
      "channelname": "string",
      "description": "?string",
      "rootPath": "I.List<string>",
      "sourceSubPath": "I.List<string>",
      "destSubPath": "I.List<string>"
    },
    "getChannels": {
      "_description": "Fetches the channel information for all channels in a team from the server. Should only be called for components that need the full list.",
      "teamname": "string"
    },
    "getTeams": {},
    "getDetails": {
      "teamname": "string"
    },
    "getTeamOperations": {
      "teamname": "string"
    },
    "getTeamPublicity": {
      "teamname": "string"
    },
    "addTeamWithChosenChannels": {
      "teamname": "string"
    },
    "saveChannelMembership": {
      "teamname": "string",
      "oldChannelState": "Types.ChannelMembershipState",
      "newChannelState": "Types.ChannelMembershipState",
      "you": "string"
    },
    "addParticipant": {
      "teamname": "string",
      "conversationIDKey": "ChatTypes.ConversationIDKey",
      "participant": "string"
    },
    "removeParticipant": {
      "teamname": "string",
      "conversationIDKey": "ChatTypes.ConversationIDKey",
      "participant": "string"
    },
    "addPeopleToTeam": {
      "destSubPath": "I.List<string>",
      "role": "string",
      "rootPath": "I.List<string>",
      "sendChatNotification": "boolean",
      "sourceSubPath": "I.List<string>",
      "teamname": "string"
    },
    "inviteToTeamByEmail": {
      "teamname": "string",
      "role": "Types.TeamRoleType",
      "invitees": "string"
    },
    "inviteToTeamByPhone": {
      "teamname": "string",
      "role": "Types.TeamRoleType",
      "phoneNumber": "string",
      "fullName": "string"
    },
    "joinTeam": {
      "teamname": "string"
    },
    "leaveTeam": {
      "teamname": "string"
    },
    "addToTeam": {
      "teamname": "string",
      "username": "string",
      "role": "Types.TeamRoleType",
      "sendChatNotification": "boolean"
    },
    "editTeamDescription": {
      "teamname": "string",
      "description": "string"
    },
    "editMembership": {
      "teamname": "string",
      "username": "string",
      "role": "Types.TeamRoleType"
    },
    "removeMemberOrPendingInvite": {
      "email": "string",
      "teamname": "string",
      "username": "string",
      "inviteID": "string"
    },
    "ignoreRequest": {
      "teamname": "string",
      "username": "string"
    },
    "setMemberPublicity": {
      "teamname": "string",
      "showcase": "boolean"
    },
    "setPublicity": {
      "teamname": "string",
      "settings": "Types.PublicitySettings"
    },
    "setChannelCreationError": {
      "error": "string"
    },
    "setTeamsWithChosenChannels": {
      "teamsWithChosenChannels": "I.Set<Types.Teamname>"
    },
    "setTeamCreationError": {
      "error": "string"
    },
    "setTeamCreationPending": {
      "pending": "boolean"
    },
    "setTeamInviteError": {
      "error": "string"
    },
    "setTeamJoinError": {
      "error": "string"
    },
    "setTeamJoinSuccess": {
      "success": "boolean",
      "teamname": "string"
    },
    "setTeamRetentionPolicy": {
      "teamname": "string",
      "retentionPolicy": "Types.RetentionPolicy",
    },
    "setTeamLoadingInvites": {
      "teamname": "string",
      "invitees": "string",
      "loadingInvites": "boolean",
    },
    "clearTeamRequests": {
      "teamname": "string",
    },
    "setTeamDetails": {
      "teamname": "string",
      "members": "I.Map<string, Types.MemberInfo>",
      "settings": "Types.TeamSettings",
      "invites": "I.Set<Types.InviteInfo>",
      "subteams": "I.Set<Types.Teamname>",
      "requests": "I.Map<string, I.Set<Types.RequestInfo>>",
    },
    "setTeamCanPerform": {
      "teamname": "string",
      "teamOperation": "Types.TeamOperations",
    },
    "setTeamPublicitySettings": {
      "teamname": "string",
      "publicity": "Types._PublicitySettings",
    },
    "setTeamChannels": {
      "teamname": "string",
      "channelInfos": "I.Map<ChatTypes.ConversationIDKey, Types.ChannelInfo>",
    },
    "setLoaded": {
      "loaded": "boolean",
    },
    "setTeamInfo": {
      "teamnames": "I.Set<Types.Teamname>",
      "teammembercounts": "I.Map<Types.Teamname, number>",
      "teamNameToIsOpen": "I.Map<Types.Teamname, boolean>",
      "teamNameToRole": "I.Map<Types.Teamname, Types.MaybeTeamRoleType>",
      "teamNameToAllowPromote": "I.Map<Types.Teamname, boolean>",
      "teamNameToIsShowcasing": "I.Map<Types.Teamname, boolean>",
      "teamNameToID": "I.Map<Types.Teamname, string>",
    },
    "setTeamAccessRequestsPending": {
      "accessRequestsPending": "I.Set<Types.Teamname>",
    },
    "setNewTeamInfo": {
      "newTeams": "I.Set<string>",
      "newTeamRequests": "I.List<string>",
      "teamNameToResetUsers": "I.Map<Types.Teamname, I.Set<Types.ResetUser>>",
    },
    "setTeamSawChatBanner": {},
    "setTeamSawSubteamsBanner": {},
    "setupTeamHandlers": {},
    "updateChannelName": {
      "teamname": "Types.Teamname",
      "conversationIDKey": "ChatTypes.ConversationIDKey",
      "newChannelName": "string"
    },
    "setUpdatedChannelName": {
      "teamname": "Types.Teamname",
      "conversationIDKey": "ChatTypes.ConversationIDKey",
      "newChannelName": "string"
    },
    "updateTopic": {
      "teamname": "Types.Teamname",
      "conversationIDKey": "ChatTypes.ConversationIDKey",
      "newTopic": "string"
    },
    "setUpdatedTopic": {
      "teamname": "Types.Teamname",
      "conversationIDKey": "ChatTypes.ConversationIDKey",
      "newTopic": "string"
    },
    "deleteChannelConfirmed": {
      "teamname": "Types.Teamname",
      "conversationIDKey": "ChatTypes.ConversationIDKey",
    },
    "deleteChannelInfo": {
      "teamname": "Types.Teamname",
      "conversationIDKey": "ChatTypes.ConversationIDKey",
    },
    "badgeAppForTeams": {
      "newTeamNames": "Array<string>",
      "newTeamAccessRequests": "Array<string>",
      "teamsWithResetUsers": "Array<$ReadOnly<{id: Buffer, teamname: string, username: string}>>"
    },
    "checkRequestedAccess": {
      "teamname": "string"
    },
    "getTeamRetentionPolicy": {
      "_description": "Gets the team retention policy and stores in `state.entities.teams.teamNameToRetentionPolicy`.",
      "teamname": "string"
    },
    "saveTeamRetentionPolicy": {
      "_description": "Sets the retention policy for a team. The store will be updated automatically.",
      "teamname": "string",
      "policy": "Types.RetentionPolicy"
    }
  }
}
