{
  "prelude": [
    "import * as RPCChatTypes from '../constants/types/rpc-chat-gen'",
    "import * as ChatTypes from '../constants/types/chat2'",
    "import * as Types from '../constants/types/teams'",
    "import {RetentionPolicy} from '../constants/types/retention-policy'"
  ],
  "actions": {
    "addUserToTeams": {
      "role": "Types.TeamRoleType",
      "teams": "Array<string>",
      "user": "string"
    },
    "channelSetMemberSelected": {
      "_description": "Sets whether a member is selected on the team page",
      "conversationIDKey": "ChatTypes.ConversationIDKey",
      "username": "string",
      "selected": "boolean",
      "clearAll?": "boolean"
    },
    "clearNavBadges": {},
    "createNewTeam": {
      "fromChat?": "boolean",
      "joinSubteam": "boolean",
      "teamname": "string",
      "thenAddMembers?": "Omit<_AddToTeamPayload, 'teamID'>"
    },
    "createNewTeamFromConversation": {
      "conversationIDKey": "ChatTypes.ConversationIDKey",
      "teamname": "string"
    },
    "teamCreated": {
      "fromChat": "boolean",
      "teamID": "Types.TeamID",
      "teamname": "string"
    },
    "createChannel": {
      "teamID": "Types.TeamID",
      "channelname": "string",
      "description": "string | null",
      "navToChatOnSuccess": "boolean"
    },
    "clearAddUserToTeamsResults": {},
    "setAddUserToTeamsResults": {
      "error": "boolean",
      "results": "string"
    },
    "setEmailInviteError": {
      "message": "string",
      "malformed": "Array<string>"
    },
    "setChannelSelected": {
      "_description": "Sets whether a channel is selected on the team page",
      "teamID": "Types.TeamID",
      "channel": "string",
      "selected": "boolean",
      "clearAll?": "boolean"
    },
    "getTeams": {
      "_description": "Load team list if we are stale. _subscribe is for use by teams/subscriber only.",
      "_subscribe?": "boolean",
      "forceReload?": "boolean"
    },
    "unsubscribeTeamList": {
      "_description": "Don't eagerly reload team list anymore."
    },
    "loadTeam": {
      "_description": "Load team details if we are stale. _subscribe is for use by teams/subscriber only.",
      "_subscribe?": "boolean",
      "teamID": "Types.TeamID"
    },
    "teamLoaded": {
      "teamID": "Types.TeamID",
      "details": "Types.TeamDetails"
    },
    "unsubscribeTeamDetails": {
      "_description": "Stop listening for team details for this team",
      "teamID": "Types.TeamID"
    },
    "setTeamVersion": {
      "teamID": "Types.TeamID",
      "version": "Types.TeamVersion"
    },
    "getMembers": {
      "teamID": "Types.TeamID"
    },
    "setMembers": {
      "teamID": "Types.TeamID",
      "members": "Map<string, Types.MemberInfo>"
    },
    "teamSetMemberSelected": {
      "_description": "Sets whether a member is selected on the team page",
      "teamID": "Types.TeamID",
      "username": "string",
      "selected": "boolean",
      "clearAll?": "boolean"
    },
    "getTeamProfileAddList": {
      "username": "string"
    },
    "addTeamWithChosenChannels": {
      "teamID": "Types.TeamID"
    },
    "saveChannelMembership": {
      "teamID": "Types.TeamID",
      "oldChannelState": "Types.ChannelMembershipState",
      "newChannelState": "Types.ChannelMembershipState"
    },
    "addParticipant": {
      "teamID": "Types.TeamID",
      "conversationIDKey": "ChatTypes.ConversationIDKey"
    },
    "removeParticipant": {
      "teamID": "Types.TeamID",
      "conversationIDKey": "ChatTypes.ConversationIDKey"
    },
    "deleteTeam": {
      "teamID": "Types.TeamID"
    },
    "inviteToTeamByEmail": {
      "invitees": "string",
      "role": "Types.TeamRoleType",
      "teamname": "string",
      "loadingKey?": "string"
    },
    "inviteToTeamByPhone": {
      "teamname": "string",
      "role": "Types.TeamRoleType",
      "phoneNumber": "string",
      "fullName": "string",
      "loadingKey?": "string"
    },
    "joinTeam": {
      "teamname": "string"
    },
    "leaveTeam": {
      "teamname": "string",
      "permanent": "boolean",
      "context": "'teams' | 'chat'"
    },
    "leftTeam": {
      "_description": "We successfully left a team",
      "teamname": "string",
      "context": "'teams' | 'chat'"
    },
    "addToTeam": {
      "teamID": "Types.TeamID",
      "users": "Array<{assertion: string, role: Types.TeamRoleType}>",
      "sendChatNotification": "boolean",
      "fromTeamBuilder?": "boolean"
    },
    "addedToTeam": {
      "error?": "string",
      "fromTeamBuilder?": "boolean"
    },
    "reAddToTeam": {
      "teamID": "Types.TeamID",
      "username": "string"
    },
    "editTeamDescription": {
      "teamID": "Types.TeamID",
      "description": "string"
    },
    "uploadTeamAvatar": {
      "crop?": "RPCTypes.ImageCropRect",
      "filename": "string",
      "sendChatNotification": "boolean",
      "teamname": "string"
    },
    "editMembership": {
      "teamID": "Types.TeamID",
      "username": "string",
      "role": "Types.TeamRoleType"
    },
    "removeMember": {
      "teamID": "Types.TeamID",
      "username": "string"
    },
    "removePendingInvite": {
      "teamID": "Types.TeamID",
      "email?": "string",
      "username?": "string",
      "inviteID?": "string"
    },
    "ignoreRequest": {
      "teamname": "string",
      "username": "string"
    },
    "setMemberPublicity": {
      "teamID": "Types.TeamID",
      "showcase": "boolean"
    },
    "setPublicity": {
      "teamID": "Types.TeamID",
      "settings": "Types.PublicitySettings"
    },
    "setChannelCreationError": {
      "error": "string"
    },
    "setWelcomeMessageError": {
      "error": "string"
    },
    "setEditDescriptionError": {
      "error": "string"
    },
    "settingsError": {
      "error": "string"
    },
    "setTeamsWithChosenChannels": {
      "teamsWithChosenChannels": "Set<Types.TeamID>"
    },
    "setTeamCreationError": {
      "error": "string"
    },
    "setTeamInviteError": {
      "error": "string"
    },
    "setTeamJoinError": {
      "error": "string"
    },
    "setTeamJoinSuccess": {
      "open": "boolean",
      "success": "boolean",
      "teamname": "string"
    },
    "setTeamRetentionPolicy": {
      "teamID": "Types.TeamID",
      "retentionPolicy": "RetentionPolicy"
    },
    "setTeamLoadingInvites": {
      "teamname": "string",
      "loadingKey": "string",
      "isLoading": "boolean"
    },
    "setTeamDetails": {
      "teamID": "Types.TeamID",
      "teamname": "string",
      "members": "RPCTypes.TeamMembersDetails",
      "settings": "RPCTypes.TeamSettings",
      "invites": "Array<Types.InviteInfo>",
      "subteams": "Array<Types.Teamname>",
      "requests": "Map<string, Array<RPCTypes.TeamJoinRequest>>",
      "subteamIDs": "Set<Types.TeamID>"
    },
    "setTeamCanPerform": {
      "teamname": "string",
      "teamID": "Types.TeamID",
      "teamOperation": "Types.TeamOperations"
    },
    "setTeamInfo": {
      "teamnames": "Set<Types.Teamname>",
      "teamNameToID": "Map<Types.Teamname, string>",
      "teamMeta": "Map<Types.TeamID, Types.TeamMeta>"
    },
    "setTeamProfileAddList": {
      "teamlist": "Array<Types.TeamProfileAddList>"
    },
    "setTeamAccessRequestsPending": {
      "accessRequestsPending": "Set<Types.Teamname>"
    },
    "setNewTeamInfo": {
      "deletedTeams": "Array<RPCTypes.DeletedTeamInfo>",
      "newTeams": "Set<Types.TeamID>",
      "newTeamRequests": "Array<Types.TeamID>",
      "teamIDToResetUsers": "Map<Types.TeamID, Set<string>>"
    },
    "setTeamSawChatBanner": {},
    "setTeamSawSubteamsBanner": {},
    "updateChannelName": {
      "teamID": "Types.TeamID",
      "conversationIDKey": "ChatTypes.ConversationIDKey",
      "newChannelName": "string"
    },
    "setUpdatedChannelName": {
      "teamID": "Types.TeamID",
      "conversationIDKey": "ChatTypes.ConversationIDKey",
      "newChannelName": "string"
    },
    "updateTopic": {
      "teamID": "Types.TeamID",
      "conversationIDKey": "ChatTypes.ConversationIDKey",
      "newTopic": "string"
    },
    "setUpdatedTopic": {
      "teamID": "Types.TeamID",
      "conversationIDKey": "ChatTypes.ConversationIDKey",
      "newTopic": "string"
    },
    "deleteChannelConfirmed": {
      "teamID": "Types.TeamID",
      "conversationIDKey": "ChatTypes.ConversationIDKey"
    },
    "checkRequestedAccess": {
      "teamname": "string"
    },
    "getTeamRetentionPolicy": {
      "_description": "Gets the team retention policy and stores in `state.entities.teams.teamIDToRetentionPolicy`.",
      "teamID": "Types.TeamID"
    },
    "saveTeamRetentionPolicy": {
      "_description": "Sets the retention policy for a team. The store will be updated automatically.",
      "teamID": "Types.TeamID",
      "policy": "RetentionPolicy"
    },
    "renameTeam": {
      "_description": "Rename a subteam",
      "oldName": "string",
      "newName": "string"
    },
    "setTeamRoleMapLatestKnownVersion": {
      "version": "number"
    },
    "setTeamRoleMap": {
      "map": "Types.TeamRoleMap"
    },
    "toggleInvitesCollapsed": {
      "_description": "Toggle whether invites are collapsed in the member list for this team",
      "teamID": "Types.TeamID"
    },
    "setWelcomeMessage": {
      "_description": "Set welcome message for new team members",
      "teamID": "Types.TeamID",
      "message": "RPCChatTypes.WelcomeMessage"
    },
    "loadWelcomeMessage": {
      "_description": "Load welcome message for new team members",
      "teamID": "Types.TeamID"
    },
    "loadedWelcomeMessage": {
      "_description": "Loaded welcome message for new team members",
      "teamID": "Types.TeamID",
      "message": "RPCChatTypes.WelcomeMessageDisplay"
    },
    "startAddMembersWizard": {
      "_description": "Setup store and navigate to start of add members wizard.",
      "teamID": "Types.TeamID"
    },
    "setAddMembersWizardRole": {
      "_description": "Set the role for the add members wizard.",
      "role": ["Types.TeamRoleType", "undefined"]
    },
    "setAddMembersWizardIndividualRole": {
      "_description": "Set the role for a pending member in the add member wizard.",
      "assertion": "string",
      "role": "Types.TeamRoleType"
    },
    "addMembersWizardPushMembers": {
      "_description": "Add pending members to the add members wizard and show the confirm screen.",
      "members": "Array<Types.AddingMember>"
    },
    "addMembersWizardRemoveMember": {
      "_description": "Remove a pending member from the add members wizard.",
      "assertion": "string"
    },
    "cancelAddMembersWizard": {
      "_description": "Nav away from add members wizard and clear related state."
    },
    "finishAddMembersWizard": {
      "_description": "Nav away from add members wizard and clear related state."
    },
    "setJustFinishedAddMembersWizard": {
      "justFinished": "boolean"
    },
    "setSubteamFilter": {
      "_description": "Set filtering for the subteams tab.",
      "filter": "string",
      "parentTeam?": "Types.TeamID"
    },
    "showTeamByName": {
      "teamname": "string",
      "initialTab?": "Types.TabKey",
      "addMembers?": "boolean"
    },
    "getMemberSubteamDetails": {
      "teamID": "Types.TeamID",
      "username": "string"
    },
    "setMemberSubteamDetails": {
      "username": "string",
      "memberships": "Map<Types.TeamID, Types.MemberInfo>"
    },
    "setTeamWizardTeamType": {
      "teamType": "Types.TeamWizardTeamType"
    },
    "setTeamWizardNameDescription": {
      "teamname": "string",
      "description": "string",
      "openTeam": "boolean",
      "openTeamJoinRole": "Types.TeamRoleType",
      "showcase": "boolean"
    }
  }
}
