{
  "prelude": [
    "import * as Types from '../constants/types/wallets'",
    "import * as ChatTypes from '../constants/types/chat2'",
    "import * as StellarRPCTypes from '../constants/types/rpc-stellar-gen'",
    "import HiddenString from '../util/hidden-string'"
  ],
  "actions": {
    "abandonPayment": {
      "_description": "Signal that a payment being built is abandoned and reset the form fields to their initial states."
    },
    "acceptDisclaimer": {
      "_description": "Accept the Stellar account disclaimer"
    },
    "accountsReceived": {
      "_description": "Update our store of account data",
      "accounts": "Array<Types.Account>"
    },
    "accountUpdateReceived": {
      "_description": "We received an updated account record",
      "account": "Types.Account"
    },
    "addNewPayment": {
      "_description": "Mark a payment we were just notified about as being unseen",
      "accountID": "Types.AccountID",
      "paymentID": "Types.PaymentID"
    },
    "assetsReceived": {
      "_description": "Update our store of assets data",
      "accountID": "Types.AccountID",
      "assets": "Array<Types.Assets>"
    },
    "badgesUpdated": {
      "_description": "Update badges in the nav",
      "accounts": "Array<RPCTypes.WalletAccountInfo>"
    },
    "buildingPaymentIDReceived": {
      "_description": "Update our store with an ID for a new building payment",
      "bid": "string",
    },
    "builtPaymentReceived": {
      "_description": "Update our store with a prepared payment",
      "build": "Types.BuiltPayment",
      "forBuildCounter": "number"
    },
    "builtRequestReceived": {
      "_description": "Update our store with a prepared payment",
      "build": "Types.BuiltRequest",
      "forBuildCounter": "number"
    },
    "checkDisclaimer": {
      "_description": "Discover whether the user has accepted the Stellar disclaimer",
      "nextScreen": "Types.NextScreenAfterAcceptance"
    },
    "clearBuilding": {
      "_description": "Clear a payment or request that was being prepared"
    },
    "clearBuiltPayment": {
      "_description": "Clear a prepared payment once it has been sent or canceled"
    },
    "clearBuiltRequest": {
      "_description": "Clear a prepared request once it has been sent or canceled"
    },
    "clearErrors": {
      "_description": "Clear errors from the store at times like opening or closing a form dialog."
    },
    "clearNewPayments": {
      "_description": "Clear our idea of which payments have not been seen by the user yet",
      "accountID": "Types.AccountID"
    },
    "cancelRequest": {
      "_description": "Cancel a request. Optionally delete an associated message",
      "conversationIDKey?": "ChatTypes.ConversationIDKey",
      "ordinal?": "ChatTypes.Ordinal",
      "requestID": "StellarRPCTypes.KeybaseRequestID"
    },
    "cancelPayment": {
      "_description": "Cancel a payment. Valid for payments of status 'claimable'. If showAccount is true, nav to the currently selected account when done.",
      "showAccount?": "boolean",
      "paymentID": "Types.PaymentID"
    },
    "createNewAccount": {
      "_description": "Add a new wallet to your account",
      "name": "string",
      "showOnCreation?": "boolean",
      "setBuildingTo?": "boolean"
    },
    "createdNewAccount": {
      "_description": "The service responded with an error or that the create new account operation succeeded",
      "accountID": "Types.AccountID",
      "showOnCreation?": "boolean",
      "setBuildingTo?": "boolean",
      "canError": {
        "name": "string",
        "error": "string"
      }
    },
    "exportSecretKey": {
      "_description": "Export a Stellar account's secret key",
      "accountID": "Types.AccountID"
    },
    "loadAssets": {
      "_description": "Refresh our list of assets for a given account",
      "accountID": "Types.AccountID"
    },
    "loadAccounts": {
      "_description": "Refresh our list of accounts"
    },
    "loadMorePayments": {
      "_description": "Scrolled down the list of payments for a given account",
      "accountID": "Types.AccountID"
    },
    "loadPayments": {
      "_description": "Refresh our list of payments for a given account",
      "accountID": "Types.AccountID"
    },
    "loadPaymentDetail": {
      "_description": "Load extra detail for one given payment",
      "accountID": "Types.AccountID",
      "paymentID": "Types.PaymentID"
    },
    "loadWalletDisclaimer": {
      "_description": "Load wallet disclaimer"
    },
    "walletDisclaimerReceived": {
      "_description": "Received wallet disclaimer",
      "accepted": "boolean"
    },
    "loadDisplayCurrencies": {
      "_description": "Load valid display currencies to choose from"
    },
    "markAsRead": {
      "_description": "Mark the given payment ID and anything older as read.",
      "accountID": "Types.AccountID",
      "mostRecentID": "Types.PaymentID"
    },
    "displayCurrenciesReceived": {
      "_description": "Update valid display currencies to choose from",
      "currencies": "Array<Types.Currency>"
    },
    "loadSendAssetChoices": {
      "_description": "Load valid assets for sending to user",
      "from": "Types.AccountID",
      "to": "string"
    },
    "sendAssetChoicesReceived": {
      "_description": "Update valid send assets to choose from",
      "sendAssetChoices": "Array<StellarRPCTypes.SendAssetChoiceLocal>"
    },
    "changeAccountName": {
      "_description": "Change the name of an account",
      "accountID": "Types.AccountID",
      "name": "string"
    },
    "changedAccountName": {
      "_description": "A response from the service after an account's name is changed",
      "accountID": "Types.AccountID",
      "canError": {
        "name": "string",
        "error": "string"
      }
    },
    "setAccountAsDefault": {
      "_description": "Change the default account",
      "accountID": "Types.AccountID"
    },
    "didSetAccountAsDefault": {
      "_description": "A response from the service after an account is set as the default",
      "accountID": "Types.AccountID"
    },
    "deleteAccount": {
      "_description": "Delete an account",
      "accountID": "Types.AccountID"
    },
    "deletedAccount": {
      "_description": "A response from the service after an account is deleted."
    },
    "loadDisplayCurrency": {
      "_description": "Load display currency for an account",
      "accountID": "?Types.AccountID",
      "setBuildingCurrency?": "boolean"
    },
    "displayCurrencyReceived": {
      "_description": "Update display currency for a certain account",
      "accountID": "?Types.AccountID",
      "currency": "Types.Currency",
      "setBuildingCurrency?": "boolean"
    },
    "changeDisplayCurrency": {
      "_description": "Change display currency for an account",
      "accountID": "Types.AccountID",
      "code": "Types.CurrencyCode"
    },
    "loadRequestDetail": {
      "_description": "Load a request's details",
      "requestID": "StellarRPCTypes.KeybaseRequestID"
    },
    "requestPayment": {
      "_description": "Request payment"
    },
    "requestedPayment": {
      "_description": "Successfully request payment",
      "kbRqID": "HiddenString",
      "lastSentXLM": "boolean",
      "requestee": "string"
    },
    "paymentDetailReceived": {
      "_description": "Update a payment with additional detail",
      "accountID": "Types.AccountID",
      "payment": "Types.PaymentDetail"
    },
    "paymentsReceived": {
      "_description": "Update our store of payments data",
      "accountID": "Types.AccountID",
      "paymentCursor": "?StellarRPCTypes.PageCursor",
      "oldestUnread": "Types.PaymentID",
      "payments": "Array<Types.PaymentResult>",
      "pending": "Array<Types.PaymentResult>"
    },
    "pendingPaymentsReceived": {
      "_description": "Received a new set of pending payments; replace existing ones with these",
      "accountID": "Types.AccountID",
      "pending": "Array<Types.PaymentResult>"
    },
    "recentPaymentsReceived": {
      "_description": "Received a fresh first page of recent payments",
      "accountID": "Types.AccountID",
      "paymentCursor": "?StellarRPCTypes.PageCursor",
      "oldestUnread": "Types.PaymentID",
      "payments": "Array<Types.PaymentResult>"
    },
    "requestDetailReceived": {
      "_description": "Store a request's details",
      "request": "StellarRPCTypes.RequestDetailsLocal"
    },
    "reviewedPaymentReceived": {
      "_description": "Update our store with the results of reviewing a built payment",
      "bid": "string",
      "reviewID": "number",
      "seqno": "number",
      "nextButton": "string",
      "banners?": "?Array<StellarRPCTypes.SendBannerLocal>",
    },
    "secretKeyReceived": {
      "_description": "Update our store with an exported secret key",
      "accountID": "Types.AccountID",
      "secretKey": "HiddenString"
    },
    "secretKeySeen": {
      "_description": "Clear exported secret keys from our store once they've been seen",
      "accountID": "Types.AccountID"
    },
    "selectAccount": {
      "_description": "Select an account. Optionally navigate to the account page.",
      "accountID": "Types.AccountID",
      "show?": "boolean"
    },
    "refreshPayments": {
      "_description": "In response to a notification, resync payment info",
      "accountID": "Types.AccountID",
      "paymentID": "Types.PaymentID"
    },
    "buildPayment": {
      "_description": "Send a potential payment to the service for validation"
    },
    "sendPayment": {
      "_description": "Perform sending a payment"
    },
    "sentPayment": {
      "_description": "Successfully sent a payment",
      "kbTxID": "HiddenString",
      "lastSentXLM": "boolean"
    },
    "sentPaymentError": {
      "_description": "Failed to send a payment",
      "error": "string"
    },
    "setBuildingAmount": {
      "_description": "Set building amount",
      "amount": "string"
    },
    "setBuildingCurrency": {
      "_description": "Set building currency",
      "currency": "string"
    },
    "setBuildingFrom": {
      "_description": "Set building from",
      "from": "Types.AccountID"
    },
    "setBuildingIsRequest": {
      "_description": "Set building isRequest",
      "isRequest": "boolean"
    },
    "setBuildingPublicMemo": {
      "_description": "Set building public memo",
      "publicMemo": "HiddenString"
    },
    "setBuildingRecipientType": {
      "_description": "Set building recipient type",
      "recipientType": "Types.CounterpartyType"
    },
    "setBuildingSecretNote": {
      "_description": "Set building secret note",
      "secretNote": "HiddenString"
    },
    "setBuildingTo": {
      "_description": "Set building to -- depends on recipientType",
      "to": "string"
    },
    "setLastSentXLM": {
      "_description": "Set whether last currency used to send was XLM",
      "lastSentXLM": "boolean",
      "writeFile": "boolean"
    },
    "setReadyToReview": {
      "_description": "Set whether the payment is ready to review",
      "readyToReview": "boolean"
    },
    "reviewPayment": {
      "_description": "Move to the confirm screen on a built payment."
    },
    "openSendRequestForm": {
      "_description": "Initialize and navigate to the send or request form. See docs for `setBuilding*` for param semantics.",
      "amount?": "string",
      "currency?": "string",
      "from?": "Types.AccountID",
      "isRequest?": "boolean",
      "publicMemo?": "HiddenString",
      "recipientType?": "Types.CounterpartyType",
      "secretNote?": "HiddenString",
      "to?": "string"
    },
    "linkExistingAccount": {
      "_description": "Link an existing Stellar account with this Keybase user.",
      "name": "string",
      "secretKey": "HiddenString",
      "showOnCreation?": "boolean",
      "setBuildingTo?": "boolean"
    },
    "linkedExistingAccount": {
      "_description": "The service responded with an error or that the link existing operation succeeded",
      "accountID": "Types.AccountID",
      "showOnCreation?": "boolean",
      "setBuildingTo?": "boolean",
      "canError": {
        "name": "string",
        "secretKey": "HiddenString",
        "error": "string"
      }
    },
    "rejectDisclaimer": {
      "_description": "Reject (temporarily) the Stellar account disclaimer"
    },
    "validateAccountName": {
      "_description": "Ask the service to validate an account name.",
      "name": "string"
    },
    "validatedAccountName": {
      "_description": "The service responded with an error or that the account name is valid.",
      "name": "string",
      "canError": {
        "name": "string",
        "error": "string"
      }
    },
    "validateSecretKey": {
      "_description": "Ask the service to validate an account secret key.",
      "secretKey": "HiddenString"
    },
    "validatedSecretKey": {
      "_description": "The service responded with an error or that the secret key is valid.",
      "secretKey": "HiddenString",
      "canError": {
        "secretKey": "HiddenString",
        "error": "string"
      }
    },
    "loadMobileOnlyMode": {
      "_description": "Ask the service for current mobile only mode for Stellar account.",
      "accountID": "Types.AccountID"
    },
    "loadedMobileOnlyMode": {
      "_description": "The service has responded with mobile only mode for Stellar account.",
      "accountID": "Types.AccountID",
      "enabled": "boolean"
    },
    "changeMobileOnlyMode": {
      "_description": "Change mobile only mode for Stellar account.",
      "accountID": "Types.AccountID",
      "enabled": "boolean"
    }
  }
}
