// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
         buildToolsVersion = "27.0.3"
         minSdkVersion = 16
         compileSdkVersion = 28
         targetSdkVersion = 28
         supportLibVersion = "27.1.1"
         googlePlayServicesVersion = "15.0.1"
     }

    repositories {
        jcenter()
        mavenCentral()
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.3.2'
        classpath 'com.github.triplet.gradle:play-publisher:1.1.5' // To publish from gradle
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

// Work around dependencies with old gradle versions depending on
// com.android.tools:common:25.3.3 , which disappeared from jcenter.
// Once these dependencies update their gradle version or otherwise fix
// the problem themselves, we can remove this.
//
// See https://github.com/DylanVann/react-native-fast-image/issues/366 .
subprojects {project ->
    if (project.name.contains('react-native-fast-image') || project.name.contains('react-native-image-picker')) {
            buildscript {
                repositories {
                maven { url = 'https://dl.bintray.com/android/android-tools/'  }
            }
        }
    }
}

allprojects {
    repositories {
        mavenLocal()
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
        jcenter()
        maven {
            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
            url "$rootDir/../../node_modules/react-native/android"
        }
        maven {
           // Local Maven repo containing AARs with JSC library built for Android
           url "$rootDir/../../node_modules/jsc-android/android"
       }
    }
}


subprojects {
    project.configurations.all {
        resolutionStrategy.eachDependency { details ->
            if (details.requested.group == 'com.android.support'
              && !details.requested.name.contains('multidex') ) {
                details.useVersion "27.1.1"
            }
        }
    }

    afterEvaluate {
        project -> if (project.hasProperty("android")) {
            android {
              compileSdkVersion rootProject.ext.compileSdkVersion
              defaultConfig {
                  targetSdkVersion rootProject.ext.targetSdkVersion
              }
            }
        }
    }
}
