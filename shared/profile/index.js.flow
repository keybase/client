// @flow
import {Component} from 'react'

import type {SimpleProofState, UserInfo, Proof} from '../constants/types/tracker'
import type {BioEditFns} from '../common-adapters/user-bio'
import type {Tab as FriendshipsTab, FriendshipUserInfo} from './friendships'
import type {MissingProof} from '../common-adapters/user-proofs'
import type {Folder} from '../folders/list'
import type {UserTeamShowcase} from '../constants/types/rpc-gen'

export type Props = {
  isYou: boolean,
  loading: boolean,
  bioEditFns: ?BioEditFns,
  trackerState: SimpleProofState,
  currentlyFollowing: boolean,
  currentFriendshipsTab: FriendshipsTab,
  refresh: () => void,
  serverActive: boolean,
  onAvatarLoaded?: () => void,
  onBack: ?() => void,
  onChat: () => void,
  onFollow: () => void,
  onUnfollow: () => void,
  onAcceptProofs: () => void,
  onChangeFriendshipsTab: (currentFriendshipsTab: FriendshipsTab) => void,
  onClickShowcaseOffer: () => void,
  onClickShowcased: (target: ?HTMLElement, team: UserTeamShowcase) => void,
  onMissingProofClick: (missingProof: MissingProof) => void,
  onFolderClick: (folder: Folder) => void,
  onUserClick: (username: string) => void,
  onViewProof: (proof: Proof) => void,
  onRecheckProof: (proof: Proof) => void,
  onRevokeProof: (proof: Proof) => void,
  onSearch: () => void,
  username: string,
  userInfo: UserInfo,
  proofs: Array<Proof>,
  tlfs: Array<Folder>,
  followersLoaded: boolean,
  followers: Array<FriendshipUserInfo>,
  following: Array<FriendshipUserInfo>,
  reason: ?string,
  error: ?string,
  onClickAvatar: () => void,
  onClickFollowers: () => void,
  onClickFollowing: () => void,
  waiting: boolean,
  youAreInTeams: boolean,
}

export default class Render extends Component<Props> {}
