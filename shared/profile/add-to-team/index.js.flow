// @flow
import {Component} from 'react'
import * as React from 'react'
import * as Types from '../../constants/types/teams'
import {type StylesCrossPlatform} from '../../styles'

export type RowProps = {
  canAddThem: boolean,
  checked: boolean,
  disabledReason: string,
  name: Types.Teamname,
  isOpen: boolean,
  onCheck: () => void,
  them: string,
}

export type Props = {
  customComponent?: ?React.Node,
  headerStyle?: StylesCrossPlatform,
  loaded: {[string]: boolean},
  onBack: () => void,
  onCancel?: () => void,
  onOpenRolePicker: (role: string, selectedRole: (Types.TeamRoleType) => void, styleCover?: Object) => void,
  onRoleChange: string => void,
  onSave: (role: string, selectedTeams: {[string]: boolean}) => void,
  onToggle: string => void,
  role: Types.TeamRoleType,
  selectedTeams: {[string]: boolean},
  setSelectedTeams: ({[string]: boolean}) => void,
  teamProfileAddList: Array<Types.TeamProfileAddList>,
  teamnames: Array<Types.Teamname>,
  them: string,
  waiting: boolean,
}

export default class AddToTeam extends Component<Props> {}
