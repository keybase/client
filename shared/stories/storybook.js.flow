// @flow
import * as React from 'react'
import * as PropProviders from './prop-providers'
export type SelectorMap = {
  [componentDisplayName: string]: (any => any) | Object,
}

declare export function storiesOf(name: string, module: any): any
declare export function action(name: string): any
declare export function perfDecorator(copiesToRender?: number): Function
declare export function scrollViewDecorator(): Function
declare export function createPropProvider(...maps: SelectorMap[]): (() => React.Node) => React.Node
declare export function createPropProviderWithCommon(...maps: SelectorMap[]): (() => React.Node) => React.Node
declare export function unexpected(name: string): () => void

declare export class Rnd {
  constructor(seed: number | string): Rnd;
  next(): number;
  randInt(low: number, high: number): number;
  generateString(regex: RegExp): string;
}

// Used to pass extra props to a component in a story without flow typing
declare export function propOverridesForStory(p: any): {}

export {PropProviders}
