/* @flow */

import React, {Component} from 'react'
import Avatar from './avatar'
import type {Props as IconProps} from './icon'

export type Props = $Shape<{
  style?: Object,
  styleTabBar?: Object,
  children?: Array<React$Element<ItemProps>>,
  tabBarOnBottom?: boolean,
  underlined?: boolean
}>

export default class TabBar extends Component<void, Props, void> { }

export type ItemProps = $Shape<{
  tabBarButton: React$Element,
  label: string,
  selected: boolean,
  selectedColor: string,
  onClick: () => void,
  style: Object,
  styleContainer: Object,
  children: React$Element
}>

export class TabBarItem extends Component<void, ItemProps, void> { }

export type TabBarButtonProps = $Shape<{
  selected?: boolean,
  source: {type: 'icon', icon: IconProps.type} | {type: 'avatar', avatar: Avatar},
  label?: string,
  badgeNumber?: ?number,
  style?: Object,
  styleContainer?: Object,
  styleBadge?: Object,
  styleIcon?: Object,
  styleBadgeNumber?: Object,
  styleLabel?: Object
}>

export class TabBarButton extends Component<void, TabBarButtonProps, void> { }
