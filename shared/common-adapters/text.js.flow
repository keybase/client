// @flow
import * as React from 'react'
import type {StylesCrossPlatform} from '../styles'
import {allTextTypes} from './text.shared'

type Background =
  | 'Announcements'
  | 'Documentation'
  | 'HighRisk'
  | 'Information'
  | 'Normal'
  | 'Success'
  | 'Terminal'

type TextType = $Keys<typeof allTextTypes>

type Props = {
  allowFontScaling?: boolean,
  allowHighlightText?: boolean, // if true, highlighttext through refs works
  backgroundMode?: Background,
  children?: React.Node,
  className?: string,
  ellipsizeMode?: 'head' | 'middle' | 'tail' | 'clip', // mobile only, defines how ellipsis will be put in if `lineClamp` is supplied
  lineClamp?: number,
  onClick?: ?(e: SyntheticEvent<>) => void | ?() => void,
  onClickURL?: ?string,
  onLongPress?: () => void,
  onPress?: void,
  plainText?: boolean,
  selectable?: boolean,
  style?: StylesCrossPlatform,
  title?: ?string,
  type: TextType,
  underline?: boolean,
}

type MetaType = {
  fontSize: number,
  colorForBackgroundMode: {[key: Background]: ?string},
  isLink?: true,
  styleOverride?: ?Object,
  isTerminal?: true,
}

declare class Text extends React.Component<Props> {
  highlightText: () => void;
}
declare function getStyle(
  type: TextType,
  backgroundMode?: ?Background,
  lineClamp?: ?number,
  clickable?: ?boolean
): Object

export {getStyle, allTextTypes}
export type {Background, MetaType, Props, TextType}
export default Text
