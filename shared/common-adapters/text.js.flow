// @flow
import {Component} from 'react'
import type {Context} from './terminal'

export type Background = 'Normal' | 'Announcements' | 'Success' | 'Information' | 'HighRisk' | 'Documentation' | 'Terminal'

export type TextType =
  'HeaderBig'
  | 'Header' | 'HeaderLink'
  | 'BodyBig' | 'BodyBigLink'
  | 'Body' | 'BodySemibold' | 'BodyPrimaryLink' | 'BodySecondaryLink' | 'BodyError' | 'BodySuccess'
  | 'BodySmall' | 'BodySmallSemibold' | 'BodySmallPrimaryLink' | 'BodySmallSecondaryLink' | 'BodySmallError' | 'BodySmallSuccess'
// Special styles
  | 'BodySemiboldItalic'
  | 'BodySmallInlineLink' | 'BodySmallSemiboldInlineLink'
  | 'Terminal' | 'TerminalComment' | 'TerminalEmpty'
  // 'BodySmallItalic' | 'BodySmallLink'
  // | 'BodyXSmall' | 'BodyXSmallLink'
  // | 'BadgeNumber'
  // | 'Error'

export type Props = {
  type: TextType,
  backgroundMode?: Background,
  inline?: boolean,
  link?: boolean,
  reversed?: boolean,
  onClick?: ?(e: SyntheticEvent) => void,
  onPress?: void,
  lineClamp?: number,
  style?: Object,
  children?: React$Element<*>,
  className?: string,
  contentEditable?: boolean,
  onKeyDown?: (e: SyntheticEvent) => void,
  onKeyUp?: (e: SyntheticEvent) => void
}

declare export default class Text extends Component<void, Props, void> {
  // static _colorStyleBackgroundMode: (backgroundMode: Background, type: $PropertyType<Props, 'type'>) => {color?: string};
  // static _inlineStyle: (type: $PropertyType<Props, 'type'>, context: Context) => Object;
  // static textStyle: (props: Props, context: Context) => Object;
}

// declare export var styles: Object
// declare export var specialStyles: Object

// declare function lineClamp (lines: number): Object
export type MetaType = {
  fontSize: number,
  colorForBackgroundMode: {[key: Background]: ?string},
  isLink?: true,
  prefix?: ?string,
  styleOverride?: ?Object,
  isTerminal?: true,
}

export var metaData: {[key: $PropertyType<Props, 'type'>]: MetaType} = {}
