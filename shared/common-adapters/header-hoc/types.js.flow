// @flow
import * as React from 'react'
import {type StylesCrossPlatform} from '../../styles'
import {type IconType} from '../icon.constants'
export type Action = {
  custom?: React.Node,
  label?: string, // TODO: make this required after updates are fully integrated
  icon?: IconType,
  iconColor?: string,
  onPress?: ?Function,
}
export type Props = {
  // TODO: remove these after updates are fully integrated
  onBack?: ?() => void,
  onCancel?: ?() => void,
  customCancelText?: string,
  rightActionLabel?: string,
  onRightAction?: ?() => void,

  // keep these
  badgeNumber?: number,
  borderless?: boolean,
  titleComponent?: React.Node,
  title?: string,
  leftAction?: 'back' | 'cancel', // defaults to 'back'
  onLeftAction?: ?() => void,
  leftActionText?: string, // defaults to 'cancel' when leftAction is 'cancel'
  hideBackLabel?: boolean,
  customComponent?: ?React.Node,
  customSafeAreaBottomStyle?: StylesCrossPlatform, // mobile only
  customSafeAreaTopStyle?: StylesCrossPlatform, // mobile only; use with `underNotch` route tag
  headerStyle?: StylesCrossPlatform,
  theme?: 'light' | 'dark', // defaults to 'light'
  rightActions?: (?Action)[],
  // for nav2. if you use the actual header, its already safe so you can opt out of another safe
  underNotch?: boolean,
}
export type LeftActionProps = {
  badgeNumber?: number,
  disabled?: boolean,
  customCancelText?: string,
  hasTextTitle?: boolean,
  hideBackLabel?: boolean,
  leftAction?: 'back' | 'cancel' | null,
  leftActionText?: string,
  theme?: 'light' | 'dark', // defaults to 'light'
  onLeftAction: ?() => void,
}
