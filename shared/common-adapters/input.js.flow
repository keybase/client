// @flow
import {Component} from 'react'

export type Props = {
  // if true we use a smarter algorithm to decide when we need to recalculate our height
  // might be safe to use this everywhere but i wanted to limit it to just chat short term
  smartAutoresize?: boolean,
  autoFocus?: boolean,
  className?: string,
  editable?: boolean,
  errorStyle?: ?Object,
  errorText?: ?string,
  floatingHintTextOverride?: ?string, // if undefined will use hintText. Use this to override hintText
  hideUnderline?: boolean,
  hintText?: ?string,
  inputStyle?: Object,
  multiline?: boolean,
  onBlur?: () => void,
  onClick?: (event: Event) => void,
  onChangeText?: (text: string) => void,
  onEnterKeyDown?: (event: SyntheticKeyboardEvent<>) => void,
  onFocus?: () => void,
  onKeyDown?: (event: SyntheticKeyboardEvent<>, isComposingIME: boolean) => void,
  onKeyUp?: (event: SyntheticKeyboardEvent<>, isComposingIME: boolean) => void,
  onSelectionChange?: ({selectionStart: number, selectionEnd: number}) => void,
  rowsMax?: number,
  maxLength?: number,
  rowsMin?: number,
  small?: boolean,
  smallLabel?: string,
  smallLabelStyle?: ?Object,
  style?: Object,
  type?: 'password' | 'text' | 'passwordVisible',
  value?: ?string,

  // Mobile only
  onEndEditing?: ?() => void,
  autoCapitalize?: 'none' | 'sentences' | 'words' | 'characters',
  autoCorrect?: boolean,
  keyboardType?:
    | 'default'
    | 'email-address'
    | 'numeric'
    | 'phone-pad'
    | 'ascii-capable'
    | 'numbers-and-punctuation'
    | 'url'
    | 'number-pad'
    | 'name-phone-pad'
    | 'decimal-pad'
    | 'twitter'
    | 'web-search',
  returnKeyType?: 'done' | 'go' | 'next' | 'search' | 'send',
  selectTextOnFocus?: boolean,
}

declare export default class Input extends Component<Props> {
  setNativeProps(props: Object): {};
  blur: () => void;
  focus: () => void;
  select: () => void;
  moveCursorToEnd: () => void;
}
