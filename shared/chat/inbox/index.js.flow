// @flow
import * as React from 'react'

import type {ConversationIDKey} from '../../constants/chat'

export type RowItemSmall = {
  type: 'small',
  conversationIDKey: ConversationIDKey,
}

export type RowItemBigTeamsLabel = {
  type: 'bigTeamsLabel',
  isFiltered: boolean,
}
export type RowItemBigHeader = {
  type: 'bigHeader',
  teamname: string,
}
export type RowItemBig = {
  type: 'big',
  conversationIDKey: ?ConversationIDKey,
  teamname: string,
  channelname: string,
}

export type RowItemDivider = {
  type: 'divider',
  isBadged: boolean,
}

export type RowItem = RowItemSmall | RowItemBigTeamsLabel | RowItemBigHeader | RowItemBig | RowItemDivider

export type RouteState = {
  smallTeamsExpanded: boolean,
}

export type Props = {
  bigTeamsBadgeCount: number,
  children?: React$Element<*>,
  filter: string,
  filterFocusCount: number,
  isActiveRoute: boolean,
  isLoading: boolean,
  loadInbox: () => void,
  nowOverride?: number, // just for dumb rendering
  onNewChat: () => void,
  onSelectUp: () => void,
  onSelectDown: () => void,
  onHotkey: () => void,
  onSetFilter: (filter: string) => void,
  onUntrustedInboxVisible: (conversationIDKeys: Array<ConversationIDKey>) => void,
  rows: Array<RowItem>,
  routeState: RouteState,
  setRouteState: RouteState => void,
  showBuildATeam: boolean,
  showNewConversation: boolean,
  showSmallTeamsExpandDivider: boolean,
  smallIDsHidden: Array<ConversationIDKey>,
  smallTeamsHiddenBadgeCount: number,
  smallTeamsHiddenRowCount: number,
  toggleSmallTeamsExpanded: () => void,
}

export default class Inbox extends React.Component<Props> {}
