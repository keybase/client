// @flow
import * as React from 'react'
import {List} from 'immutable'

import type {ConversationIDKey} from '../../constants/chat'

export type RowItem =
  | {
      type: 'small',
      conversationIDKey: ConversationIDKey,
    }
  | {
      type: 'bigTeamsLabel',
      isFiltered: boolean,
    }
  | {
      type: 'bigHeader',
      teamname: string,
    }
  | {
      type: 'big',
      conversationIDKey: ?ConversationIDKey,
      teamname: string,
      channelname: ?string,
    }
  | {
      type: 'divider',
      isBadged: boolean,
    }

export type Props = {
  bigTeamsBadgeCount: number,
  children?: React$Element<*>,
  filter: string,
  filterFocusCount: number,
  isActiveRoute: boolean,
  isLoading: boolean,
  loadInbox: () => void,
  nowOverride?: number, // just for dumb rendering
  onNewChat: () => void,
  onSelectUp: () => void,
  onSelectDown: () => void,
  onHotkey: () => void,
  onSetFilter: (filter: string) => void,
  onUntrustedInboxVisible: (conversationIDKey: ConversationIDKey, rowsVisible: number) => void,
  rows: List<RowItem>,
  showBuildATeam: boolean,
  showNewConversation: boolean,
  showSmallTeamsExpandDivider: boolean,
  smallTeamsHiddenBadgeCount: number,
  smallTeamsHiddenRowCount: number,
  toggleSmallTeamsExpanded: () => void,
}

export default class Inbox extends React.Component<Props> {}
