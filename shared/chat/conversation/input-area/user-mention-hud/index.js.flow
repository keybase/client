// @flow
import React from 'react'

/*
 * This Flow type file exists because of a Flow error in
 * `user-mention-hud/index.js` where Flow will get confused when attempting to
 * type the incoming props to MentionHud.
 *
 * The issue is that recompose relies on Flow to correctly infer the types for
 * the higher order component composition.
 *
 * compoose(hoc1, hoc2, hoc3)(component) becomes Hoc1(Hoc2(Hoc3(component))).
 * Flow will lose typing on Hoc1.
 *
 * Adding this Flow file successfully adds types back to MentionHud via compose(...).
 *
 * TODO: Investigate if another typing stategy for Input > PlatformInput >
 * MentionHudContainer > MentionHud that will not cause a Flow error
 */
export type MentionContainer = {}

export type MentionHudProps = {
  conversationIDKey: string,
  filter: string,
  teamType: 'adhoc' | 'small' | 'big',
  loading: boolean,
  onPickUser: (string, options?: {notUser: boolean}) => void,
  onSelectUser: string => void,
  pickSelectedUserCounter: number,
  selectDownCounter: number,
  selectUpCounter: number,
  selectedIndex: number,
  setSelectedIndex: number => void,
  users: Array<{|fullName: string, username: string|}>,
  _generalChannelConversationIDKey: string,
  _loadParticipants: string => void,
}

export type MentionDatum = {
  username: string,
  fullName: string,
  selected: boolean,
  onClick: () => void,
  onHover: () => void,
}

export type HudProps<D: {key: string, selected: boolean}> = {
  rowRenderer: (i: number, d: D) => React$Element<any>,
  data: Array<D>,
  loading: boolean,
  style: Object,
  selectedIndex: number,
}

// $FlowIssue
export default class Hud extends React.Component<HudProps<*>> {}

class MentionHud extends React.Component<MentionHudProps> {}
class MentionRowRenderer extends React.Component<MentionDatum> {}

export {MentionHud, MentionRowRenderer}
