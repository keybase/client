// @flow
import {Component} from 'react'
import {List} from 'immutable'

import type {ConversationIDKey, AttachmentMessage, Message, MessageID, MetaDataMap, ServerMessage, SupersedeInfo, FollowingMap} from '../../constants/chat'
import type {Options} from './messages'

export type OptionsFn = (message: Message, prevMessage: Message, isFirstMessage: boolean, isSelected: boolean, isScrolling: boolean, key: any, style: Object, onAction: (message: ServerMessage, event: any) => void, onShowEditor: (message: Message, event: any) => void, isEditing: boolean) => Options

export type Props = {
  firstNewMessageID: ?MessageID,
  listScrollDownState: number,
  headerMessages: List<Message>,
  messages: List<Message>,
  editingMessage: Message,
  metaDataMap: MetaDataMap,
  you: string,
  followingMap: FollowingMap,
  moreToLoad: boolean,
  onDeleteMessage: (message: Message) => void,
  onShowEditor: (message: Message) => void,
  onEditMessage: (message: Message, body: string) => void,
  onFocusInput: () => void,
  onLoadAttachment: (messageID: MessageID, filename: string) => void,
  onLoadMoreMessages: () => void,
  onMessageAction: (message: ServerMessage) => void,
  onOpenConversation: (conversationIDKey: ConversationIDKey) => void,
  onOpenInFileUI: (filename: string) => void,
  onOpenInPopup: (message: AttachmentMessage) => void,
  onRetryAttachment: (message: AttachmentMessage) => void,
  onRetryMessage: (outboxID: string) => void,
  selectedConversation: ?ConversationIDKey,
  validated: boolean,
  sidePanelOpen: boolean,
  editLastMessageCounter: number,
  optionsFn: OptionsFn,
}

export default class ConversationList extends Component<void, Props, void> {
  onEditLastMessage: () => void
}
