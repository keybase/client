// @flow
import {Component} from 'react'
import {List} from 'immutable'

import type {BannerMessage} from './banner'
import type {AttachmentInput, AttachmentType, AttachmentMessage, ConversationIDKey, FinalizeInfo, Message, MessageID, MetaDataMap, FollowingMap, RekeyInfo, ServerMessage, SupersedeInfo} from '../../constants/chat'

export type Props = {
  bannerMessage: ?BannerMessage,
  emojiPickerOpen: boolean,
  finalizeInfo: ?FinalizeInfo,
  firstNewMessageID: ?MessageID,
  followingMap: FollowingMap,
  inputText: string,
  isLoading: boolean,
  listScrollDownState: number,
  messages: List<Message>,
  metaDataMap: MetaDataMap,
  moreToLoad: boolean,
  muted: boolean,
  onAddParticipant: () => void,
  onAttach: (inputs: Array<AttachmentInput>) => void,
  onBack: () => void,
  onDeleteMessage: (message: Message) => void,
  onEditMessage: (message: Message, body: string) => void,
  onLoadAttachment: (messageID: MessageID, filename: string) => void,
  onLoadMoreMessages: () => void,
  onMessageAction: (message: ServerMessage) => void,
  onMuteConversation: (muted: boolean) => void,
  onOpenConversation: (conversationIDKey: ConversationIDKey) => void,
  onOpenFolder: () => void,
  onOpenInFileUI: (filename: string) => void,
  onOpenInPopup: (message: AttachmentMessage) => void,
  onOpenNewerConversation: () => void,
  onPostMessage: (text: string) => void,
  onRetryAttachment: (message: AttachmentMessage) => void,
  onRetryMessage: (outboxID: string) => void,
  onSelectAttachment: (input: AttachmentInput) => void,
  onShowProfile: (username: string) => void,
  onStoreInputText: (inputText: string) => void,
  onToggleSidePanel: () => void,
  participants: List<string>,
  rekeyInfo: ?RekeyInfo,
  restartConversation: () => void,
  selectedConversation: ?ConversationIDKey,
  setInputText: (text: string) => void,
  sidePanelOpen: boolean,
  supersededBy: ?SupersedeInfo,
  supersedes: ?SupersedeInfo,
  triggerListScrollDown: () => void,
  validated: boolean,
  you: string,
  // TODO: better types will remove these
  inputProps: any,
  listProps: any,
  headerProps: any,
}

export default class Conversation extends Component<void, Props, void> { }
