diff --git a/node_modules/@mattermost/react-native-paste-input/android/src/main/java/com/mattermost/pasteinput/PasteInputManager.kt b/node_modules/@mattermost/react-native-paste-input/android/src/main/java/com/mattermost/pasteinput/PasteInputManager.kt
index 8cb70cf..92f50e0 100644
--- a/node_modules/@mattermost/react-native-paste-input/android/src/main/java/com/mattermost/pasteinput/PasteInputManager.kt
+++ b/node_modules/@mattermost/react-native-paste-input/android/src/main/java/com/mattermost/pasteinput/PasteInputManager.kt
@@ -18,7 +18,7 @@ class PasteInputManager(reactContext: ReactContext) : ReactTextInputManager() {
 
   companion object {
     const val REACT_CLASS = "PasteInput"
-    const val CACHE_DIR_NAME = "mmPasteInput"
+    const val CACHE_DIR_NAME = "Audio"
   }
 
   override fun getName(): String {
diff --git a/node_modules/@mattermost/react-native-paste-input/ios/PasteInputTextView.m b/node_modules/@mattermost/react-native-paste-input/ios/PasteInputTextView.m
index 73ed099..a0326ae 100644
--- a/node_modules/@mattermost/react-native-paste-input/ios/PasteInputTextView.m
+++ b/node_modules/@mattermost/react-native-paste-input/ios/PasteInputTextView.m
@@ -35,20 +35,23 @@
 }
 
 -(void)paste:(id)sender {
-    [super paste:sender];
-    
     UIPasteboard *pasteboard = [UIPasteboard generalPasteboard];
 
-    BOOL hasStrings = pasteboard.hasStrings;
+    /*BOOL hasStrings = pasteboard.hasStrings;
     if (hasStrings) {
         NSArray<NSString *> *strs = pasteboard.strings;
         for (NSString *s in strs) {
             hasStrings = [s length] != 0 && ![s containsString:@"<img src="];
         }
-    }
-    if (pasteboard.hasURLs || hasStrings || pasteboard.hasColors) {
+    }*/
+    
+    if ([pasteboard hasStrings] && ![pasteboard hasImages]) {
+        [super paste:sender];
         return;
     }
+    /*if (pasteboard.hasURLs || hasStrings || pasteboard.hasColors) {
+        return;
+    }*/
     
     if (_onPaste) {
         NSArray<NSDictionary *> *files = [pasteboard getCopiedFiles];
@@ -56,11 +59,11 @@
             _onPaste(@{
                 @"data": files,
             });
-        } else {
             return;
         }
     }
     
+    [super paste:sender];
     // Dismiss contextual menu
     [self resignFirstResponder];
 }
diff --git a/node_modules/@mattermost/react-native-paste-input/ios/PasteInputView.h b/node_modules/@mattermost/react-native-paste-input/ios/PasteInputView.h
index be73123..900fd06 100644
--- a/node_modules/@mattermost/react-native-paste-input/ios/PasteInputView.h
+++ b/node_modules/@mattermost/react-native-paste-input/ios/PasteInputView.h
@@ -10,7 +10,7 @@
 
 NS_ASSUME_NONNULL_BEGIN
 
-@interface PasteInputView : RCTMultilineTextInputView
+@interface PasteInputView : RCTMultilineTextInputView<UIDropInteractionDelegate>
     @property (nonatomic, assign) BOOL disableCopyPaste;
     @property (nonatomic, copy, nullable) RCTDirectEventBlock onPaste;
 @end
diff --git a/node_modules/@mattermost/react-native-paste-input/ios/PasteInputView.m b/node_modules/@mattermost/react-native-paste-input/ios/PasteInputView.m
index 4d3b464..026d3ff 100644
--- a/node_modules/@mattermost/react-native-paste-input/ios/PasteInputView.m
+++ b/node_modules/@mattermost/react-native-paste-input/ios/PasteInputView.m
@@ -24,6 +24,7 @@
     _backedTextInputView = [[PasteInputTextView alloc] initWithFrame:self.bounds];
     _backedTextInputView.autoresizingMask = UIViewAutoresizingFlexibleWidth | UIViewAutoresizingFlexibleHeight;
     _backedTextInputView.textInputDelegate = self;
+    [_backedTextInputView addInteraction:[[UIDropInteraction alloc] initWithDelegate:self]];
 
     [self addSubview:_backedTextInputView];
   }
@@ -31,6 +32,11 @@
   return self;
 }
 
+- (BOOL)dropInteraction:(UIDropInteraction *)interaction canHandleSession:(id<UIDropSession>)session
+{
+  return NO;
+}
+
 - (id<RCTBackedTextInputViewProtocol>)backedTextInputView
 {
   return _backedTextInputView;
diff --git a/node_modules/@mattermost/react-native-paste-input/ios/UIPasteboard+GetImageInfo.m b/node_modules/@mattermost/react-native-paste-input/ios/UIPasteboard+GetImageInfo.m
index df52bb7..92872b7 100644
--- a/node_modules/@mattermost/react-native-paste-input/ios/UIPasteboard+GetImageInfo.m
+++ b/node_modules/@mattermost/react-native-paste-input/ios/UIPasteboard+GetImageInfo.m
@@ -54,7 +54,10 @@
         }
         
         NSString *tempFilename = [NSString stringWithFormat:@"%@.%@", [[NSProcessInfo processInfo] globallyUniqueString], extension];
-        NSURL *tempFileURL = [NSURL fileURLWithPath:[NSTemporaryDirectory() stringByAppendingPathComponent:tempFilename]];
+        NSString * kbroot = [NSHomeDirectory() stringByAppendingString:@"/Library/Caches/AV"];
+        NSError * error = nil;
+        [[NSFileManager defaultManager] createDirectoryAtPath:kbroot withIntermediateDirectories:YES attributes:nil error:&error];
+        NSURL *tempFileURL = [NSURL fileURLWithPath:[kbroot stringByAppendingPathComponent:tempFilename]];
         BOOL success = [fileData writeToURL:tempFileURL atomically:YES];
         if (success) {
           added = YES;
@@ -85,6 +88,9 @@
     CGImageSourceRef source = CGImageSourceCreateWithData(cfdata, nil);
     CGImageRef imageRef = CGImageSourceCreateImageAtIndex(source, 0, nil);
     image = [[UIImage alloc] initWithCGImage:imageRef];
+    CFRelease(imageRef);
+    CFRelease(source);
+    CFRelease(cfdata);
   } else {
     image = (UIImage *)imageData;
   }
