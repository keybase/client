diff --git a/node_modules/react-native/Libraries/Components/Keyboard/KeyboardAvoidingView.js b/node_modules/react-native/Libraries/Components/Keyboard/KeyboardAvoidingView.js
index 2f48f9e..127c5f3 100644
--- a/node_modules/react-native/Libraries/Components/Keyboard/KeyboardAvoidingView.js
+++ b/node_modules/react-native/Libraries/Components/Keyboard/KeyboardAvoidingView.js
@@ -22,6 +22,7 @@ import Platform from '../../Utilities/Platform';
 import {type EventSubscription} from '../../vendor/emitter/EventEmitter';
 import AccessibilityInfo from '../AccessibilityInfo/AccessibilityInfo';
 import View from '../View/View';
+import Dimensions from '../../Utilities/Dimensions';
 import Keyboard from './Keyboard';
 import * as React from 'react';
 
@@ -100,6 +101,16 @@ class KeyboardAvoidingView extends React.Component<Props, State> {
       );
     }
 
+    // just use the keyboard height
+    if (this.props.rawHeight) {
+    // showing?
+     	const windowHeight = Dimensions.get('window').height
+	if (keyboardFrame.screenY + keyboardFrame.height === windowHeight) {
+	   return keyboardFrame.height
+	} 
+	return 0;
+    }
+
     // Calculate the displacement needed for the view such that it
     // no longer overlaps with the keyboard
     return Math.max(frame.y + frame.height - keyboardY, 0);
@@ -129,7 +140,11 @@ class KeyboardAvoidingView extends React.Component<Props, State> {
 
   _updateBottomIfNecessary = async () => {
     if (this._keyboardEvent == null) {
-      this.setState({bottom: 0});
+      if (Keyboard.isVisible()) {
+	     this.setState({bottom: Keyboard.metrics()?.height ?? 0});
+      } else {
+	     this.setState({bottom: 0});
+      }
       return;
     }
 
diff --git a/node_modules/react-native/Libraries/Lists/VirtualizedList.js b/node_modules/react-native/Libraries/Lists/VirtualizedList.js
index e948a85..48952cf 100644
--- a/node_modules/react-native/Libraries/Lists/VirtualizedList.js
+++ b/node_modules/react-native/Libraries/Lists/VirtualizedList.js
@@ -25,6 +25,7 @@ import RefreshControl from '../Components/RefreshControl/RefreshControl';
 import ScrollView from '../Components/ScrollView/ScrollView';
 import View from '../Components/View/View';
 import Batchinator from '../Interaction/Batchinator';
+import Platform from '../Utilities/Platform';
 import {findNodeHandle} from '../ReactNative/RendererProxy';
 import flattenStyle from '../StyleSheet/flattenStyle';
 import StyleSheet from '../StyleSheet/StyleSheet';
@@ -1843,9 +1844,14 @@ export default class VirtualizedList extends StateSafePureComponent<
 }
 
 const styles = StyleSheet.create({
-  verticallyInverted: {
-    transform: [{scaleY: -1}],
-  },
+  verticallyInverted:
+    Platform.OS === 'android'
+      ? {
+          scaleY: -1,
+        }
+      : {
+          transform: [{scaleY: -1}]
+        },
   horizontallyInverted: {
     transform: [{scaleX: -1}],
   },
