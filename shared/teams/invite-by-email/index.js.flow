// @flow
import * as React from 'react'
import {type TeamRoleType} from '../../constants/types/teams'
import {isMobile} from '../../constants/platform'

// Note: 'on Android the entire display name is passed in the givenName field. middleName and familyName will be empty strings.'
export type ContactProps = {
  recordID: string,
  company: string,
  emailAddresses: Array<{label: string, email: string}>,
  familyName: string,
  givenName: string,
  middleName: string,
  phoneNumbers: Array<{label: string, number: string}>,
  hasThumbnail: boolean,
  thumbnailPath: string,
  // Postal addresses, etc. - unused
}

export type ContactDisplayProps = {
  name: string,
  email?: string,
  phoneNo?: string,
  thumbnailPath?: string,
  label: string,
  recordID: string,
}

export type ContactRowProps = {
  contact: ContactDisplayProps,
  id: string,
  loading?: boolean,
  onClick?: () => void,
  selected?: boolean,
}

export type Props = {
  invitees: string,
  name: string,
  onClose: () => void,
  onInvite: () => void,
  onInviteesChange: (invitees: string) => void,
  onOpenRolePicker: (currentSelectedRole: TeamRoleType, selectedRoleCallback: (TeamRoleType) => void) => void,
  onRoleChange: (role: TeamRoleType) => void,
  role: TeamRoleType,
}

export type MobileProps = {
  invitee: string,
  invited: Array<{contactID: string, address?: string}>,
  loadingInvites: any, // TODO typing
  name: string,
  onClose: () => void,
  onInviteEmail: (invitee: string) => void,
  onInvitePhone: (invitee: string) => void,
  onUninvite: (invitee: string) => void,
  onOpenRolePicker: (currentSelectedRole: TeamRoleType, selectedRoleCallback: (TeamRoleType) => void) => void,
  onRoleChange: (role: TeamRoleType) => void,
  addInvitee: (contact: ContactDisplayProps) => void,
  removeInvitee: (contact: ContactDisplayProps) => void,
  role: TeamRoleType,
  contacts: Array<ContactProps>,
  contactRowProps: Array<ContactRowProps>,
  hasPermission: boolean,
}

declare export class InviteByEmailDesktop extends React.Component<Props> {}
declare export class InviteByEmailMobile extends React.Component<MobileProps> {}

export default (isMobile ? InviteByEmailMobile : InviteByEmailDesktop)
