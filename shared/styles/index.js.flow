// @flow
// Styles from our designers
import type {Background} from '../common-adapters/text'
import * as CSS from './css'
export {default as globalColors} from './colors'

declare export var transition: (...properties: Array<string>) => Object

// Flow gets very confused if I mark these as CSS._StylesCrossPlatform. This fixes the common pattern of using
// spread like {...globalStyles.fontBold, width: 123} etc but it breaks using them directly like
// style={globalStyles.fontBold}. It does work if you do style={{...globalStyles.fontBold}} though
type _fakeFontDefSeeCommentsOnThisStyle = {|fontFamily: 'OpenSans', fontWeight: '700', fontStyle: 'normal'|}
declare export var globalStyles: {
  fillAbsolute: {|bottom: 0, left: 0, position: 'absolute', right: 0, top: 0|},
  flexBoxCenter: {|alignItems: 'center', justifyContent: 'center'|},
  flexBoxColumn: {|flexDirection: 'column'|},
  flexBoxRow: {|flexDirection: 'row'|},
  flexGrow: {|flexGrow: 1|},
  fontBold: {|fontFamily: 'OpenSans', fontWeight: '700', fontStyle: 'normal'|},
  fontRegular: _fakeFontDefSeeCommentsOnThisStyle,
  fontSemibold: _fakeFontDefSeeCommentsOnThisStyle,
  fontTerminal: _fakeFontDefSeeCommentsOnThisStyle,
  fontTerminalSemibold: _fakeFontDefSeeCommentsOnThisStyle,
  fullHeight: {|height: '100%'|},
  italic: _fakeFontDefSeeCommentsOnThisStyle,
  loadingTextStyle: CSS._StylesCrossPlatform,
  rounded: {|borderRadius: 3|},
}
declare export var desktopStyles: {
  clickable?: CSS._StylesDesktop,
  fadeOpacity?: CSS._StylesDesktop,
  noSelect?: CSS._StylesDesktop,
  scrollable?: CSS._StylesDesktop, // TODO this is used a lot of places like it's a global style but we should use scrollview instead
  windowDragging?: CSS._StylesDesktop,
  windowDraggingClickable?: CSS._StylesDesktop,
}
declare export var mobileStyles: {}
declare export var globalMargins: {|
  xtiny: number,
  tiny: number,
  xsmall: number,
  small: number,
  medium: number,
  mediumLarge: number,
  large: number,
  xlarge: number,
|}
declare export var fileUIName: string
declare export var statusBarHeight: number
declare export var hairlineWidth: number
declare export function backgroundURL(...path: Array<string>): string
declare export function styleSheetCreate(obj: Object): Object

type _Elem = Object | null | false | void
// CollapsibleStyle is a generic version of ?StylesMobile and family,
// slightly extended to support "isFoo && myStyle".
export type CollapsibleStyle = _Elem | $ReadOnlyArray<_Elem>
// This has to return any, since there are still components with style
// fields erroneously typed to not accept an array.
//
// TODO: Fix all of those, then type the return value.
declare export function collapseStyles(styles: $ReadOnlyArray<CollapsibleStyle>): any

declare export var windowStyle: {
  minWidth: number,
  minHeight: number,
  width: number,
  height: number,
}

declare export function platformStyles({|
  common?: CSS._StylesCrossPlatform,
  isIOS?: CSS._StylesMobile,
  isAndroid?: CSS._StylesMobile,
  isMobile?: CSS._StylesMobile,
  isElectron?: CSS._StylesDesktop,
|}): CSS._StylesCrossPlatform

declare export function glamorous(
  Component: any // React.ComponentType<P>
): (...styles: Array<any>) => any // React.Component<P>

declare export var isMobile: boolean
declare export var isIPhoneX: boolean

declare export var backgroundModeToColor: {[key: Background]: string}
export type {StylesDesktop, StylesMobile, StylesCrossPlatform} from './css'
