// @flow
import {Component} from 'react'
import type {Time} from '../../constants/types/flow-types'
import type {SimpleProofState} from '../../constants/tracker'

type InviteBase = {
  id: string,
  created: Time,
}

export type PendingEmailInvite = {
  type: 'pending-email',
  email: string,
} & InviteBase

export type PendingURLInvite = {
  type: 'pending-url',
  url: string,
} & InviteBase

export type PendingInvite = PendingEmailInvite | PendingURLInvite

export type AcceptedInvite = {
  username: string,
  fullname: string,
  currentlyFollowing: boolean,
  trackerState: SimpleProofState,
} & InviteBase

export type Props = {
  inviteEmail: string,
  inviteMessage: string,
  showMessageField: boolean,
  emailError: boolean,
  pendingInvites: Array<PendingInvite>,
  acceptedInvites: Array<AcceptedInvite>,
  onChangeInviteEmail: (inviteEmail: string) => void,
  onChangeInviteMessage: (inviteMessage: string) => void,
  onClickUser: (username: string) => void,
  onReclaimInvitation: (invitationId: string) => void,
  onRefresh: () => void,
  onGenerateInvitation: () => void,
  waitingForResponse: boolean,
}

export default class Invites extends Component<void, Props, void> {}
